increase_regent_powers_effect = {
	if = {
		limit = {
			primary_title = {
				has_law = regency_power_0
			}
		}
		primary_title = {
			add_law = regency_power_1
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_1
			}
		}
		primary_title = {
			add_law = regency_power_2
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_2
			}
		}
		primary_title = {
			add_law = regency_power_3
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_3
			}
		}
		primary_title = {
			add_law = regency_power_4
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_4
			}
		}
		primary_title = {
			add_law = regency_power_5
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_5
			}
		}
		primary_title = {
			add_law = regency_power_6
		}
	}
}

increase_regent_powers_twice_effect = {
	increase_regent_powers_effect = yes
	increase_regent_powers_effect = yes
}

decrease_regent_powers_effect = {
	if = {
		limit = {
			primary_title = {
				has_law = regency_power_6
			}
		}
		primary_title = {
			add_law = regency_power_5
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_5
			}
		}
		primary_title = {
			add_law = regency_power_4
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_4
			}
		}
		primary_title = {
			add_law = regency_power_3
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_3
			}
		}
		primary_title = {
			add_law = regency_power_2
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_2
			}
		}
		primary_title = {
			add_law = regency_power_1
		}
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_1
			}
		}
		primary_title = {
			add_law = regency_power_0
		}
	}
}

# No civil war happened
regency_setup_nice_effect = {
	primary_title = {
		add_law = regency_power_1
		if = {
			limit = {
				has_dlc = "Zeus"
			}
			add_law = {
				law = vassal_wars_law_0
				cooldown = no
				opinion_effect = no
			}
		}
		if = {
			limit = {
				has_dlc = "Charlemagne"
			}
			add_law = {
				law = vice_royalty_0
				cooldown = no
				opinion_effect = no
			}
		}
	}
}

# The Tenno or Shogun fought and lost
regency_setup_not_nice_effect = {
	primary_title = {
		add_law = regency_power_3
		if = {
			limit = {
				has_dlc = "Zeus"
			}
			add_law = {
				law = vassal_wars_law_0
				cooldown = no
				opinion_effect = no
			}
		}
		if = {
			limit = {
				has_dlc = "Charlemagne"
			}
			add_law = {
				law = vice_royalty_0
				cooldown = no
				opinion_effect = no
			}
		}
	}
}

# Used when the title changes and as part of usurpation handling
copy_regency_setup_effect = {
	if = {
		limit = {
			primary_title = {
				has_law = regency_power_6
			}
		}
		set_character_flag = regency_power_6
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_5
			}
		}
		set_character_flag = regency_power_5
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_4
			}
		}
		set_character_flag = regency_power_4
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_3
			}
		}
		set_character_flag = regency_power_3
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_2
			}
		}
		set_character_flag = regency_power_2
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_1
			}
		}
		set_character_flag = regency_power_1
	}
	else_if = {
		limit = {
			primary_title = {
				has_law = regency_power_0
			}
		}
		set_character_flag = regency_power_0
	}
}

# Used when the title changes and as part of usurpation handling
paste_regency_setup_effect = {
	if = {
		limit = {
			has_character_flag = regency_power_0
		}
		primary_title = {
			add_law = regency_power_0
		}
	}
	else_if = {
		limit = {
			has_character_flag = regency_power_1
		}
		primary_title = {
			add_law = regency_power_1
		}
	}
	else_if = {
		limit = {
			has_character_flag = regency_power_2
		}
		primary_title = {
			add_law = regency_power_2
		}
	}
	else_if = {
		limit = {
			has_character_flag = regency_power_3
		}
		primary_title = {
			add_law = regency_power_3
		}
	}
	else_if = {
		limit = {
			has_character_flag = regency_power_4
		}
		primary_title = {
			add_law = regency_power_4
		}
	}
	else_if = {
		limit = {
			has_character_flag = regency_power_5
		}
		primary_title = {
			add_law = regency_power_5
		}
	}
	else_if = {
		limit = {
			has_character_flag = regency_power_6
		}
		primary_title = {
			add_law = regency_power_6
		}
	}
	clr_character_flag = regency_power_0
	clr_character_flag = regency_power_1
	clr_character_flag = regency_power_2
	clr_character_flag = regency_power_3
	clr_character_flag = regency_power_4
	clr_character_flag = regency_power_5
	clr_character_flag = regency_power_6
}

# You DO NOT take the Chrysanthemum Throne if you are not part of the Imperial Family!
avoid_chrysanthemum_throne_usurpation_effect = {
	hidden_tooltip = {
		# Flag the Tenno to ensure he keeps his government and that he isn't renamed
		set_character_flag = temporarily_japanese_imperial

		# Flag the Tenno to track regency laws
		copy_regency_setup_effect = yes
		
		# Set up opinion modifiers to track vassals
		any_vassal = {
			limit = {
				NOT = {
					tier = king
				}
			}
			set_character_flag = i_am_ct_vassal
			log = "[This.GetBestName] should be a CT vassal!"
		}
		
		# Set up opinion modifier to track Permanent Regent and destroy any kingdoms belonging to the PR
		if = {
			limit = {
				trait = under_regency
			}
			any_vassal = {
				limit = {
					trait = japanese_regent
				}
				set_character_flag = i_am_pr
				if = {
					limit = {
						tier = king
					}
					any_demesne_title = {
						limit = {
							tier = king
						}
						unsafe_destroy_landed_title = THIS
					}
					set_character_flag = i_am_ct_vassal
				}
			}
		}
		# Destroy k_chrysanthemum_throne
		if = {
			limit = {
				primary_title = {
					has_law = agnatic_succession
				}
			}
			set_character_flag = agnatic_succession
		}
		else = {
			set_character_flag = true_cognatic_succession
		}
		k_chrysanthemum_throne = {
			unsafe_destroy_landed_title = THIS
		}
	}
}

# Undoes the temporary destruction of the Chrysanthemum Throne title and restores lower tier vassals and the PR
restore_chrysanthemum_throne_regent_and_vassals_effect = {
	hidden_tooltip = {
		# Recreate k_chrysanthemum_throne
		grant_title = k_chrysanthemum_throne
		
		# Ensure k_chrysanthemum_throne is the primary
		k_chrysanthemum_throne = {
			make_primary_title = yes
		}
		
		# Gender law
		if = {
			limit = {
				has_character_flag = agnatic_succession
			}
			primary_title = {
				add_law = agnatic_succession
			}
			clr_character_flag = agnatic_succession
		}
		else = {
			primary_title = {
				add_law = true_cognatic_succession
			}
			clr_character_flag = true_cognatic_succession
		}
		
		# Restore regency laws
		paste_regency_setup_effect = yes
		
		# Restore vassals
		any_playable_ruler = {
			limit = {
				has_character_flag = i_am_ct_vassal
			}
			set_defacto_liege = k_chrysanthemum_throne
			log = "[This.GetBestName] is now a CT vassal!"
			clr_character_flag = i_am_ct_vassal
		}
		
		# Restore the Permanent Regent
		if = {
			limit = {
				any_vassal = {
					has_character_flag = i_am_pr
				}
			}
			regent = {
				if = {
					limit = {
						has_character_flag = i_am_pr
					}
				}
				remove_title = title_regent
				remove_title = title_appointed_regent
			}
			any_vassal = {
				limit = {
					has_character_flag = i_am_pr
				}
				give_minor_title = title_regent # Fires japan.56 automatically
				give_minor_title = title_appointed_regent
				clr_character_flag = i_am_pr
			}
		}
		
		# Un-flag the Tenno
		clr_character_flag = temporarily_japanese_imperial
	}
}

# Same as above, in case of a shogunate that takes the vassals
restore_chrysanthemum_throne_and_regent_effect = {
	hidden_tooltip = {
		# Recreate k_chrysanthemum_throne
		grant_title = k_chrysanthemum_throne
		
		# Ensure k_chrysanthemum_throne is the primary
		k_chrysanthemum_throne = {
			make_primary_title = yes
		}
		
		# Restore regency laws
		paste_regency_setup_effect = yes
		
		# Vassalize the Permanent Regent
		any_playable_ruler = {
			limit = {
				has_character_flag = i_am_ct_vassal
			}
			if = {
				limit = {
					has_character_flag = i_am_pr
				}
				log = "[This.GetBestName] is now a CT vassal!"
				clr_character_flag = i_am_pr
			}
			clr_character_flag = i_am_ct_vassal
		}
	
		# Restore the Permanent Regent
		if = {
			limit = {
				any_vassal = {
					has_character_flag = i_am_pr
				}
			}
			regent = {
				if = {
					limit = {
						has_character_flag = i_am_pr
					}
				}
				remove_title = title_regent
				remove_title = title_appointed_regent
			}
			any_vassal = {
				limit = {
					has_character_flag = i_am_pr
				}
				give_minor_title = title_regent # Fires japan.56 automatically
				give_minor_title = title_appointed_regent
				clr_character_flag = i_am_pr
			}
		}
		
		# Un-flag the Tenno
		clr_character_flag = temporarily_japanese_imperial
	}
}

# Handles abdication for the Tenno since we need to ensure it's a someone from the right dynasty
abdicate_to_opinion_target_or_most_liked_relative = {
	# If we are supporting someone specific, they get k_chrysanthemum_throne
	if = {
		limit = {
			any_opinion_modifier_target = {
				reverse_has_opinion_modifier = {
					who = event_target:picking_new_tenno
					modifier = supporting_as_new_tenno
				}
				is_possible_tenno_trigger = yes
			}
		}
	}
	# If not, see if we should get it
	else_if = {
		limit = {
			is_possible_tenno_trigger = yes
		}
		save_event_target_as = new_tenno
	}
	# Otherwise, find the best option
	else = {
		custom_tooltip = {
			text = most_liked_becomes_new_tenno
			k_chrysanthemum_throne = {
				holder_scope = {
					random_dynasty_member = {
						limit = {
							is_possible_tenno_trigger = yes
							NOT = {
								character = PREV
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 100
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 99
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 98
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 97
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 96
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 95
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 94
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 93
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 92
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 91
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 90
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 89
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 88
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 87
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 86
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 85
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 84
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 83
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 82
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 81
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 80
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 79
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 78
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 77
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 76
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 75
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 74
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 73
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 72
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 71
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 70
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 69
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 68
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 67
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 66
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 65
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 64
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 63
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 62
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 61
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 60
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 59
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 58
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 57
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 56
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 55
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 54
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 53
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 52
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 51
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 50
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 49
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 48
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 47
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 46
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 45
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 44
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 43
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 42
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 41
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 40
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 39
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 38
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 37
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 36
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 35
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 34
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 33
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 32
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 31
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 30
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 29
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 28
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 27
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 26
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 25
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 24
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 23
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 22
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 21
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 20
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 19
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 18
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 17
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 16
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 15
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 14
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 13
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 12
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 11
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 10
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 9
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 8
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 7
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 6
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 5
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 4
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 3
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 2
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 1
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = 0
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -1
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -2
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -3
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -4
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -5
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -6
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -7
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -8
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -9
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -10
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -11
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -12
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -13
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -14
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -15
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -16
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -17
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -18
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -19
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -20
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -21
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -22
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -23
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -24
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -25
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -26
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -27
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -28
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -29
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -30
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -31
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -32
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -33
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -34
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -35
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -36
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -37
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -38
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -39
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -40
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -41
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -42
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -43
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -44
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -45
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -46
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -47
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -48
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -49
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -50
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -51
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -52
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -53
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -54
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -55
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -56
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -57
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -58
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -59
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -60
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -61
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -62
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -63
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -64
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -65
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -66
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -67
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -68
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -69
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -70
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -71
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -72
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -73
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -74
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -75
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -76
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -77
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -78
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -79
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -80
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -81
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -82
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -83
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -84
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -85
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -86
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -87
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -88
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -89
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -90
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -91
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -92
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -93
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -94
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -95
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -96
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -97
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -98
							}
						}
						preferred_limit = {
							reverse_opinion = {
								who = event_target:picking_new_tenno
								value = -99
							}
						}
						save_event_target_as = new_tenno
					}
				}
				k_chrysanthemum_throne = {
					holder_scope = {
						if = {
							limit = {
								trait = under_regency
							}
							event_target:new_tenno = {
								add_trait = under_regency
							}
						}
						abdicate_to = event_target:new_tenno
					}
				}
			}
		}
	}
	hidden_tooltip = {
		k_chrysanthemum_throne = {
			holder_scope = {
				reverse_remove_opinion = {
					who = event_target:picking_new_tenno
					modifier = supporting_as_new_tenno
				}
				opinion = {
					modifier = opinion_very_grateful
					who = event_target:picking_new_tenno
					years = 10
				}
				reverse_opinion = {
					modifier = opinion_fought_for_claimant
					who = event_target:picking_new_tenno
					years = 20
				}
			}
		}
	}
}

# Japanese regnal name effects
pull_tenno_names_out_of_a_hat_effect = {
	pull_another_tenno_name_effect = yes
	pull_another_tenno_name_effect = yes
	pull_another_tenno_name_effect = yes
}

pull_another_tenno_name_effect = {
	random_list = {
		# Legendary
		1 = {
			modifier = {
				factor = 0
				can_get_jimmu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_jimmu_used
			}
			set_character_flag = sees_emperor_jimmu
		}
		
		5 =	{
			modifier = {
				factor = 0
				can_get_suizei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_suizei_used
			}
			set_character_flag = sees_emperor_suizei
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_annei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_annei_used
			}
			set_character_flag = sees_emperor_annei
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_itoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_itoku_used
			}
			set_character_flag = sees_emperor_itoku
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_kosho_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kosho_used
			}
			set_character_flag = sees_emperor_kosho
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_koan_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_koan_used
			}
			set_character_flag = sees_emperor_koan
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_korei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_korei_used
			}
			set_character_flag = sees_emperor_korei
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_kogen_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kogen_used
			}
			set_character_flag = sees_emperor_kogen
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_kaika_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kaika_used
			}
			set_character_flag = sees_emperor_kaika
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_sujin_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sujin_used
			}
			set_character_flag = sees_emperor_sujin
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_suinin_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_suinin_used
			}
			set_character_flag = sees_emperor_suinin
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_keiko_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_keiko_used
			}
			set_character_flag = sees_emperor_keiko
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_seimu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_seimu_used
			}
			set_character_flag = sees_emperor_seimu
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_chuai_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_chuai_used
			}
			set_character_flag = sees_emperor_chuai
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_jingu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_jingu_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_jingu
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_ojin_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ojin_used
			}
			set_character_flag = sees_emperor_ojin
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_richu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_richu_used
			}
			set_character_flag = sees_emperor_richu
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_hanzei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_hanzei_used
			}
			set_character_flag = sees_emperor_hanzei
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_ingyo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ingyo_used
			}
			set_character_flag = sees_emperor_ingyo
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_anko_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_anko_used
			}
			set_character_flag = sees_emperor_anko
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_yuryaku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_yuryaku_used
			}
			set_character_flag = sees_emperor_yuryaku
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_seinei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_seinei_used
			}
			set_character_flag = sees_emperor_seinei
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_tsunuzashi_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_tsunuzashi_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_tsunuzashi
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_kenzo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kenzo_used
			}
			set_character_flag = sees_emperor_kenzo
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_ninken_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ninken_used
			}
			set_character_flag = sees_emperor_ninken
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_buretsu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_buretsu_used
			}
			set_character_flag = sees_emperor_buretsu
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_ankan_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ankan_used
			}
			set_character_flag = sees_emperor_ankan
		}
		5 =	{
			modifier = {
				factor = 0
				can_get_senka_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_senka_used
			}
			set_character_flag = sees_emperor_senka
		}
		
		# Old
		10 = {
			modifier = {
				factor = 0
				can_get_oka_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_oka_used
			}
			set_character_flag = sees_emperor_oka
		}
		10 = {
			modifier = {
				factor = 0
				can_get_sudojinkei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sudojinkei_used
			}
			set_character_flag = sees_emperor_sudojinkei
		}
		10 = {
			modifier = {
				factor = 0
				can_get_kasuga_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kasuga_used
			}
			set_character_flag = sees_emperor_kasuga
		}
		10 = {
			modifier = {
				factor = 0
				can_get_sudo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sudo_used
			}
			set_character_flag = sees_emperor_sudo
		}
		10 = {
			modifier = {
				factor = 0
				can_get_kinmei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kinmei_used
			}
			set_character_flag = sees_emperor_kinmei
		}
		10 = {
			modifier = {
				factor = 0
				can_get_bidatsu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_bidatsu_used
			}
			set_character_flag = sees_emperor_bidatsu
		}
		10 = {
			modifier = {
				factor = 0
				can_get_yomei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_yomei_used
			}
			set_character_flag = sees_emperor_yomei
		}
		10 = {
			modifier = {
				factor = 0
				can_get_sushun_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sushun_used
			}
			set_character_flag = sees_emperor_sushun
		}
		10 = {
			modifier = {
				factor = 0
				can_get_suiko_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_suiko_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_suiko
		}
		10 = {
			modifier = {
				factor = 0
				can_get_jomei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_jomei_used
			}
			set_character_flag = sees_emperor_jomei
		}
		10 = {
			modifier = {
				factor = 0
				can_get_kogyoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kogyoku_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_kogyoku
		}
		10 = {
			modifier = {
				factor = 0
				can_get_kotoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kotoku_used
			}
			set_character_flag = sees_emperor_kotoku
		}
		10 = {
			modifier = {
				factor = 0
				can_get_saimei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_saimei_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_saimei
		}
		10 = {
			modifier = {
				factor = 0
				can_get_tenji_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_tenji_used
			}
			set_character_flag = sees_emperor_tenji
		}
		10 = {
			modifier = {
				factor = 0
				can_get_kobun_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kobun_used
			}
			set_character_flag = sees_emperor_kobun
		}
		10 = {
			modifier = {
				factor = 0
				can_get_tenmu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_tenmu_used
			}
			set_character_flag = sees_emperor_tenmu
		}
		10 = {
			modifier = {
				factor = 0
				can_get_jito_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_jito_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_jito
		}
		10 = {
			modifier = {
				factor = 0
				can_get_monmu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_monmu_used
			}
			set_character_flag = sees_emperor_monmu
		}
		10 = {
			modifier = {
				factor = 0
				can_get_genmei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_genmei_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_genmei
		}
		10 = {
			modifier = {
				factor = 0
				can_get_gensho_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_gensho_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_gensho
		}
		10 = {
			modifier = {
				factor = 0
				can_get_shomu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_shomu_used
			}
			set_character_flag = sees_emperor_shomu
		}
		10 = {
			modifier = {
				factor = 0
				can_get_koken_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_koken_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_koken
		}
		10 = {
			modifier = {
				factor = 0
				can_get_junnin_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_junnin_used
			}
			set_character_flag = sees_emperor_junnin
		}
		
		# Rare
		20 = {
			modifier = {
				factor = 0
				can_get_kashiwabara_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kashiwabara_used
			}
			set_character_flag = sees_emperor_kashiwabara
		}
		20 = {
			modifier = {
				factor = 0
				can_get_nara_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_nara_used
			}
			set_character_flag = sees_emperor_nara
		}
		20 = {
			modifier = {
				factor = 0
				can_get_ogimachi_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ogimachi_used
			}
			set_character_flag = sees_emperor_ogimachi
		}
		20 = {
			modifier = {
				factor = 0
				can_get_mizunoo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_mizunoo_used
			}
			set_character_flag = sees_emperor_mizunoo
		}
		20 = {
			modifier = {
				factor = 0
				can_get_minoo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_minoo_used
			}
			set_character_flag = sees_emperor_minoo
		}
		20 = {
			modifier = {
				factor = 0
				can_get_meisho_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_meisho_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_meisho
		}
		20 = {
			modifier = {
				factor = 0
				can_get_sai_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sai_used
			}
			set_character_flag = sees_emperor_sai
		}
		20 = {
			modifier = {
				factor = 0
				can_get_reigen_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_reigen_used
			}
			set_character_flag = sees_emperor_reigen
		}
		20 = {
			modifier = {
				factor = 0
				can_get_higashiyama_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_higashiyama_used
			}
			set_character_flag = sees_emperor_higashiyama
		}
		20 = {
			modifier = {
				factor = 0
				can_get_nakamikado_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_nakamikado_used
			}
			set_character_flag = sees_emperor_nakamikado
		}
		20 = {
			modifier = {
				factor = 0
				can_get_sakuramachi_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sakuramachi_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_sakuramachi
		}
		20 = {
			modifier = {
				factor = 0
				can_get_momozono_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_momozono_used
			}
			set_character_flag = sees_emperor_momozono
		}
		20 = {
			modifier = {
				factor = 0
				can_get_kokaku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kokaku_used
			}
			set_character_flag = sees_emperor_kokaku
		}
		20 = {
			modifier = {
				factor = 0
				can_get_ninko_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ninko_used
			}
			set_character_flag = sees_emperor_ninko
		}
		20 = {
			modifier = {
				factor = 0
				can_get_komei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_komei_used
			}
			set_character_flag = sees_emperor_komei
		}
		20 = {
			modifier = {
				factor = 0
				can_get_chokei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_chokei_used
			}
			set_character_flag = sees_emperor_chokei
		}
		20 = {
			modifier = {
				factor = 0
				can_get_shoko_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_shoko_used
			}
			set_character_flag = sees_emperor_shoko
		}
		20 = {
			modifier = {
				factor = 0
				can_get_komyo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_komyo_used
			}
			set_character_flag = sees_emperor_komyo
		}
		20 = {
			modifier = {
				factor = 0
				can_get_suko_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_suko_used
			}
			set_character_flag = sees_emperor_suko
		}
		20 = {
			modifier = {
				factor = 0
				can_get_kogo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kogo_used
			}
			set_character_flag = sees_emperor_kogo
		}
		20 = {
			modifier = {
				factor = 0
				can_get_komatsu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_komatsu_used
			}
			set_character_flag = sees_emperor_komatsu
		}
		
		# One-time
		50 = {
			modifier = {
				factor = 0
				can_get_shotoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_shotoku_used
			}
			modifier = {
				factor = 5
				is_female = yes
			}
			set_character_flag = sees_emperor_shotoku
		}
		50 = {
			modifier = {
				factor = 0
				can_get_konin_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_konin_used
			}
			set_character_flag = sees_emperor_konin
		}
		50 = {
			modifier = {
				factor = 0
				can_get_kanmu_trigger = no
			}
			modifier = {
				factor = 0.0014
				has_character_flag = emperor_kanmu_used
			}
			set_character_flag = sees_emperor_kanmu
		}
		50 = {
			modifier = {
				factor = 0
				can_get_heizei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_heizei_used
			}
			set_character_flag = sees_emperor_heizei
		}
		50 = {
			modifier = {
				factor = 0
				can_get_junna_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_junna_used
			}
			set_character_flag = sees_emperor_junna
		}
		50 = {
			modifier = {
				factor = 0
				can_get_montoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_montoku_used
			}
			set_character_flag = sees_emperor_montoku
		}
		50 = {
			modifier = {
				factor = 0
				can_get_seiwa_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_seiwa_used
			}
			set_character_flag = sees_emperor_seiwa
		}
		50 = {
			modifier = {
				factor = 0
				can_get_yozei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_yozei_used
			}
			set_character_flag = sees_emperor_yozei
		}
		50 = {
			modifier = {
				factor = 0
				can_get_koko_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_koko_used
			}
			set_character_flag = sees_emperor_koko
		}
		50 = {
			modifier = {
				factor = 0
				can_get_murakami_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_murakami_used
			}
			set_character_flag = sees_emperor_murakami
		}
		50 = {
			modifier = {
				factor = 0
				can_get_enyu_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_enyu_used
			}
			set_character_flag = sees_emperor_enyu
		}
		50 = {
			modifier = {
				factor = 0
				can_get_kazan_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kazan_used
			}
			set_character_flag = sees_emperor_kazan
		}
		50 = {
			modifier = {
				factor = 0
				can_get_sutoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sutoku_used
			}
			set_character_flag = sees_emperor_sutoku
		}
		50 = {
			modifier = {
				factor = 0
				can_get_konoe_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_konoe_used
			}
			set_character_flag = sees_emperor_konoe
		}
		50 = {
			modifier = {
				factor = 0
				can_get_rokujo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_rokujo_used
			}
			set_character_flag = sees_emperor_rokujo
		}
		50 = {
			modifier = {
				factor = 0
				can_get_takakura_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_takakura_used
			}
			set_character_flag = sees_emperor_takakura
		}
		50 = {
			modifier = {
				factor = 0
				can_get_antoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_antoku_used
			}
			set_character_flag = sees_emperor_antoku
		}
		50 = {
			modifier = {
				factor = 0
				can_get_tsuchimikado_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_tsuchimikado_used
			}
			set_character_flag = sees_emperor_tsuchimikado
		}
		50 = {
			modifier = {
				factor = 0
				can_get_juntoku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_juntoku_used
			}
			set_character_flag = sees_emperor_juntoku
		}
		50 = {
			modifier = {
				factor = 0
				can_get_shijo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_shijo_used
			}
			set_character_flag = sees_emperor_shijo
		}
		50 = {
			modifier = {
				factor = 0
				can_get_kameyama_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_kameyama_used
			}
			set_character_flag = sees_emperor_kameyama
		}
		50 = {
			modifier = {
				factor = 0
				can_get_hanazono_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_hanazono_used
			}
			set_character_flag = sees_emperor_hanazono
		}
		
		# Reused
		100 = {
			modifier = {
				factor = 0
				can_get_ichijo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ichijo_used
			}
			set_character_flag = sees_emperor_ichijo
		}
		100 = {
			modifier = {
				factor = 0
				can_get_suzaku_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_suzaku_used
			}
			set_character_flag = sees_emperor_suzaku
		}
		100 = {
			modifier = {
				factor = 0
				can_get_reizei_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_reizei_used
			}
			set_character_flag = sees_emperor_reizei
		}
		100 = {
			modifier = {
				factor = 0
				can_get_sanjo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_sanjo_used
			}
			set_character_flag = sees_emperor_sanjo
		}
		100 = {
			modifier = {
				factor = 0
				can_get_shirakawa_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_shirakawa_used
			}
			set_character_flag = sees_emperor_shirakawa
		}
		100 = {
			modifier = {
				factor = 0
				can_get_horikawa_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_horikawa_used
			}
			set_character_flag = sees_emperor_horikawa
		}
		100 = {
			modifier = {
				factor = 0
				can_get_toba_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_toba_used
			}
			set_character_flag = sees_emperor_toba
		}
		100 = {
			modifier = {
				factor = 0
				can_get_saga_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_saga_used
			}
			set_character_flag = sees_emperor_saga
		}
		100 = {
			modifier = {
				factor = 0
				can_get_fukakusa_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_fukakusa_used
			}
			set_character_flag = sees_emperor_fukakusa
		}
		100 = {
			modifier = {
				factor = 0
				can_get_ninmyo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_ninmyo_used
			}
			set_character_flag = sees_emperor_ninmyo
		}
		100 = {
			modifier = {
				factor = 0
				can_get_uda_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_uda_used
			}
			set_character_flag = sees_emperor_uda
		}
		100 = {
			modifier = {
				factor = 0
				can_get_fushimi_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_fushimi_used
			}
			set_character_flag = sees_emperor_fushimi
		}
		100 = {
			modifier = {
				factor = 0
				can_get_nijo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_nijo_used
			}
			set_character_flag = sees_emperor_nijo
		}
		100 = {
			modifier = {
				factor = 0
				can_get_daigo_trigger = no
			}
			modifier = {
				factor = 0.001
				has_character_flag = emperor_daigo_used
			}
			set_character_flag = sees_emperor_daigo
		}
	}
}

clear_all_tenno_name_flags_effect = {
	clr_character_flag = sees_emperor_jimmu
	clr_character_flag = sees_emperor_suizei
	clr_character_flag = sees_emperor_annei
	clr_character_flag = sees_emperor_itoku
	clr_character_flag = sees_emperor_kosho
	clr_character_flag = sees_emperor_koan
	clr_character_flag = sees_emperor_korei
	clr_character_flag = sees_emperor_kogen
	clr_character_flag = sees_emperor_kaika
	clr_character_flag = sees_emperor_sujin
	clr_character_flag = sees_emperor_suinin
	clr_character_flag = sees_emperor_keiko
	clr_character_flag = sees_emperor_seimu
	clr_character_flag = sees_emperor_chuai
	clr_character_flag = sees_emperor_jingu
	clr_character_flag = sees_emperor_ojin
	clr_character_flag = sees_emperor_richu
	clr_character_flag = sees_emperor_hanzei
	clr_character_flag = sees_emperor_ingyo
	clr_character_flag = sees_emperor_anko
	clr_character_flag = sees_emperor_yuryaku
	clr_character_flag = sees_emperor_seinei
	clr_character_flag = sees_emperor_tsunuzashi
	clr_character_flag = sees_emperor_kenzo
	clr_character_flag = sees_emperor_ninken
	clr_character_flag = sees_emperor_buretsu
	clr_character_flag = sees_emperor_ankan
	clr_character_flag = sees_emperor_senka
	clr_character_flag = sees_emperor_oka
	clr_character_flag = sees_emperor_sudojinkei
	clr_character_flag = sees_emperor_kasuga
	clr_character_flag = sees_emperor_sudo
	clr_character_flag = sees_emperor_kinmei
	clr_character_flag = sees_emperor_bidatsu
	clr_character_flag = sees_emperor_yomei
	clr_character_flag = sees_emperor_sushun
	clr_character_flag = sees_emperor_suiko
	clr_character_flag = sees_emperor_jomei
	clr_character_flag = sees_emperor_kogyoku
	clr_character_flag = sees_emperor_kotoku
	clr_character_flag = sees_emperor_saimei
	clr_character_flag = sees_emperor_tenji
	clr_character_flag = sees_emperor_kobun
	clr_character_flag = sees_emperor_tenmu
	clr_character_flag = sees_emperor_jito
	clr_character_flag = sees_emperor_monmu
	clr_character_flag = sees_emperor_genmei
	clr_character_flag = sees_emperor_gensho
	clr_character_flag = sees_emperor_shomu
	clr_character_flag = sees_emperor_koken
	clr_character_flag = sees_emperor_junnin
	clr_character_flag = sees_emperor_kashiwabara
	clr_character_flag = sees_emperor_nara
	clr_character_flag = sees_emperor_ogimachi
	clr_character_flag = sees_emperor_mizunoo
	clr_character_flag = sees_emperor_minoo
	clr_character_flag = sees_emperor_meisho
	clr_character_flag = sees_emperor_sai
	clr_character_flag = sees_emperor_reigen
	clr_character_flag = sees_emperor_higashiyama
	clr_character_flag = sees_emperor_nakamikado
	clr_character_flag = sees_emperor_sakuramachi
	clr_character_flag = sees_emperor_momozono
	clr_character_flag = sees_emperor_kokaku
	clr_character_flag = sees_emperor_ninko
	clr_character_flag = sees_emperor_komei
	clr_character_flag = sees_emperor_chokei
	clr_character_flag = sees_emperor_shoko
	clr_character_flag = sees_emperor_komyo
	clr_character_flag = sees_emperor_suko
	clr_character_flag = sees_emperor_kogo
	clr_character_flag = sees_emperor_komatsu
	clr_character_flag = sees_emperor_shotoku
	clr_character_flag = sees_emperor_konin
	clr_character_flag = sees_emperor_kanmu
	clr_character_flag = sees_emperor_heizei
	clr_character_flag = sees_emperor_junna
	clr_character_flag = sees_emperor_montoku
	clr_character_flag = sees_emperor_seiwa
	clr_character_flag = sees_emperor_yozei
	clr_character_flag = sees_emperor_koko
	clr_character_flag = sees_emperor_murakami
	clr_character_flag = sees_emperor_enyu
	clr_character_flag = sees_emperor_kazan
	clr_character_flag = sees_emperor_sutoku
	clr_character_flag = sees_emperor_konoe
	clr_character_flag = sees_emperor_rokujo
	clr_character_flag = sees_emperor_takakura
	clr_character_flag = sees_emperor_antoku
	clr_character_flag = sees_emperor_tsuchimikado
	clr_character_flag = sees_emperor_juntoku
	clr_character_flag = sees_emperor_shijo
	clr_character_flag = sees_emperor_kameyama
	clr_character_flag = sees_emperor_hanazono
	clr_character_flag = sees_emperor_ichijo
	clr_character_flag = sees_emperor_suzaku
	clr_character_flag = sees_emperor_reizei
	clr_character_flag = sees_emperor_sanjo
	clr_character_flag = sees_emperor_shirakawa
	clr_character_flag = sees_emperor_horikawa
	clr_character_flag = sees_emperor_toba
	clr_character_flag = sees_emperor_saga
	clr_character_flag = sees_emperor_fukakusa
	clr_character_flag = sees_emperor_ninmyo
	clr_character_flag = sees_emperor_uda
	clr_character_flag = sees_emperor_fushimi
	clr_character_flag = sees_emperor_nijo
	clr_character_flag = sees_emperor_daigo
}

forefathers_join_imperial_family_effect = {
	custom_tooltip = {
		text = deceased_forefathers_flipped_too
		father_even_if_dead = { # 1
			if = {
				limit = {
					NOT = {
						dynasty = 1000027000 # Imperial Family
					}
				}
				dynasty = 1000027000 # Imperial Family
			}
			father_even_if_dead = { # 2
				if = {
					limit = {
						NOT = {
							dynasty = 1000027000 # Imperial Family
						}
					}
					dynasty = 1000027000 # Imperial Family
				}
				father_even_if_dead = { # 3
					if = {
						limit = {
							NOT = {
								dynasty = 1000027000 # Imperial Family
							}
						}
						dynasty = 1000027000 # Imperial Family
					}
					father_even_if_dead = { # 4
						if = {
							limit = {
								NOT = {
									dynasty = 1000027000 # Imperial Family
								}
							}
							dynasty = 1000027000 # Imperial Family
						}
						father_even_if_dead = { # 5
							if = {
								limit = {
									NOT = {
										dynasty = 1000027000 # Imperial Family
									}
								}
								dynasty = 1000027000 # Imperial Family
							}
							father_even_if_dead = { # 6
								if = {
									limit = {
										NOT = {
											dynasty = 1000027000 # Imperial Family
										}
									}
									dynasty = 1000027000 # Imperial Family
								}
								father_even_if_dead = { # 7
									if = {
										limit = {
											NOT = {
												dynasty = 1000027000 # Imperial Family
											}
										}
										dynasty = 1000027000 # Imperial Family
									}
									father_even_if_dead = { # 8
										if = {
											limit = {
												NOT = {
													dynasty = 1000027000 # Imperial Family
												}
											}
											dynasty = 1000027000 # Imperial Family
										}
										father_even_if_dead = { # 9
											if = {
												limit = {
													NOT = {
														dynasty = 1000027000 # Imperial Family
													}
												}
												dynasty = 1000027000 # Imperial Family
											}
											father_even_if_dead = { # 10
												if = {
													limit = {
														NOT = {
															dynasty = 1000027000 # Imperial Family
														}
													}
													dynasty = 1000027000 # Imperial Family
												}
												father_even_if_dead = { # 11
													if = {
														limit = {
															NOT = {
																dynasty = 1000027000 # Imperial Family
															}
														}
														dynasty = 1000027000 # Imperial Family
													}
													father_even_if_dead = { # 12
														if = {
															limit = {
																NOT = {
																	dynasty = 1000027000 # Imperial Family
																}
															}
															dynasty = 1000027000 # Imperial Family
														}
														father_even_if_dead = { # 13
															if = {
																limit = {
																	NOT = {
																		dynasty = 1000027000 # Imperial Family
																	}
																}
																dynasty = 1000027000 # Imperial Family
															}
															father_even_if_dead = { # 14
																if = {
																	limit = {
																		NOT = {
																			dynasty = 1000027000 # Imperial Family
																		}
																	}
																	dynasty = 1000027000 # Imperial Family
																}
																father_even_if_dead = { # 15
																	if = {
																		limit = {
																			NOT = {
																				dynasty = 1000027000 # Imperial Family
																			}
																		}
																		dynasty = 1000027000 # Imperial Family
																	}
																	father_even_if_dead = { # 16
																		if = {
																			limit = {
																				NOT = {
																					dynasty = 1000027000 # Imperial Family
																				}
																			}
																			dynasty = 1000027000 # Imperial Family
																		}
																		father_even_if_dead = { # 17
																			if = {
																				limit = {
																					NOT = {
																						dynasty = 1000027000 # Imperial Family
																					}
																				}
																				dynasty = 1000027000 # Imperial Family
																			}
																			father_even_if_dead = { # 18
																				if = {
																					limit = {
																						NOT = {
																							dynasty = 1000027000 # Imperial Family
																						}
																					}
																					dynasty = 1000027000 # Imperial Family
																				}
																				father_even_if_dead = { # 19
																					if = {
																						limit = {
																							NOT = {
																								dynasty = 1000027000 # Imperial Family
																							}
																						}
																						dynasty = 1000027000 # Imperial Family
																					}
																					father_even_if_dead = { # 20
																						if = {
																							limit = {
																								NOT = {
																									dynasty = 1000027000 # Imperial Family
																								}
																							}
																							dynasty = 1000027000 # Imperial Family
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

propagate_imperial_family_effect = {
	if = {
		limit = {
			is_female = no
		}
		custom_tooltip = {
			text = male_line_descendants_not_given_a_surname_join_the_imperial_family
			any_child_even_if_dead = {
				limit = {
					NOT = {
						has_character_flag = got_surname
					}
					any_owned_bloodline = {
						has_bloodline_flag = imperial_family
						bloodline_is_active_for = PREV
					}
				}
				if = {
					limit = {
						NOT = {
							trait = bastard
						}
					}
				}
				dynasty = ROOT
				if = {
					limit = {
						NOT = {
							trait = bastard
						}
						is_female = no
					}
					propagate_imperial_family_effect = yes # Iterate
				}
			}
		}
	}
}