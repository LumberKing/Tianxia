## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1) Note: is in title scope
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
#

unification_of_korea = { # For the 936 start
	name = CB_NAME_UNIFICATION_OF_KOREA
	war_name = WAR_NAME_UNIFICATION_OF_KOREA
	diplo_view_region = world_korea
	sprite = 12
	truce_days = 3650
	is_permanent = no
	#allow_whitepeace = no

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	can_call_allies = no
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}

	is_valid = {
		ROOT = {
			OR = {
				has_landed_title = k_goryeo
				has_landed_title = k_silla
				has_landed_title = k_baekje
				#has_landed_title = k_balhae
			}
		}
		FROM = {
			OR = {
				has_landed_title = k_goryeo
				has_landed_title = k_silla
				has_landed_title = k_baekje
				#has_landed_title = k_balhae
			}
		}
	}

	on_success = {
		ROOT = {
			participation_scaled_prestige = 1000
			if = {
				limit = {
					has_character_flag = is_taejo
				}
				create_bloodline = {
					type = taejo_bloodline
				}
			}
			else = {
				create_bloodline = {
					type = korean_bloodline
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
		FROM = {
			prestige = -1000
			# In the unlikely event that FROM or a vassal has land outside the Korean Peninsula, we need to handle it
			any_realm_lord = {
				limit = {
					higher_tier_than = baron
				}
				if = {
					limit = {
						NOT = {
							any_demesne_title = {
								capital_scope = {
									NOT = {
										region = world_korea
									}
								}
							}
						}
					}
					opinion = {
						modifier = opinion_subjugated 
						who = ROOT
					}
					set_defacto_liege = ROOT
				}
				else = {
					any_demesne_title = {
						limit = {
							capital_scope = {
								region = world_korea
							}
						}
						if = {
							limit = {
								tier = king
							}
							# Clean up the "Hu" in "Hubaekje"
							set_name = ""
							adjective = ""
							unsafe_destroy_landed_title = THIS
						}
						else = {
							usurp_title_plus_barony_if_unlanded = ROOT
						}
					}
				}
			}
			if = {
				limit = {
					NOT = {
						any_demesne_title = {
							capital_scope = {
								NOT = {
									region = world_korea
								}
							}
						}
					}
				}
				any_demesne_title = {
					limit = {
						OR = {
							tier = king
							tier = emperor
						}
					}
					unsafe_destroy_landed_title = THIS
				}
				opinion = {
					modifier = opinion_subjugated 
					who = ROOT
				}
				set_defacto_liege = ROOT
			}
			else = {
				any_demesne_title = {
					limit = {
						capital_scope = {
							region = world_korea
						}
					}
					if = {
						limit = {
							OR = {
								tier = king
								tier = emperor
							}
						}
						unsafe_destroy_landed_title = THIS
					}
					else = {
						usurp_title_plus_barony_if_unlanded = ROOT
					}
				}
			}
		}
	}
	
	on_fail = {
		FROM = {
			participation_scaled_prestige = 500
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		ROOT = {
			prestige = -500
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -1000
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
		}
		FROM = {
			participation_scaled_prestige = 2000
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 2000 }
		}
	}
	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

# Jin-Tang in 936
jin_tang_cb = {
	name = CB_NAME_CHINESE_DYNASTIC_WAR
	war_name = WAR_NAME_CHINESE_DYNASTIC_WAR
	sprite = 9
	truce_days = 3650
	diplo_view_region = world_china
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	can_call_allies = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		ROOT = {
			has_landed_title = e_great_wall
		}
		FROM = {
			has_landed_title = e_black_turtle
		}
	}

	on_success = {
		ROOT = {
			participation_scaled_prestige = 1000
		}
		
		# 1: Usurp all vassals
		FROM = {
			any_vassal = {
				limit = {
					higher_tier_than = baron
				}
				set_defacto_liege = ROOT
			}
		}
		
		# 2: Take over the new empire and handle the renaming (assuming it is relevant), then give ROOT FROM as a vassal
		ROOT = {
			set_character_flag = special_chinse_imperial_usurpation
			e_black_turtle = {
				usurp_title = ROOT
				set_preferred_capital = c_bianjing
				save_event_target_as = pretender_title
				make_primary_title = yes
				clear_all_chinese_dynasty_flags_and_update_global_flags_effect = yes
			}
			e_great_wall = {
				show_scope_change = no
				copy_pretender_empire_name_pretender_effect = yes
				set_name = ""
				adjective = ""
				unsafe_destroy_landed_title = THIS
			}
			clr_character_flag = special_chinse_imperial_usurpation
		}
		FROM = {
			set_defacto_liege = ROOT
			imprison = ROOT
		}
		
		# 3: If FROM has the Heirloom Seal of the Realm, transfer it to ROOT
		FROM = {
			if = {
				limit = {
					any_artifact = {
						has_flag = heirloom_seal_of_the_realm
					}
				}
				any_artifact = {
					limit = {
						has_flag = heirloom_seal_of_the_realm
					}
					transfer_artifact = {
						from = FROM
						to = ROOT
					}
				}
			}
		}
		
		# 4: Prestige for allies + potential Sixteen Prefectures event
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
			if = {
				limit = {
					dynasty = 1045082 # Liao Dynasty
					independent = yes
					tier = emperor
					any_owned_bloodline = {
						has_bloodline_flag = liao_china
					}
				}
				ROOT = {
					character_event = { id = khitan.3 } # Sixteen Prefectures event
				}
			}
		}
		
		# Prestige loss for the defender
		FROM = {
			prestige = -1000
		}
	}
	
	on_fail = {
		FROM = {
			participation_scaled_prestige = 500
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		ROOT = {
			prestige = -500
		}
		FROM = {
			opinion = {
				who = ROOT
				modifier = opinion_traitor
			}
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -1000
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
		}
		FROM = {
			participation_scaled_prestige = 2000
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 2000 }
		}
		# 1: Take the attacker's vassals
		ROOT = {
			any_vassal = {
				limit = {
					higher_tier_than = baron
				}
				set_defacto_liege = FROM
			}
		}
		
		# 2: Vassalize the attacker and imprison them
		ROOT = {
			e_great_wall = {
				set_name = ""
				adjective = ""
				clr_title_flag = tang_china
				clr_title_flag = jin_china
				clr_title_flag = wei_china
				clr_title_flag = qi_china
				clr_title_flag = zhou_china
				clr_title_flag = han_china
				clr_title_flag = qin_china
				clr_title_flag = yan_china
				clr_title_flag = zhao_china
				clr_title_flag = liao_china
				clr_title_flag = yuan_china
				clr_title_flag = xia_china
				clr_title_flag = qing_china
				clr_title_flag = dai_china
				clr_title_flag = cheng_china
				clr_title_flag = liang_china
				clr_title_flag = song_china
				clr_title_flag = ming_china
				clr_title_flag = shu_china
				clr_title_flag = wu_china
				clr_title_flag = chu_china
				clr_title_flag = yue_china
				clr_title_flag = yin_china
				clr_title_flag = shun_china
				clr_title_flag = sui_china
				clr_title_flag = min_china
				clr_title_flag = pretender_chinese_empire
			}
			e_great_wall = {
				show_scope_change = no
				unsafe_destroy_landed_title = THIS
			}
			set_defacto_liege = FROM
			imprison = FROM
		}
		FROM = {
			opinion = {
				who = ROOT
				modifier = opinion_traitor
			}
		}
		
		# 3: Potential Sixteen Prefectures event
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			if = {
				limit = {
					dynasty = 1045082 # Liao Dynasty
					independent = yes
					tier = emperor
					any_owned_bloodline = {
						has_bloodline_flag = liao_china
					}
				}
				ROOT = {
					character_event = { id = khitan.10 } # Sixteen Prefectures event
				}
			}
		}
	}
	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

gosannen_war_1 = {
	name = CB_NAME_NORTHERN_DISTURBANCE
	war_name = WAR_NAME_NORTHERN_DISTURBANCE
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		FROM = {
			OR = {
				has_landed_title = d_mutsu
				has_landed_title = d_dewa
			}
		}
	}	
	
	on_success = {
		ROOT = {
			participation_scaled_prestige = 500
		}
		any_defender = {
			# ROOT takes all titles in d_mutsu and d_dewa
			participation_scaled_prestige = -500
			ROOT = {
				vassalize_or_take_under_title = {
					title = d_dewa
					enemy = PREV
					type = invasion
				}
				vassalize_or_take_under_title = {
					title = d_mutsu
					enemy = PREV
					type = invasion
				}
			}
			if = {
				limit = {
					character = FROM
					e_japan = {
						has_holder = yes
					}
				}
				if = {
					limit = {
						e_japan = {
							holder_scope = {
								has_regent = yes
								regent = {
									higher_tier_than = FROM
								}
							}
						}
					}
					e_japan = {
						holder_scope = {
							regent = {
								FROM = {
									set_defacto_liege = PREV
								}
							}
						}
					}
				}
				else = {
					e_japan = {
						holder_scope = {
							FROM = {
								set_defacto_liege = PREV
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_landed_title = d_mutsu
				}
				unsafe_destroy_landed_title = d_mutsu
			}
		}
		ROOT = {
			grant_title = d_mutsu
			if = {
				limit = {
					has_character_flag = is_kiyohara_masahira
				}
				character_event = { id = soh.4213 } # Possible independence
			}
		}
	}
	
	on_reverse_demand = {
		ROOT = {
			participation_scaled_prestige = -500
		}
		any_defender = {
			participation_scaled_prestige = 500
		}
		FROM = {
			# FROM takes all titles in d_mutsu and d_dewa
			vassalize_or_take_under_title = {
				title = d_dewa
				enemy = ROOT
				type = invasion
			}
			vassalize_or_take_under_title = {
				title = d_mutsu
				enemy = ROOT
				type = invasion
			}
			if = {
				limit = {
					has_character_flag = is_hachimantaro
				}
				character_event = { id = soh.4201 } # Decide what to do with the titles
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

gosannen_war_2 = {
	name = CB_NAME_NORTHERN_DISTURBANCE
	war_name = WAR_NAME_NORTHERN_DISTURBANCE
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		FROM = {
			OR = {
				has_landed_title = d_mutsu
				has_landed_title = d_dewa
			}
		}
	}	
	
	on_success = {
		ROOT = {
			participation_scaled_prestige = 500
			# ROOT takes all titles in d_mutsu and d_dewa
			FROM = {
				participation_scaled_prestige = -500
			}
			ROOT = {
				vassalize_or_take_under_title = {
					title = d_dewa
					enemy = FROM
					type = invasion
				}
				vassalize_or_take_under_title = {
					title = d_mutsu
					enemy = FROM
					type = invasion
				}
			}
			FROM = {
				if = {
					limit = {
						e_japan = {
							has_holder = yes
						}
					}
					if = {
						limit = {
							e_japan = {
								holder_scope = {
									has_regent = yes
									regent = {
										higher_tier_than = FROM
									}
								}
							}
						}
						e_japan = {
							holder_scope = {
								regent = {
									FROM = {
										set_defacto_liege = PREV
									}
								}
							}
						}
					}
					else = {
						e_japan = {
							holder_scope = {
								FROM = {
									set_defacto_liege = PREV
								}
							}
						}
					}
				}
			}
		}
		FROM = {
			if = {
				limit = {
					has_landed_title = d_mutsu
				}
				unsafe_destroy_landed_title = d_mutsu
			}
		}
		ROOT = {
			grant_title = d_mutsu
			if = {
				limit = {
					has_character_flag = is_kiyohara_iehira
				}
				character_event = { id = soh.4223 } # Possible independence
			}
		}
	}
	
	on_reverse_demand = {
		ROOT = {
			participation_scaled_prestige = -500
		}
		any_defender = {
			participation_scaled_prestige = 500
		}
		FROM = {
			# FROM takes all titles in d_mutsu and d_dewa
			vassalize_or_take_under_title = {
				title = d_dewa
				enemy = ROOT
				type = invasion
			}
			vassalize_or_take_under_title = {
				title = d_mutsu
				enemy = ROOT
				type = invasion
			}
			if = {
				limit = {
					has_character_flag = is_hachimantaro
				}
				character_event = { id = soh.4216 } # Decide what to do with the titles
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

go_yeongchang_independence = {
	name = CB_NAME_GO_YEONGCHANG_INDEPENDENCE
	war_name = WAR_NAME_GO_YEONGCHANG_INDEPENDENCE
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		ROOT = {
			tier = emperor
		}
	}
	
	on_success = {
		ROOT = {
			prestige = 1000
			any_demesne_title = {
				add_claim = FROM
			}
		}
		FROM = {
			prestige = -1000
			opinion = {
				who = ROOT
				modifier = opinion_traitor
			}
		}
	}
	
	on_reverse_demand = {
		FROM = {
			prestige = 1000
		}
		ROOT = {
			prestige = -1000
			any_vassal = {
				set_defacto_liege = FROM
			}
			any_demesne_title = {
				limit = {
					tier = emperor
				}
				unsafe_destroy_landed_title = THIS
			}
			any_demesne_title = {
				add_claim = FROM
			}
			set_defacto_liege = FROM
			imprison = FROM
			reverse_opinion = {
				who = FROM
				modifier = opinion_traitor
			}
			any_realm_lord = {
				any_demesne_title = {
					usurp_title = {
						target = FROM
						type = invasion
					}
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

fang_las_rebellion = {
	name = CB_NAME_FANG_LAS_REBELLION
	war_name = WAR_NAME_FANG_LAS_REBELLION
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	attacker_can_call_allies = no # Their land would be at risk...
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	on_success = {
		d_liangzhe = {
			holder_scope = {
				save_event_target_as = fang_la
			}
		}
		e_china = {
			holder_scope = {
				save_event_target_as = song_emperor
			}
		}
		event_target:fang_la = {
			prestige = 1000
			vassalize_or_take_under_title = {
				title = k_liangzhe
				enemy = event_target:song_emperor
				type = invasion
			}
			if = {
				limit = {
					k_liangzhe = {
						has_holder = no
					}
				}
				grant_title = k_liangzhe
			}
		}
		event_target:song_emperor = {
			prestige = -1000
			opinion = {
				who = event_target:fang_la
				modifier = opinion_traitor
			}
		}
	}
	
	on_reverse_demand = {
		d_liangzhe = {
			holder_scope = {
				save_event_target_as = fang_la
			}
		}
		e_china = {
			holder_scope = {
				save_event_target_as = song_emperor
			}
		}
		event_target:song_emperor = {
			prestige = 1000
		}
		event_target:fang_la = {
			prestige = -1000
			disband_event_forces = fang_las_forces
			any_demesne_title = {
				usurp_title = {
					target = event_target:song_emperor
					type = invasion
				}
			}
			imprison = event_target:song_emperor
			reverse_opinion = {
				who = event_target:song_emperor
				modifier = opinion_traitor
			}
		}
		any_attacker = {
			limit = {
				NOT = {
					character = event_target:fang_la
				}
			}
			prestige = -1000
			disband_event_forces = lu_shinangs_forces
			imprison = event_target:song_emperor
			reverse_opinion = {
				who = event_target:song_emperor
				modifier = opinion_traitor
			}
			any_demesne_title = {
				usurp_title = {
					target = event_target:song_emperor
					type = invasion
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}