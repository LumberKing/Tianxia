## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1) Note: is in title scope
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
#

unification_of_korea = { # For the 936 start
	name = CB_NAME_UNIFICATION_OF_KOREA
	war_name = WAR_NAME_UNIFICATION_OF_KOREA
	diplo_view_region = world_korea
	sprite = 12
	truce_days = 3650
	is_permanent = no
	#allow_whitepeace = no

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	can_call_allies = no
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}

	is_valid = {
		ROOT = {
			OR = {
				has_landed_title = k_goryeo
				has_landed_title = k_silla
				has_landed_title = k_baekje
				#has_landed_title = k_balhae
			}
		}
		FROM = {
			OR = {
				has_landed_title = k_goryeo
				has_landed_title = k_silla
				has_landed_title = k_baekje
				#has_landed_title = k_balhae
			}
		}
	}

	on_success = {
		ROOT = {
			participation_scaled_prestige = 1000
			if = {
				limit = {
					has_character_flag = is_taejo
				}
				create_bloodline = {
					type = taejo_bloodline
				}
			}
			else = {
				create_bloodline = {
					type = korean_bloodline
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
		FROM = {
			prestige = -1000
			# In the unlikely event that FROM or a vassal has land outside the Korean Peninsula, we need to handle it
			any_realm_lord = {
				limit = {
					higher_tier_than = baron
				}
				if = {
					limit = {
						NOT = {
							any_demesne_title = {
								capital_scope = {
									NOT = {
										region = world_korea
									}
								}
							}
						}
					}
					opinion = {
						modifier = opinion_subjugated 
						who = ROOT
					}
					set_defacto_liege = ROOT
				}
				else = {
					any_demesne_title = {
						limit = {
							capital_scope = {
								region = world_korea
							}
						}
						if = {
							limit = {
								tier = king
							}
							# Clean up the "Hu" in "Hubaekje"
							set_name = ""
							adjective = ""
							unsafe_destroy_landed_title = THIS
						}
						else = {
							usurp_title_plus_barony_if_unlanded = ROOT
						}
					}
				}
			}
			if = {
				limit = {
					NOT = {
						any_demesne_title = {
							capital_scope = {
								NOT = {
									region = world_korea
								}
							}
						}
					}
				}
				any_demesne_title = {
					limit = {
						OR = {
							tier = king
							tier = emperor
						}
					}
					unsafe_destroy_landed_title = THIS
				}
				opinion = {
					modifier = opinion_subjugated 
					who = ROOT
				}
				set_defacto_liege = ROOT
			}
			else = {
				any_demesne_title = {
					limit = {
						capital_scope = {
							region = world_korea
						}
					}
					if = {
						limit = {
							OR = {
								tier = king
								tier = emperor
							}
						}
						unsafe_destroy_landed_title = THIS
					}
					else = {
						usurp_title_plus_barony_if_unlanded = ROOT
					}
				}
			}
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_large_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_large_effect = yes
				}
			}
		}
	}
	
	on_fail = {
		FROM = {
			participation_scaled_prestige = 500
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		ROOT = {
			prestige = -500
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_medium_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_medium_effect = yes
				}
			}
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -1000
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
		}
		FROM = {
			participation_scaled_prestige = 2000
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 2000 }
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_large_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_large_effect = yes
				}
			}
		}
	}
	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

# Jin-Tang in 936
jin_tang_cb = {
	name = CB_NAME_CHINESE_DYNASTIC_WAR
	war_name = WAR_NAME_CHINESE_DYNASTIC_WAR
	sprite = 9
	truce_days = 3650
	diplo_view_region = world_china
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	can_call_allies = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		ROOT = {
			has_landed_title = e_great_wall
		}
		FROM = {
			has_landed_title = e_black_turtle
		}
	}

	on_success = {
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_massive_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_massive_effect = yes
				}
			}
		}
		ROOT = {
			participation_scaled_prestige = 1000
		}
		
		# 1: Usurp all vassals
		FROM = {
			any_vassal = {
				limit = {
					higher_tier_than = baron
				}
				set_defacto_liege = ROOT
			}
		}
		
		# 2: Take over the new empire and handle the renaming (assuming it is relevant), then give ROOT FROM as a vassal
		ROOT = {
			set_character_flag = special_chinse_imperial_usurpation
			e_black_turtle = {
				usurp_title = ROOT
				set_preferred_capital = c_bianjing
				save_event_target_as = pretender_title
				make_primary_title = yes
				clear_all_chinese_dynasty_flags_and_update_global_flags_effect = yes
				set_title_flag = pretender_chinese_empire
			}
			e_great_wall = {
				show_scope_change = no
				copy_pretender_empire_name_pretender_effect = yes
				set_name = ""
				adjective = ""
				unsafe_destroy_landed_title = THIS
			}
			clr_character_flag = special_chinse_imperial_usurpation
			set_government_type = chinese_imperial_government
		}
		FROM = {
			set_defacto_liege = ROOT
			add_trait = former_eoc_trait
			imprison = ROOT
		}
		ROOT = {
			if = {
				limit = {
					any_realm_lord = {
						has_landed_title = c_bianjing
					}
				}
				c_bianjing = {
					usurp_title = ROOT
					ROOT = {
						capital = c_bianjing
					}
				}
			}
			if = {
				limit = {
					any_realm_lord = {
						has_landed_title = c_luoyang
					}
				}
				c_luoyang = {
					usurp_title = ROOT
				}
			}
			if = {
				limit = {
					any_realm_lord = {
						has_landed_title = c_changan
					}
				}
				c_changan = {
					usurp_title = ROOT
				}
			}
		}
		
		# 3: If FROM has the Heirloom Seal of the Realm, transfer it to ROOT
		FROM = {
			if = {
				limit = {
					any_artifact = {
						has_flag = heirloom_seal_of_the_realm
					}
				}
				any_artifact = {
					limit = {
						has_flag = heirloom_seal_of_the_realm
					}
					transfer_artifact = {
						from = FROM
						to = ROOT
					}
				}
			}
		}
		
		# 4: Prestige for allies + potential Sixteen Prefectures event
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
			if = {
				limit = {
					dynasty = 1045082 # Liao Dynasty
					independent = yes
					tier = emperor
					any_owned_bloodline = {
						has_bloodline_flag = liao_china
					}
				}
				ROOT = {
					character_event = { id = soh.7201 } # Sixteen Prefectures event
				}
			}
		}
		
		# Prestige loss for the defender
		FROM = {
			prestige = -1000
		}
	}
	
	on_fail = {
		FROM = {
			participation_scaled_prestige = 500
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		ROOT = {
			prestige = -500
		}
		FROM = {
			opinion = {
				who = ROOT
				modifier = opinion_traitor
			}
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_large_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_large_effect = yes
				}
			}
		}
	}

	on_reverse_demand = {
		ROOT = {
			prestige = -1000
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_massive_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_massive_effect = yes
				}
			}
		}
		FROM = {
			participation_scaled_prestige = 2000
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 2000 }
		}
		# 1: Take the attacker's vassals
		ROOT = {
			any_vassal = {
				limit = {
					higher_tier_than = baron
				}
				set_defacto_liege = FROM
			}
		}
		
		# 2: Vassalize the attacker and imprison them
		ROOT = {
			e_great_wall = {
				set_name = ""
				adjective = ""
				clr_title_flag = tang_china
				clr_title_flag = jin_china
				clr_title_flag = wei_china
				clr_title_flag = qi_china
				clr_title_flag = zhou_china
				clr_title_flag = han_china
				clr_title_flag = qin_china
				clr_title_flag = yan_china
				clr_title_flag = zhao_china
				clr_title_flag = liao_china
				clr_title_flag = yuan_china
				clr_title_flag = xia_china
				clr_title_flag = qing_china
				clr_title_flag = dai_china
				clr_title_flag = cheng_china
				clr_title_flag = liang_china
				clr_title_flag = song_china
				clr_title_flag = ming_china
				clr_title_flag = shu_china
				clr_title_flag = wu_china
				clr_title_flag = chu_china
				clr_title_flag = yue_china
				clr_title_flag = yin_china
				clr_title_flag = shun_china
				clr_title_flag = sui_china
				clr_title_flag = min_china
				clr_title_flag = pretender_chinese_empire
			}
			e_great_wall = {
				show_scope_change = no
				unsafe_destroy_landed_title = THIS
			}
			set_defacto_liege = FROM
			imprison = FROM
			add_trait = former_eoc_trait
		}
		FROM = {
			opinion = {
				who = ROOT
				modifier = opinion_traitor
			}
		}
		
		# 3: Potential Sixteen Prefectures event
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			if = {
				limit = {
					dynasty = 1045082 # Liao Dynasty
					independent = yes
					tier = emperor
					any_owned_bloodline = {
						has_bloodline_flag = liao_china
					}
				}
				ROOT = {
					character_event = { id = soh.7208 } # Sixteen Prefectures event
				}
			}
		}
	}
	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

gosannen_war_1 = {
	name = CB_NAME_NORTHERN_DISTURBANCE
	war_name = WAR_NAME_NORTHERN_DISTURBANCE
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		FROM = {
			OR = {
				has_landed_title = d_mutsu
				has_landed_title = d_dewa
			}
		}
	}	
	
	on_success = {
		ROOT = {
			participation_scaled_prestige = 500
		}
		any_defender = {
			# ROOT takes all titles in d_mutsu and d_dewa
			participation_scaled_prestige = -500
			ROOT = {
				vassalize_or_take_under_title = {
					title = d_dewa
					enemy = PREV
					type = invasion
				}
				vassalize_or_take_under_title = {
					title = d_mutsu
					enemy = PREV
					type = invasion
				}
			}
			if = {
				limit = {
					character = FROM
					e_japan = {
						has_holder = yes
					}
				}
				if = {
					limit = {
						e_japan = {
							holder_scope = {
								has_regent = yes
								regent = {
									higher_tier_than = FROM
								}
							}
						}
					}
					e_japan = {
						holder_scope = {
							regent = {
								FROM = {
									set_defacto_liege = PREV
								}
							}
						}
					}
				}
				else = {
					e_japan = {
						holder_scope = {
							FROM = {
								set_defacto_liege = PREV
							}
						}
					}
				}
			}
			if = {
				limit = {
					has_landed_title = d_mutsu
				}
				unsafe_destroy_landed_title = d_mutsu
			}
		}
		ROOT = {
			grant_title = d_mutsu
			if = {
				limit = {
					has_character_flag = is_kiyohara_masahira
				}
				character_event = { id = soh.4213 } # Possible independence
			}
		}
	}
	
	on_reverse_demand = {
		ROOT = {
			participation_scaled_prestige = -500
		}
		any_defender = {
			participation_scaled_prestige = 500
		}
		FROM = {
			# FROM takes all titles in d_mutsu and d_dewa
			vassalize_or_take_under_title = {
				title = d_dewa
				enemy = ROOT
				type = invasion
			}
			vassalize_or_take_under_title = {
				title = d_mutsu
				enemy = ROOT
				type = invasion
			}
			if = {
				limit = {
					has_character_flag = is_hachimantaro
				}
				character_event = { id = soh.4201 } # Decide what to do with the titles
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

gosannen_war_2 = {
	name = CB_NAME_NORTHERN_DISTURBANCE
	war_name = WAR_NAME_NORTHERN_DISTURBANCE
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		FROM = {
			OR = {
				has_landed_title = d_mutsu
				has_landed_title = d_dewa
			}
		}
	}	
	
	on_success = {
		ROOT = {
			participation_scaled_prestige = 500
			# ROOT takes all titles in d_mutsu and d_dewa
			FROM = {
				participation_scaled_prestige = -500
			}
			ROOT = {
				vassalize_or_take_under_title = {
					title = d_dewa
					enemy = FROM
					type = invasion
				}
				vassalize_or_take_under_title = {
					title = d_mutsu
					enemy = FROM
					type = invasion
				}
			}
			FROM = {
				if = {
					limit = {
						e_japan = {
							has_holder = yes
						}
					}
					if = {
						limit = {
							e_japan = {
								holder_scope = {
									has_regent = yes
									regent = {
										higher_tier_than = FROM
									}
								}
							}
						}
						e_japan = {
							holder_scope = {
								regent = {
									FROM = {
										set_defacto_liege = PREV
									}
								}
							}
						}
					}
					else = {
						e_japan = {
							holder_scope = {
								FROM = {
									set_defacto_liege = PREV
								}
							}
						}
					}
				}
			}
		}
		FROM = {
			if = {
				limit = {
					has_landed_title = d_mutsu
				}
				unsafe_destroy_landed_title = d_mutsu
			}
		}
		ROOT = {
			grant_title = d_mutsu
			if = {
				limit = {
					has_character_flag = is_kiyohara_iehira
				}
				character_event = { id = soh.4223 } # Possible independence
			}
		}
	}
	
	on_reverse_demand = {
		ROOT = {
			participation_scaled_prestige = -500
		}
		any_defender = {
			participation_scaled_prestige = 500
		}
		FROM = {
			# FROM takes all titles in d_mutsu and d_dewa
			vassalize_or_take_under_title = {
				title = d_dewa
				enemy = ROOT
				type = invasion
			}
			vassalize_or_take_under_title = {
				title = d_mutsu
				enemy = ROOT
				type = invasion
			}
			if = {
				limit = {
					has_character_flag = is_hachimantaro
				}
				character_event = { id = soh.4216 } # Decide what to do with the titles
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

fang_las_rebellion = {
	name = CB_NAME_FANG_LAS_REBELLION
	war_name = WAR_NAME_FANG_LAS_REBELLION
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	attacker_can_call_allies = no # Their land would be at risk...
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	on_success = {
		d_liangzhe = {
			holder_scope = {
				save_event_target_as = fang_la
			}
		}
		e_china = {
			holder_scope = {
				save_event_target_as = song_emperor
			}
		}
		event_target:fang_la = {
			prestige = 1000
			vassalize_or_take_under_title = {
				title = k_liangzhe
				enemy = event_target:song_emperor
				type = invasion
			}
			if = {
				limit = {
					k_liangzhe = {
						has_holder = no
					}
				}
				grant_title = k_liangzhe
			}
		}
		event_target:song_emperor = {
			prestige = -1000
			opinion = {
				who = event_target:fang_la
				modifier = opinion_traitor
			}
		}
		ROOT = {
			hidden_tooltip = {
				event_target:song_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
						mandate_penalty_massive_effect = yes
					}
				}
			}
		}
	}
	
	on_reverse_demand = {
		d_liangzhe = {
			holder_scope = {
				save_event_target_as = fang_la
			}
		}
		e_china = {
			holder_scope = {
				save_event_target_as = song_emperor
			}
		}
		event_target:song_emperor = {
			prestige = 1000
		}
		event_target:fang_la = {
			prestige = -1000
			disband_event_forces = fang_las_forces
			any_demesne_title = {
				usurp_title = {
					target = event_target:song_emperor
					type = invasion
				}
			}
			imprison = event_target:song_emperor
			reverse_opinion = {
				who = event_target:song_emperor
				modifier = opinion_traitor
			}
		}
		any_attacker = {
			limit = {
				NOT = {
					character = event_target:fang_la
				}
			}
			prestige = -1000
			disband_event_forces = lu_shinangs_forces
			imprison = event_target:song_emperor
			reverse_opinion = {
				who = event_target:song_emperor
				modifier = opinion_traitor
			}
			any_demesne_title = {
				usurp_title = {
					target = event_target:song_emperor
					type = invasion
				}
			}
		}
		ROOT = {
			hidden_tooltip = {
				event_target:song_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
						mandate_boost_massive_effect = yes
					}
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

go_yeongchang_independence = { # Actually not independence
	name = CB_NAME_GO_YEONGCHANG_INDEPENDENCE
	war_name = WAR_NAME_GO_YEONGCHANG_INDEPENDENCE
	sprite = 9
	truce_days = 3650
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = no
	allow_whitepeace = no # You win, or you lose
	
	# No need to check Chinese Peace Deals

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		ROOT = {
			tier = emperor
		}
	}
	
	on_success = {
		ROOT = {
			participation_scaled_prestige = 1000
		}
		
		# 1: Usurp all vassals
		FROM = {
			any_vassal = {
				limit = {
					higher_tier_than = baron
				}
				set_defacto_liege = ROOT
			}
		}
		
		# 2: Destroy any emperor titles held by FROM and vassalize and imprison FROM
		ROOT = {
			e_northern_steppe = {
				clear_all_chinese_dynasty_flags_and_update_global_flags_effect = yes
				unsafe_destroy_landed_title = THIS
			}
		}
		FROM = {
			set_defacto_liege = ROOT
			imprison = ROOT
			add_trait = former_eoc_trait
		}
		
		# 3: Prestige for allies
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
		
		# Prestige loss for the defender
		FROM = {
			prestige = -1000
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_massive_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_massive_effect = yes
				}
			}
		}
	}
	
	on_reverse_demand = {
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_massive_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_massive_effect = yes
				}
			}
		}
		FROM = {
			prestige = 1000
		}
		ROOT = {
			prestige = -1000
			any_vassal = {
				set_defacto_liege = FROM
			}
			any_demesne_title = {
				limit = {
					tier = emperor
				}
				unsafe_destroy_landed_title = THIS
			}
			any_demesne_title = {
				add_claim = FROM
			}
			set_defacto_liege = FROM
			imprison = FROM
			add_trait = former_eoc_trait
			reverse_opinion = {
				who = FROM
				modifier = opinion_traitor
			}
			any_realm_lord = {
				any_demesne_title = {
					usurp_title = {
						target = FROM
						type = invasion
					}
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}

# Jin + Song vs. Liao
jurchen_invasion = {
	name = CB_NAME_JURCHEN_INVASION
	war_name = WAR_NAME_JURCHEN_INVASION
	sprite = 8
	truce_days = 3650
	diplo_view_region = world_china
	is_permanent = no # Only started from script
	
	# No need to check Chinese Peace Deals
	# No need to check Treasure Fleet

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		always = yes
	}

	on_success = {
		ROOT = {
			participation_scaled_prestige = 1000
		}
		
		# 1: Usurp all vassals
		FROM = {
			any_vassal = {
				limit = {
					higher_tier_than = baron
				}
				set_defacto_liege = ROOT
			}
		}
		
		# 2: Destroy any emperor titles held by FROM and vassalize and imprison FROM
		ROOT = {
			e_northern_steppe = {
				clear_all_chinese_dynasty_flags_and_update_global_flags_effect = yes
				unsafe_destroy_landed_title = THIS
			}
		}
		FROM = {
			set_defacto_liege = ROOT
			imprison = ROOT
			add_trait = former_eoc_trait
		}
		
		# 3: Prestige for allies
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
		
		# Prestige loss for the defender
		FROM = {
			prestige = -1000
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_massive_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_massive_effect = yes
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
			if = {
				limit = {
					dynasty = 1051151 # Zhao - ruling Song dynasty
					independent = yes
					is_chinese_emperor_trigger = yes
				}
				ROOT = {
					character_event = { id = soh.7214 } # Sixteen Prefectures event
				}
			}
		}
	}
	
	on_fail = {
		FROM = {
			participation_scaled_prestige = 500
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		ROOT = {
			prestige = -500
		}
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_large_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_large_effect = yes
				}
			}
		}
	}

	on_reverse_demand = {
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_penalty_massive_effect = yes
				}
			}
		}
		FROM = {
			hidden_tooltip = {
				if = {
					limit = {
						government = chinese_imperial_government
					}
					mandate_boost_massive_effect = yes
				}
			}
		}
		ROOT = {
			prestige = -1000
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
		}
		FROM = {
			participation_scaled_prestige = 2000
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 2000 }
		}
	}
	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

# Jin vs. Song
jurchen_invasion_2 = {
	name = CB_NAME_JURCHEN_INVASION
	war_name = WAR_NAME_JURCHEN_INVASION
	sprite = 8
	truce_days = 3650
	diplo_view_region = world_china
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = yes
	can_call_allies = yes
	
	# No need to check Chinese Peace Deals
	# No need to check Treasure Fleet

	can_use = {
		always = no # Should only be triggered in script
	}
	
	is_valid = {
		always = yes
	}
	
	# If first_jin_song_war is set, attacker takes everything north/east of the Yellow River on victory (i.e. roughly what they'd likely taken in that war) and Song becomes a tributary
	# A draw makes Song a tributary of Jin (i.e. roughly historical)
	# A loss means Song drives Jin out of China
	
	# If second_jin_song_war is set and fall_of_bianjing is not set, attacker takes everything north of the Yangtze (i.e. Jin's initial territorial aims) and Song becomes a tributary
	# A draw gives the attacker everything north/east of the Yellow River and defender everything south/west of it
	# A loss means Song drives Jin out of China
	
	# If second_jin_song_war is set and fall_of_bianjing is set, attacker (or tributary) takes everything north of the Yangtze (i.e. Jin's initial territorial aims) and Song becomes a tributary
	# A draw gives the attacker (or tributary) everything north of the Huai River (i.e. roughly historical borders)
	# A loss means Song retakes all land not held by Liao prior to THAT war from both Jin and any relevant tributary
	
	on_success = {
		e_china = {
			holder_scope = {
				save_event_target_as = song_emperor
			}
		}
		e_golden_river = {
			holder_scope = {
				save_event_target_as = jin_emperor
			}
		}
		event_target:jin_emperor = {
			prestige = 1000
			participation_scaled_prestige = 1000
		}
		any_attacker = {
			limit = { NOT = { character = event_target:jin_emperor } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
		
		event_target:song_emperor = {
			prestige = -1000
			participation_scaled_prestige = -1000
		}
		any_defender = {
			limit = { NOT = { character = event_target:song_emperor } }
			hidden_tooltip = { participation_scaled_prestige = -1000 }
		}
		
		if = {
			limit = {
				has_global_flag = first_jin_song_war
				NOT = {
					has_global_flag = second_jin_song_war
				}
			}
			
			custom_tooltip = {
				text = jin_takes_north_east_of_yellow_river
				# If first_jin_song_war is set, attacker takes everything north/east of the Yellow River on victory (i.e. roughly what they'd likely have taken in that war if it had been a full victory) and Song becomes a tributary
				event_target:song_emperor = {
					# Take land north/east of the Yellow River
					any_demesne_title = {
						limit = {
							OR = {
								tier = count
								tier = baron
							}
							capital_scope = {
								region = world_china
							}
							OR = {
								title = c_changzhi
								title = c_linfen
								de_jure_liege = c_changzhi
								de_jure_liege = c_linfen
								de_jure_liege_or_above = d_bisa
								de_jure_liege_or_above = d_liaoning
								de_jure_liege_or_above = d_lingyuan
								de_jure_liege_or_above = d_hebeidong
								de_jure_liege_or_above = d_hebeixi
								de_jure_liege_or_above = d_datong
								de_jure_liege_or_above = d_dezhou
								de_jure_liege_or_above = d_taiyuan
							}
						}
						usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
					}
					any_realm_lord = {
						limit = {
							any_demesne_title = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								OR = {
									title = c_changzhi
									title = c_linfen
									de_jure_liege = c_changzhi
									de_jure_liege = c_linfen
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
								}
							}
						}
						if = {
							limit = {
								NOR = {
									dynasty = event_target:song_emperor
									any_demesne_title = {
										OR = {
											tier = count
											tier = baron
										}
										NOR = {
											title = c_changzhi
											title = c_linfen
											de_jure_liege = c_changzhi
											de_jure_liege = c_linfen
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
										}
									}
								}
							}
							# Any vassal holding land in the area that's NOT of FROM's dynasty becomes a vassal of ROOT if not also holding land elsewhere
							set_defacto_liege = event_target:jin_emperor
						}
						else = {
							any_demesne_title = {
								limit = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									OR = {
										title = c_changzhi
										title = c_linfen
										de_jure_liege = c_changzhi
										de_jure_liege = c_linfen
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
									}
								}
								# All other vassals lose any land they hold in China
								usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
							}
						}
					}
				}
			}
			event_target:jin_emperor = {
				make_tributary = {
					who = event_target:song_emperor
					tributary_type = chinese_imperial_tributary
				}
			}
		}
		else_if = {
			limit = {
				has_global_flag = second_jin_song_war
				NOT = {
					has_global_flag = fall_of_bianjing
				}
			}
			
			custom_tooltip = {
				text = jin_takes_north_of_yangtze
				# If second_jin_song_war is set and fall_of_bianjing is not set, attacker takes everything north of the Yangtze (i.e. Jin's initial territorial aims) and Song becomes a tributary
				event_target:song_emperor = {
					# Take land north of the Yangtze River
					any_demesne_title = {
						limit = {
							OR = {
								tier = count
								tier = baron
							}
							capital_scope = {
								region = world_china
							}
							OR = {
								title = c_yichang
								title = c_jiangling
								title = c_wuhan
								de_jure_liege = c_yichang
								de_jure_liege = c_jiangling
								de_jure_liege = c_wuhan
								de_jure_liege_or_above = d_bisa
								de_jure_liege_or_above = d_liaoning
								de_jure_liege_or_above = d_lingyuan
								de_jure_liege_or_above = d_hebeidong
								de_jure_liege_or_above = d_hebeixi
								de_jure_liege_or_above = d_datong
								de_jure_liege_or_above = d_dezhou
								de_jure_liege_or_above = d_taiyuan
								de_jure_liege_or_above = d_lanzhou
								de_jure_liege_or_above = d_yongxingjun
								de_jure_liege_or_above = d_yuncheng
								de_jure_liege_or_above = d_tianshui
								de_jure_liege_or_above = d_hanzhong
								de_jure_liege_or_above = d_jingdong
								de_jure_liege_or_above = d_linyi
								de_jure_liege_or_above = d_jingji
								de_jure_liege_or_above = d_jingxibei
								de_jure_liege_or_above = d_huainandong
								de_jure_liege_or_above = d_huainanxi
								de_jure_liege_or_above = d_anqing
								de_jure_liege_or_above = d_suizhou
								de_jure_liege_or_above = d_kuizhou
							}
						}
						usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
					}
					any_realm_lord = {
						limit = {
							any_demesne_title = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								OR = {
									title = c_yichang
									title = c_jiangling
									title = c_wuhan
									de_jure_liege = c_yichang
									de_jure_liege = c_jiangling
									de_jure_liege = c_wuhan
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
									de_jure_liege_or_above = d_lanzhou
									de_jure_liege_or_above = d_yongxingjun
									de_jure_liege_or_above = d_yuncheng
									de_jure_liege_or_above = d_tianshui
									de_jure_liege_or_above = d_hanzhong
									de_jure_liege_or_above = d_jingdong
									de_jure_liege_or_above = d_linyi
									de_jure_liege_or_above = d_jingji
									de_jure_liege_or_above = d_jingxibei
									de_jure_liege_or_above = d_huainandong
									de_jure_liege_or_above = d_huainanxi
									de_jure_liege_or_above = d_anqing
									de_jure_liege_or_above = d_suizhou
									de_jure_liege_or_above = d_kuizhou
								}
							}
						}
						if = {
							limit = {
								NOR = {
									dynasty = event_target:song_emperor
									any_demesne_title = {
										OR = {
											tier = count
											tier = baron
										}
										NOR = {
											title = c_yichang
											title = c_jiangling
											title = c_wuhan
											de_jure_liege = c_yichang
											de_jure_liege = c_jiangling
											de_jure_liege = c_wuhan
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
											de_jure_liege_or_above = d_lanzhou
											de_jure_liege_or_above = d_yongxingjun
											de_jure_liege_or_above = d_yuncheng
											de_jure_liege_or_above = d_tianshui
											de_jure_liege_or_above = d_hanzhong
											de_jure_liege_or_above = d_jingdong
											de_jure_liege_or_above = d_linyi
											de_jure_liege_or_above = d_jingji
											de_jure_liege_or_above = d_jingxibei
											de_jure_liege_or_above = d_huainandong
											de_jure_liege_or_above = d_huainanxi
											de_jure_liege_or_above = d_anqing
											de_jure_liege_or_above = d_suizhou
											de_jure_liege_or_above = d_kuizhou
										}
									}
								}
							}
							# Any vassal holding land in the area that's NOT of FROM's dynasty becomes a vassal of ROOT if not also holding land elsewhere
							set_defacto_liege = event_target:jin_emperor
						}
						else = {
							any_demesne_title = {
								limit = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									OR = {
										title = c_yichang
										title = c_jiangling
										title = c_wuhan
										de_jure_liege = c_yichang
										de_jure_liege = c_jiangling
										de_jure_liege = c_wuhan
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
										de_jure_liege_or_above = d_lanzhou
										de_jure_liege_or_above = d_yongxingjun
										de_jure_liege_or_above = d_yuncheng
										de_jure_liege_or_above = d_tianshui
										de_jure_liege_or_above = d_hanzhong
										de_jure_liege_or_above = d_jingdong
										de_jure_liege_or_above = d_linyi
										de_jure_liege_or_above = d_jingji
										de_jure_liege_or_above = d_jingxibei
										de_jure_liege_or_above = d_huainandong
										de_jure_liege_or_above = d_huainanxi
										de_jure_liege_or_above = d_anqing
										de_jure_liege_or_above = d_suizhou
										de_jure_liege_or_above = d_kuizhou
									}
								}
								# All other vassals lose any land they hold in China
								usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
							}
						}
					}
				}
			}
			event_target:jin_emperor = {
				make_tributary = {
					who = event_target:song_emperor
					tributary_type = chinese_imperial_tributary
				}
			}
		}
		else = {
			# If second_jin_song_war is set and fall_of_bianjing is set, attacker (or tributary) takes everything north of the Yangtze (i.e. Jin's initial territorial aims) and Song becomes a tributary
			if = {
				limit = {
					NOT = {
						e_northern_plain = {
							has_holder = yes
							holder_scope = {
								is_tributary = {
									type = chinese_puppet
									suzerain = event_target:jin_emperor
								}
							}
						}
					}
				}
				custom_tooltip = {
					text = jin_takes_north_of_yangtze
					event_target:song_emperor = {
						# Take land north of the Yangtze River
						any_demesne_title = {
							limit = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								OR = {
									title = c_yichang
									title = c_jiangling
									title = c_wuhan
									de_jure_liege = c_yichang
									de_jure_liege = c_jiangling
									de_jure_liege = c_wuhan
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
									de_jure_liege_or_above = d_lanzhou
									de_jure_liege_or_above = d_yongxingjun
									de_jure_liege_or_above = d_yuncheng
									de_jure_liege_or_above = d_tianshui
									de_jure_liege_or_above = d_hanzhong
									de_jure_liege_or_above = d_jingdong
									de_jure_liege_or_above = d_linyi
									de_jure_liege_or_above = d_jingji
									de_jure_liege_or_above = d_jingxibei
									de_jure_liege_or_above = d_huainandong
									de_jure_liege_or_above = d_huainanxi
									de_jure_liege_or_above = d_anqing
									de_jure_liege_or_above = d_suizhou
									de_jure_liege_or_above = d_kuizhou
								}
							}
							usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
						}
						any_realm_lord = {
							limit = {
								any_demesne_title = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									OR = {
										title = c_yichang
										title = c_jiangling
										title = c_wuhan
										de_jure_liege = c_yichang
										de_jure_liege = c_jiangling
										de_jure_liege = c_wuhan
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
										de_jure_liege_or_above = d_lanzhou
										de_jure_liege_or_above = d_yongxingjun
										de_jure_liege_or_above = d_yuncheng
										de_jure_liege_or_above = d_tianshui
										de_jure_liege_or_above = d_hanzhong
										de_jure_liege_or_above = d_jingdong
										de_jure_liege_or_above = d_linyi
										de_jure_liege_or_above = d_jingji
										de_jure_liege_or_above = d_jingxibei
										de_jure_liege_or_above = d_huainandong
										de_jure_liege_or_above = d_huainanxi
										de_jure_liege_or_above = d_anqing
										de_jure_liege_or_above = d_suizhou
										de_jure_liege_or_above = d_kuizhou
									}
								}
							}
							if = {
								limit = {
									NOR = {
										dynasty = event_target:song_emperor
										any_demesne_title = {
											OR = {
												tier = count
												tier = baron
											}
											NOR = {
												title = c_yichang
												title = c_jiangling
												title = c_wuhan
												de_jure_liege = c_yichang
												de_jure_liege = c_jiangling
												de_jure_liege = c_wuhan
												de_jure_liege_or_above = d_bisa
												de_jure_liege_or_above = d_liaoning
												de_jure_liege_or_above = d_lingyuan
												de_jure_liege_or_above = d_hebeidong
												de_jure_liege_or_above = d_hebeixi
												de_jure_liege_or_above = d_datong
												de_jure_liege_or_above = d_dezhou
												de_jure_liege_or_above = d_taiyuan
												de_jure_liege_or_above = d_lanzhou
												de_jure_liege_or_above = d_yongxingjun
												de_jure_liege_or_above = d_yuncheng
												de_jure_liege_or_above = d_tianshui
												de_jure_liege_or_above = d_hanzhong
												de_jure_liege_or_above = d_jingdong
												de_jure_liege_or_above = d_linyi
												de_jure_liege_or_above = d_jingji
												de_jure_liege_or_above = d_jingxibei
												de_jure_liege_or_above = d_huainandong
												de_jure_liege_or_above = d_huainanxi
												de_jure_liege_or_above = d_anqing
												de_jure_liege_or_above = d_suizhou
												de_jure_liege_or_above = d_kuizhou
											}
										}
									}
								}
								# Any vassal holding land in the area that's NOT of FROM's dynasty becomes a vassal of ROOT if not also holding land elsewhere
								set_defacto_liege = event_target:jin_emperor
							}
							else = {
								any_demesne_title = {
									limit = {
										OR = {
											tier = count
											tier = baron
										}
										capital_scope = {
											region = world_china
										}
										OR = {
											title = c_yichang
											title = c_jiangling
											title = c_wuhan
											de_jure_liege = c_yichang
											de_jure_liege = c_jiangling
											de_jure_liege = c_wuhan
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
											de_jure_liege_or_above = d_lanzhou
											de_jure_liege_or_above = d_yongxingjun
											de_jure_liege_or_above = d_yuncheng
											de_jure_liege_or_above = d_tianshui
											de_jure_liege_or_above = d_hanzhong
											de_jure_liege_or_above = d_jingdong
											de_jure_liege_or_above = d_linyi
											de_jure_liege_or_above = d_jingji
											de_jure_liege_or_above = d_jingxibei
											de_jure_liege_or_above = d_huainandong
											de_jure_liege_or_above = d_huainanxi
											de_jure_liege_or_above = d_anqing
											de_jure_liege_or_above = d_suizhou
											de_jure_liege_or_above = d_kuizhou
										}
									}
									# All other vassals lose any land they hold in China
									usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
								}
							}
						}
					}
				}
			}
			else = {
				# Puppet exists
				custom_tooltip = {
					text = jin_puppet_takes_north_of_yangtze
					e_northern_plain = {
						holder_scope = {
							save_event_target_as = jin_puppet
						}
					}
					event_target:song_emperor = {
						# Take land north of the Yangtze River
						any_demesne_title = {
							limit = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								OR = {
									title = c_yichang
									title = c_jiangling
									title = c_wuhan
									de_jure_liege = c_yichang
									de_jure_liege = c_jiangling
									de_jure_liege = c_wuhan
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
									de_jure_liege_or_above = d_lanzhou
									de_jure_liege_or_above = d_yongxingjun
									de_jure_liege_or_above = d_yuncheng
									de_jure_liege_or_above = d_tianshui
									de_jure_liege_or_above = d_hanzhong
									de_jure_liege_or_above = d_jingdong
									de_jure_liege_or_above = d_linyi
									de_jure_liege_or_above = d_jingji
									de_jure_liege_or_above = d_jingxibei
									de_jure_liege_or_above = d_huainandong
									de_jure_liege_or_above = d_huainanxi
									de_jure_liege_or_above = d_anqing
									de_jure_liege_or_above = d_suizhou
									de_jure_liege_or_above = d_kuizhou
								}
							}
							usurp_title_plus_barony_if_unlanded = event_target:jin_puppet
						}
						any_realm_lord = {
							limit = {
								any_demesne_title = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									OR = {
										title = c_yichang
										title = c_jiangling
										title = c_wuhan
										de_jure_liege = c_yichang
										de_jure_liege = c_jiangling
										de_jure_liege = c_wuhan
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
										de_jure_liege_or_above = d_lanzhou
										de_jure_liege_or_above = d_yongxingjun
										de_jure_liege_or_above = d_yuncheng
										de_jure_liege_or_above = d_tianshui
										de_jure_liege_or_above = d_hanzhong
										de_jure_liege_or_above = d_jingdong
										de_jure_liege_or_above = d_linyi
										de_jure_liege_or_above = d_jingji
										de_jure_liege_or_above = d_jingxibei
										de_jure_liege_or_above = d_huainandong
										de_jure_liege_or_above = d_huainanxi
										de_jure_liege_or_above = d_anqing
										de_jure_liege_or_above = d_suizhou
										de_jure_liege_or_above = d_kuizhou
									}
								}
							}
							if = {
								limit = {
									NOR = {
										dynasty = event_target:song_emperor
										any_demesne_title = {
											OR = {
												tier = count
												tier = baron
											}
											NOR = {
												title = c_yichang
												title = c_jiangling
												title = c_wuhan
												de_jure_liege = c_yichang
												de_jure_liege = c_jiangling
												de_jure_liege = c_wuhan
												de_jure_liege_or_above = d_bisa
												de_jure_liege_or_above = d_liaoning
												de_jure_liege_or_above = d_lingyuan
												de_jure_liege_or_above = d_hebeidong
												de_jure_liege_or_above = d_hebeixi
												de_jure_liege_or_above = d_datong
												de_jure_liege_or_above = d_dezhou
												de_jure_liege_or_above = d_taiyuan
												de_jure_liege_or_above = d_lanzhou
												de_jure_liege_or_above = d_yongxingjun
												de_jure_liege_or_above = d_yuncheng
												de_jure_liege_or_above = d_tianshui
												de_jure_liege_or_above = d_hanzhong
												de_jure_liege_or_above = d_jingdong
												de_jure_liege_or_above = d_linyi
												de_jure_liege_or_above = d_jingji
												de_jure_liege_or_above = d_jingxibei
												de_jure_liege_or_above = d_huainandong
												de_jure_liege_or_above = d_huainanxi
												de_jure_liege_or_above = d_anqing
												de_jure_liege_or_above = d_suizhou
												de_jure_liege_or_above = d_kuizhou
											}
										}
									}
								}
								# Any vassal holding land in the area that's NOT of FROM's dynasty becomes a vassal of event_target:jin_puppet if not also holding land elsewhere
								set_defacto_liege = event_target:jin_puppet
							}
							else = {
								any_demesne_title = {
									limit = {
										OR = {
											tier = count
											tier = baron
										}
										capital_scope = {
											region = world_china
										}
										OR = {
											title = c_yichang
											title = c_jiangling
											title = c_wuhan
											de_jure_liege = c_yichang
											de_jure_liege = c_jiangling
											de_jure_liege = c_wuhan
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
											de_jure_liege_or_above = d_lanzhou
											de_jure_liege_or_above = d_yongxingjun
											de_jure_liege_or_above = d_yuncheng
											de_jure_liege_or_above = d_tianshui
											de_jure_liege_or_above = d_hanzhong
											de_jure_liege_or_above = d_jingdong
											de_jure_liege_or_above = d_linyi
											de_jure_liege_or_above = d_jingji
											de_jure_liege_or_above = d_jingxibei
											de_jure_liege_or_above = d_huainandong
											de_jure_liege_or_above = d_huainanxi
											de_jure_liege_or_above = d_anqing
											de_jure_liege_or_above = d_suizhou
											de_jure_liege_or_above = d_kuizhou
										}
									}
									# All other vassals lose any land they hold in China
									usurp_title_plus_barony_if_unlanded = event_target:jin_puppet
								}
							}
						}
					}
				}
			}
			event_target:jin_emperor = {
				make_tributary = {
					who = event_target:song_emperor
					tributary_type = chinese_imperial_tributary
				}
			}
		}
		ROOT = {
			hidden_tooltip = {
				event_target:jin_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
						mandate_boost_massive_effect = yes
					}
				}
				event_target:song_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
					}
					mandate_penalty_massive_effect = yes
				}
			}
		}
	}
	
	on_fail = {
		e_china = {
			holder_scope = {
				save_event_target_as = song_emperor
			}
		}
		e_golden_river = {
			holder_scope = {
				save_event_target_as = jin_emperor
			}
		}
		ROOT = {
			hidden_tooltip = {
				event_target:jin_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
						mandate_boost_large_effect = yes
					}
				}
				event_target:song_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
					}
					mandate_penalty_large_effect = yes
				}
			}
		}
		event_target:jin_emperor = {
			prestige = -100
			participation_scaled_prestige = -100
		}
		any_attacker = {
			limit = { NOT = { character = event_target:jin_emperor } }
			hidden_tooltip = { participation_scaled_prestige = -100 }
		}
		
		event_target:song_emperor_emperor = {
			prestige = -100
			participation_scaled_prestige = -100
		}
		any_defender = {
			limit = { NOT = { character = event_target:song_emperor } }
			hidden_tooltip = { participation_scaled_prestige = -100 }
		}
		
		if = {
			limit = {
				has_global_flag = first_jin_song_war
				NOT = {
					has_global_flag = second_jin_song_war
				}
			}
			# A draw makes Song a tributary of Jin (i.e. roughly historical)
			event_target:jin_emperor = {
				make_tributary = {
					who = event_target:song_emperor
					tributary_type = chinese_imperial_tributary
				}
			}
		}
		else_if = {
			limit = {
				has_global_flag = second_jin_song_war
				NOT = {
					has_global_flag = fall_of_bianjing
				}
			}
			
			# A draw gives the attacker everything north/east of the Yellow River and defender everything south/west of it	
			custom_tooltip = {
				text = jin_takes_north_east_of_yellow_river_song_takes_south_west
				event_target:song_emperor = {
					# Take land north/east of the Yellow River
					any_demesne_title = {
						limit = {
							OR = {
								tier = count
								tier = baron
							}
							capital_scope = {
								region = world_china
							}
							OR = {
								title = c_changzhi
								title = c_linfen
								de_jure_liege = c_changzhi
								de_jure_liege = c_linfen
								de_jure_liege_or_above = d_bisa
								de_jure_liege_or_above = d_liaoning
								de_jure_liege_or_above = d_lingyuan
								de_jure_liege_or_above = d_hebeidong
								de_jure_liege_or_above = d_hebeixi
								de_jure_liege_or_above = d_datong
								de_jure_liege_or_above = d_dezhou
								de_jure_liege_or_above = d_taiyuan
							}
						}
						usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
					}
					any_realm_lord = {
						limit = {
							any_demesne_title = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								OR = {
									title = c_changzhi
									title = c_linfen
									de_jure_liege = c_changzhi
									de_jure_liege = c_linfen
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
								}
							}
						}
						if = {
							limit = {
								NOR = {
									dynasty = event_target:song_emperor
									any_demesne_title = {
										OR = {
											tier = count
											tier = baron
										}
										NOR = {
											title = c_changzhi
											title = c_linfen
											de_jure_liege = c_changzhi
											de_jure_liege = c_linfen
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
										}
									}
								}
							}
							# Any vassal holding land in the area that's NOT of FROM's dynasty becomes a vassal of ROOT if not also holding land elsewhere
							set_defacto_liege = event_target:jin_emperor
						}
						else = {
							any_demesne_title = {
								limit = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									OR = {
										title = c_changzhi
										title = c_linfen
										de_jure_liege = c_changzhi
										de_jure_liege = c_linfen
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
									}
								}
								# All other vassals lose any land they hold in China
								usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
							}
						}
					}
				}
				event_target:jin_emperor = {
					# Take land south/west of the Yellow River
					any_demesne_title = {
						limit = {
							OR = {
								tier = count
								tier = baron
							}
							capital_scope = {
								region = world_china
							}
							NOR = {
								title = c_changzhi
								title = c_linfen
								de_jure_liege = c_changzhi
								de_jure_liege = c_linfen
								de_jure_liege_or_above = d_bisa
								de_jure_liege_or_above = d_liaoning
								de_jure_liege_or_above = d_lingyuan
								de_jure_liege_or_above = d_hebeidong
								de_jure_liege_or_above = d_hebeixi
								de_jure_liege_or_above = d_datong
								de_jure_liege_or_above = d_dezhou
								de_jure_liege_or_above = d_taiyuan
							}
						}
						usurp_title_plus_barony_if_unlanded = event_target:song_emperor
					}
					any_realm_lord = {
						limit = {
							any_demesne_title = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								NOR = {
									title = c_changzhi
									title = c_linfen
									de_jure_liege = c_changzhi
									de_jure_liege = c_linfen
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
								}
							}
						}
						if = {
							limit = {
								NOR = {
									dynasty = event_target:jin_emperor
									any_demesne_title = {
										OR = {
											tier = count
											tier = baron
										}
										NOR = {
											title = c_changzhi
											title = c_linfen
											de_jure_liege = c_changzhi
											de_jure_liege = c_linfen
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
										}
									}
								}
							}
							# Any vassal holding land in the area that's NOT of ROOT's dynasty becomes a vassal of FROM if not also holding land elsewhere
							set_defacto_liege = event_target:song_emperor
						}
						else = {
							any_demesne_title = {
								limit = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									NOR = {
										title = c_changzhi
										title = c_linfen
										de_jure_liege = c_changzhi
										de_jure_liege = c_linfen
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
									}
								}
								# All other vassals lose any land they hold in China
								usurp_title_plus_barony_if_unlanded = event_target:song_emperor
							}
						}
					}
				}
			}
		}
		else = {
			# A draw gives the attacker (or tributary) everything north of the Huai River (i.e. roughly historical borders)
			if = {
				limit = {
					NOT = {
						e_northern_plain = {
							has_holder = yes
							holder_scope = {
								is_tributary = {
									type = chinese_puppet
									suzerain = ROOT
								}
							}
						}
					}
				}
				custom_tooltip = {
					text = jin_takes_north_of_huai
					event_target:song_emperor = {
						# Take land north of the Huai River
						any_demesne_title = {
							limit = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								OR = {
									title = c_shiyan
									title = c_xinyang
									title = c_huangchuan
									title = c_lianyungang
									title = c_zhengzhou
									title = c_luoyang
									title = c_pingdingshan
									title = c_nanyang
									title = c_luanchuan
									title = c_qingyang
									title = c_dingxi
									title = c_tianshui
									de_jure_liege = c_shiyan
									de_jure_liege = c_xinyang
									de_jure_liege = c_huangchuan
									de_jure_liege = c_lianyungang
									de_jure_liege = c_zhengzhou
									de_jure_liege = c_luoyang
									de_jure_liege = c_pingdingshan
									de_jure_liege = c_nanyang
									de_jure_liege = c_luanchuan
									de_jure_liege = c_qingyang
									de_jure_liege = c_dingxi
									de_jure_liege = c_tianshui
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
									de_jure_liege_or_above = d_lanzhou
									de_jure_liege_or_above = d_yongxingjun
									de_jure_liege_or_above = d_yuncheng
									de_jure_liege_or_above = d_jingdong
									de_jure_liege_or_above = d_linyi
									de_jure_liege_or_above = d_jingji
								}
							}
							usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
						}
						any_realm_lord = {
							limit = {
								any_demesne_title = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									OR = {
										title = c_shiyan
										title = c_xinyang
										title = c_huangchuan
										title = c_lianyungang
										title = c_zhengzhou
										title = c_luoyang
										title = c_pingdingshan
										title = c_nanyang
										title = c_luanchuan
										title = c_qingyang
										title = c_dingxi
										title = c_tianshui
										de_jure_liege = c_shiyan
										de_jure_liege = c_xinyang
										de_jure_liege = c_huangchuan
										de_jure_liege = c_lianyungang
										de_jure_liege = c_zhengzhou
										de_jure_liege = c_luoyang
										de_jure_liege = c_pingdingshan
										de_jure_liege = c_nanyang
										de_jure_liege = c_luanchuan
										de_jure_liege = c_qingyang
										de_jure_liege = c_dingxi
										de_jure_liege = c_tianshui
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
										de_jure_liege_or_above = d_lanzhou
										de_jure_liege_or_above = d_yongxingjun
										de_jure_liege_or_above = d_yuncheng
										de_jure_liege_or_above = d_jingdong
										de_jure_liege_or_above = d_linyi
										de_jure_liege_or_above = d_jingji
									}
								}
							}
							if = {
								limit = {
									NOR = {
										dynasty = event_target:song_emperor
										any_demesne_title = {
											OR = {
												tier = count
												tier = baron
											}
											NOR = {
												title = c_shiyan
												title = c_xinyang
												title = c_huangchuan
												title = c_lianyungang
												title = c_zhengzhou
												title = c_luoyang
												title = c_pingdingshan
												title = c_nanyang
												title = c_luanchuan
												title = c_qingyang
												title = c_dingxi
												title = c_tianshui
												de_jure_liege = c_shiyan
												de_jure_liege = c_xinyang
												de_jure_liege = c_huangchuan
												de_jure_liege = c_lianyungang
												de_jure_liege = c_zhengzhou
												de_jure_liege = c_luoyang
												de_jure_liege = c_pingdingshan
												de_jure_liege = c_nanyang
												de_jure_liege = c_luanchuan
												de_jure_liege = c_qingyang
												de_jure_liege = c_dingxi
												de_jure_liege = c_tianshui
												de_jure_liege_or_above = d_bisa
												de_jure_liege_or_above = d_liaoning
												de_jure_liege_or_above = d_lingyuan
												de_jure_liege_or_above = d_hebeidong
												de_jure_liege_or_above = d_hebeixi
												de_jure_liege_or_above = d_datong
												de_jure_liege_or_above = d_dezhou
												de_jure_liege_or_above = d_taiyuan
												de_jure_liege_or_above = d_lanzhou
												de_jure_liege_or_above = d_yongxingjun
												de_jure_liege_or_above = d_yuncheng
												de_jure_liege_or_above = d_jingdong
												de_jure_liege_or_above = d_linyi
												de_jure_liege_or_above = d_jingji
											}
										}
									}
								}
								# Any vassal holding land in the area that's NOT of FROM's dynasty becomes a vassal of ROOT if not also holding land elsewhere
								set_defacto_liege = event_target:jin_emperor
							}
							else = {
								any_demesne_title = {
									limit = {
										OR = {
											tier = count
											tier = baron
										}
										capital_scope = {
											region = world_china
										}
										OR = {
											title = c_shiyan
											title = c_xinyang
											title = c_huangchuan
											title = c_lianyungang
											title = c_zhengzhou
											title = c_luoyang
											title = c_pingdingshan
											title = c_nanyang
											title = c_luanchuan
											title = c_qingyang
											title = c_dingxi
											title = c_tianshui
											de_jure_liege = c_shiyan
											de_jure_liege = c_xinyang
											de_jure_liege = c_huangchuan
											de_jure_liege = c_lianyungang
											de_jure_liege = c_zhengzhou
											de_jure_liege = c_luoyang
											de_jure_liege = c_pingdingshan
											de_jure_liege = c_nanyang
											de_jure_liege = c_luanchuan
											de_jure_liege = c_qingyang
											de_jure_liege = c_dingxi
											de_jure_liege = c_tianshui
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
											de_jure_liege_or_above = d_lanzhou
											de_jure_liege_or_above = d_yongxingjun
											de_jure_liege_or_above = d_yuncheng
											de_jure_liege_or_above = d_jingdong
											de_jure_liege_or_above = d_linyi
											de_jure_liege_or_above = d_jingji
										}
									}
									# All other vassals lose any land they hold in China
									usurp_title_plus_barony_if_unlanded = event_target:jin_emperor
								}
							}
						}
					}
				}
			}
			else = {
				custom_tooltip = {
					text = jin_puppet_takes_north_of_huai
					e_northern_plain = {
						holder_scope = {
							save_event_target_as = jin_puppet
						}
					}
					event_target:song_emperor = {
						# Take land north of the Yangtze River
						any_demesne_title = {
							limit = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								OR = {
									title = c_shiyan
									title = c_xinyang
									title = c_huangchuan
									title = c_lianyungang
									de_jure_liege = c_shiyan
									de_jure_liege = c_xinyang
									de_jure_liege = c_huangchuan
									de_jure_liege = c_lianyungang
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
									de_jure_liege_or_above = d_hebeixi
									de_jure_liege_or_above = d_datong
									de_jure_liege_or_above = d_dezhou
									de_jure_liege_or_above = d_taiyuan
									de_jure_liege_or_above = d_lanzhou
									de_jure_liege_or_above = d_yongxingjun
									de_jure_liege_or_above = d_yuncheng
									de_jure_liege_or_above = d_tianshui
									de_jure_liege_or_above = d_hanzhong
									de_jure_liege_or_above = d_jingdong
									de_jure_liege_or_above = d_linyi
									de_jure_liege_or_above = d_jingji
									de_jure_liege_or_above = d_jingxibei
								}
							}
							usurp_title_plus_barony_if_unlanded = event_target:jin_puppet
						}
						any_realm_lord = {
							limit = {
								any_demesne_title = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									OR = {
										title = c_shiyan
										title = c_xinyang
										title = c_huangchuan
										title = c_lianyungang
										de_jure_liege = c_shiyan
										de_jure_liege = c_xinyang
										de_jure_liege = c_huangchuan
										de_jure_liege = c_lianyungang
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
										de_jure_liege_or_above = d_hebeixi
										de_jure_liege_or_above = d_datong
										de_jure_liege_or_above = d_dezhou
										de_jure_liege_or_above = d_taiyuan
										de_jure_liege_or_above = d_lanzhou
										de_jure_liege_or_above = d_yongxingjun
										de_jure_liege_or_above = d_yuncheng
										de_jure_liege_or_above = d_tianshui
										de_jure_liege_or_above = d_hanzhong
										de_jure_liege_or_above = d_jingdong
										de_jure_liege_or_above = d_linyi
										de_jure_liege_or_above = d_jingji
										de_jure_liege_or_above = d_jingxibei
									}
								}
							}
							if = {
								limit = {
									NOR = {
										dynasty = event_target:song_emperor
										any_demesne_title = {
											OR = {
												tier = count
												tier = baron
											}
											NOR = {
												title = c_shiyan
												title = c_xinyang
												title = c_huangchuan
												title = c_lianyungang
												de_jure_liege = c_shiyan
												de_jure_liege = c_xinyang
												de_jure_liege = c_huangchuan
												de_jure_liege = c_lianyungang
												de_jure_liege_or_above = d_bisa
												de_jure_liege_or_above = d_liaoning
												de_jure_liege_or_above = d_lingyuan
												de_jure_liege_or_above = d_hebeidong
												de_jure_liege_or_above = d_hebeixi
												de_jure_liege_or_above = d_datong
												de_jure_liege_or_above = d_dezhou
												de_jure_liege_or_above = d_taiyuan
												de_jure_liege_or_above = d_lanzhou
												de_jure_liege_or_above = d_yongxingjun
												de_jure_liege_or_above = d_yuncheng
												de_jure_liege_or_above = d_tianshui
												de_jure_liege_or_above = d_hanzhong
												de_jure_liege_or_above = d_jingdong
												de_jure_liege_or_above = d_linyi
												de_jure_liege_or_above = d_jingji
												de_jure_liege_or_above = d_jingxibei
											}
										}
									}
								}
								# Any vassal holding land in the area that's NOT of FROM's dynasty becomes a vassal of event_target:jin_puppet if not also holding land elsewhere
								set_defacto_liege = event_target:jin_puppet
							}
							else = {
								any_demesne_title = {
									limit = {
										OR = {
											tier = count
											tier = baron
										}
										capital_scope = {
											region = world_china
										}
										OR = {
											title = c_shiyan
											title = c_xinyang
											title = c_huangchuan
											title = c_lianyungang
											de_jure_liege = c_shiyan
											de_jure_liege = c_xinyang
											de_jure_liege = c_huangchuan
											de_jure_liege = c_lianyungang
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
											de_jure_liege_or_above = d_hebeixi
											de_jure_liege_or_above = d_datong
											de_jure_liege_or_above = d_dezhou
											de_jure_liege_or_above = d_taiyuan
											de_jure_liege_or_above = d_lanzhou
											de_jure_liege_or_above = d_yongxingjun
											de_jure_liege_or_above = d_yuncheng
											de_jure_liege_or_above = d_tianshui
											de_jure_liege_or_above = d_hanzhong
											de_jure_liege_or_above = d_jingdong
											de_jure_liege_or_above = d_linyi
											de_jure_liege_or_above = d_jingji
											de_jure_liege_or_above = d_jingxibei
										}
									}
									# All other vassals lose any land they hold in China
									usurp_title_plus_barony_if_unlanded = event_target:jin_puppet
								}
							}
						}
					}
				}
			}
		}
	}
	
	on_reverse_demand = {
		e_china = {
			holder_scope = {
				save_event_target_as = song_emperor
			}
		}
		e_golden_river = {
			holder_scope = {
				save_event_target_as = jin_emperor
			}
		}
		ROOT = {
			hidden_tooltip = {
				event_target:jin_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
						mandate_penalty_massive_effect = yes
					}
				}
				event_target:song_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
					}
					mandate_boost_massive_effect = yes
				}
			}
		}
		event_target:jin_emperor = {
			prestige = -1000
			participation_scaled_prestige = -1000
		}
		any_attacker = {
			limit = { NOT = { character = event_target:jin_emperor } }
			hidden_tooltip = { participation_scaled_prestige = -1000 }
		}
		
		event_target:song_emperor = {
			prestige = 1000
			participation_scaled_prestige = 1000
		}
		any_defender = {
			limit = { NOT = { character = event_target:song_emperor } }
			hidden_tooltip = { participation_scaled_prestige = 1000 }
		}
		
		if = {
			limit = {
				has_global_flag = first_jin_song_war
				NOT = {
					has_global_flag = second_jin_song_war
				}
			}
			
			# A loss means Song drives Jin out of China
			custom_tooltip = {
				text = song_retakes_china
				event_target:jin_emperor = {
					# Take all Jurchen land in China
					any_demesne_title = {
						limit = {
							OR = {
								tier = count
								tier = baron
							}
							capital_scope = {
								region = world_china
							}
						}
						usurp_title_plus_barony_if_unlanded = event_target:song_emperor
					}
					any_realm_lord = {
						limit = {
							any_demesne_title = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
							}
						}
						if = {
							limit = {
								NOR = {
									dynasty = event_target:song_emperor
									any_demesne_title = {
										OR = {
											tier = count
											tier = baron
										}
										NOT = {
											capital_scope = {
												region = world_china
											}
										}
									}
								}
							}
							# Any vassal holding land in China that's NOT of ROOT's dynasty becomes a vassal of FROM if not also holding land elsewhere
							set_defacto_liege = event_target:jin_emperor
						}
						else = {
							any_demesne_title = {
								limit = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
								}
								# All other vassals lose any land they hold in China
								usurp_title_plus_barony_if_unlanded = event_target:song_emperor
							}
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				has_global_flag = second_jin_song_war
				NOT = {
					has_global_flag = fall_of_bianjing
				}
			}
			
			# A loss means Song drives Jin out of China
			custom_tooltip = {
				text = song_retakes_china
				event_target:jin_emperor = {
					# Take all Jurchen land in China
					any_demesne_title = {
						limit = {
							OR = {
								tier = count
								tier = baron
							}
							capital_scope = {
								region = world_china
							}
						}
						usurp_title_plus_barony_if_unlanded = event_target:song_emperor
					}
					any_realm_lord = {
						limit = {
							any_demesne_title = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
							}
						}
						if = {
							limit = {
								NOR = {
									dynasty = event_target:jin_emperor
									any_demesne_title = {
										OR = {
											tier = count
											tier = baron
										}
										NOT = {
											capital_scope = {
												region = world_china
											}
										}
									}
								}
							}
							# Any vassal holding land in China that's NOT of ROOT's dynasty becomes a vassal of FROM if not also holding land elsewhere
							set_defacto_liege = event_target:song_emperor
						}
						else = {
							any_demesne_title = {
								limit = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
								}
								# All other vassals lose any land they hold in China
								usurp_title_plus_barony_if_unlanded = event_target:song_emperor
							}
						}
					}
				}
			}
		}
		else = {
			# A loss means Song retakes all land not held by Liao prior to THAT war from both Jin and any relevant tributary
			custom_tooltip = {
				text = song_retakes_pre_liao_borders
				event_target:jin_emperor = {
					# Take everything NOT taken from Liao
					any_demesne_title = {
						limit = {
							OR = {
								tier = count
								tier = baron
							}
							capital_scope = {
								region = world_china
							}
							NOR = {
								title = c_datong
								de_jure_liege = c_datong
								de_jure_liege_or_above = d_bisa
								de_jure_liege_or_above = d_liaoning
								de_jure_liege_or_above = d_lingyuan
								de_jure_liege_or_above = d_hebeidong
							}
						}
						usurp_title_plus_barony_if_unlanded = event_target:song_emperor
					}
					any_realm_lord = {
						limit = {
							any_demesne_title = {
								OR = {
									tier = count
									tier = baron
								}
								capital_scope = {
									region = world_china
								}
								NOR = {
									title = c_datong
									de_jure_liege = c_datong
									de_jure_liege_or_above = d_bisa
									de_jure_liege_or_above = d_liaoning
									de_jure_liege_or_above = d_lingyuan
									de_jure_liege_or_above = d_hebeidong
								}
							}
						}
						if = {
							limit = {
								NOR = {
									dynasty = event_target:jin_emperor
									any_demesne_title = {
										OR = {
											tier = count
											tier = baron
										}
										NOR = {
											title = c_datong
											de_jure_liege = c_datong
											de_jure_liege_or_above = d_bisa
											de_jure_liege_or_above = d_liaoning
											de_jure_liege_or_above = d_lingyuan
											de_jure_liege_or_above = d_hebeidong
										}
									}
								}
							}
							# Any vassal holding land in the area that's NOT of ROOT's dynasty becomes a vassal of FROM if not also holding land elsewhere
							set_defacto_liege = event_target:song_emperor
						}
						else = {
							any_demesne_title = {
								limit = {
									OR = {
										tier = count
										tier = baron
									}
									capital_scope = {
										region = world_china
									}
									NOR = {
										title = c_datong
										de_jure_liege = c_datong
										de_jure_liege_or_above = d_bisa
										de_jure_liege_or_above = d_liaoning
										de_jure_liege_or_above = d_lingyuan
										de_jure_liege_or_above = d_hebeidong
									}
								}
								# All other vassals lose any land they hold in China
								usurp_title_plus_barony_if_unlanded = event_target:song_emperor
							}
						}
					}
				}
			}
			
			# Handle any relevant puppet
			if = {
				limit = {
					e_northern_plain = {
						has_holder = yes
						holder_scope = {
							is_tributary = {
								type = chinese_puppet
								suzerain = event_target:jin_emperor
							}
						}
					}
				}
				custom_tooltip = {
					text = jins_puppet_is_taken_by_song
					e_northern_plain = {
						holder_scope = {
							any_vassal = {
								set_defacto_liege = event_target:song_emperor
							}
							e_northern_plain = {
								unsafe_destroy_landed_title = THIS
							}
							e_golden_river = {
								holder_scope = {
									remove_tributary = PREVPREV
								}
							}
							set_defacto_liege = event_target:song_emperor
							event_target:song_emperor = {
								opinion = {
									who = PREV
									modifier = opinion_traitor
								}
							}
						}
					}
				}
			}
		}
	}
	
	
	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

jurchen_invasion_3 = { # Taking care of Go Yeongchang
	name = CB_NAME_JURCHEN_INVASION
	war_name = WAR_NAME_JURCHEN_INVASION
	sprite = 8
	truce_days = 3650
	diplo_view_region = world_china
	is_permanent = no # Only started from script

	allowed_to_target_tributaries = no
	can_ask_to_join_war = yes
	can_call_allies = yes
	allow_whitepeace = no # You win, or you lose

	can_use = {
		always = no # Should only be triggered in script
	}
	
	# No need to check Chinese Peace Deals
	
	is_valid = {
		FROM = {
			tier = emperor
		}
	}
	
	on_success = {
		e_golden_river = {
			holder_scope = {
				save_event_target_as = jin_emperor
			}
		}
		e_eastern_reaches = {
			holder_scope = {
				save_event_target_as = go_yeongchang
			}
		}
		event_target:jin_emperor = {
			prestige = 1000
		}
		event_target:go_yeongchang = {
			prestige = -1000
			any_realm_lord = {
				set_defacto_liege = event_target:jin_emperor
			}
			any_demesne_title = {
				limit = {
					tier = emperor
				}
				unsafe_destroy_landed_title = THIS
			}
			set_defacto_liege = event_target:jin_emperor
			add_trait = former_eoc_trait
		}
		ROOT = {
			hidden_tooltip = {
				event_target:jin_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
						mandate_boost_large_effect = yes
					}
				}
				event_target:go_yeongchang = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
					}
					mandate_penalty_large_effect = yes
				}
			}
		}
	}
	
	on_reverse_demand = {
		ROOT = {
			hidden_tooltip = {
				event_target:jin_emperor = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
						mandate_penalty_large_effect = yes
					}
				}
				event_target:go_yeongchang = {
					if = {
						limit = {
							government = chinese_imperial_government
						}
					}
					mandate_boost_large_effect = yes
				}
			}
		}
		e_golden_river = {
			holder_scope = {
				save_event_target_as = jin_emperor
			}
		}
		e_eastern_reaches = {
			holder_scope = {
				save_event_target_as = go_yeongchang
			}
		}
		event_target:jin_emperor = {
			prestige = -1000
		}
		event_target:go_yeongchang = {
			prestige = 1000
		}
	}
	
	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}