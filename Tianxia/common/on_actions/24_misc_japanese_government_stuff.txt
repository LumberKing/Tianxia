# Character scope
on_startup = {
	events = {
		soh.3501 # Regency handling loop setup
		soh.7015 # Give the Tenno diplomatic_immunity = yes if he should have it
	}
}

# Character scope
on_death = {
	events = {
		soh.3507 # Various versions of japanese_regent inheritance
		
		soh.7001 # Chrysanthemum Throne destruction if non-Imperial Family heir
		soh.7013 # dead_tenno trait and title
		soh.7014 # dead_ryukyuan_tenno trait and title
		
		soh.7101 # Japanese Feudal trait inheritance
		soh.7102 # Japanese Monastic Feudal trait inheritance
	}
}

# ROOT is the character
# FROM is the title
# FROMFROM is the old holder
on_new_holder = {
	events = {
		soh.3504 # under_regency (+ retired_emperor) handling
		soh.3505 # under_regency2 handling
		soh.3506 # under_regency3 handling
		
		soh.7008 # Maybe convert an Imperial Family member and/or have the AI restore someone to it
		soh.7009 # Destroy secondary empires for the Tenno
		soh.7010 # Regnal names for the Tenno
		soh.7012 # retired_emperor cleanup
		
		soh.7103 # Switch to Japanese Feudal?
		soh.7104 # Switch to Japanese Monastic Feudal?
		
		soh.7109 # Monk/etc. fix
		soh.7018 # Handle diplomatic_immunity = yes for the Tenno and maybe release him from prison
	}
}

# ROOT is the character
# FROM is the title
# FROMFROM is the old holder
on_new_holder_inheritance = {
	events = {
		soh.3504 # under_regency (+ retired_emperor) handling
		soh.3505 # under_regency2 handling
		soh.3506 # under_regency3 handling
		soh.3508 # Full usurpation/abdication handling of all versions of japanese_regent
		
		soh.7008 # Maybe convert an Imperial Family member and/or have the AI restore someone to it
		soh.7009 # Destroy secondary empires for the Tenno
		soh.7010 # Regnal names for the Tenno
		soh.7012 # retired_emperor cleanup
		
		soh.7103 # Switch to Japanese Feudal?
		soh.7104 # Switch to Japanese Monastic Feudal?
		soh.7107 # Switch to Japanese Feudal?
		soh.7108 # Switch to Japanese Monastic Feudal?
		
		soh.7109 # Monk/etc. fix
		soh.7018 # Handle diplomatic_immunity = yes for the Tenno and maybe release him from prison
	}
}

# ROOT is the character
# FROM is the title
# FROMFROM is the old holder
on_new_holder_usurpation = {
	events = {
		soh.3504 # under_regency (+ retired_emperor) handling
		soh.3505 # under_regency2 handling
		soh.3506 # under_regency3 handling
		soh.3508 # Full usurpation/abdication handling of all versions of japanese_regent
		
		soh.7008 # Maybe convert an Imperial Family member and/or have the AI restore someone to it
		soh.7009 # Destroy secondary empires for the Tenno
		soh.7010 # Regnal names for the Tenno
		soh.7012 # retired_emperor cleanup
		
		soh.7103 # Switch to Japanese Feudal?
		soh.7104 # Switch to Japanese Monastic Feudal?
		soh.7105 # Switch to Japanese Feudal?
		soh.7106 # Switch to Japanese Monastic Feudal?
		
		soh.7109 # Monk/etc. fix
		soh.7018 # Handle diplomatic_immunity = yes for the Tenno and maybe release him from prison
	}
}

# Character scope
on_birth = {
	events = {
		soh.7003 # Inheritance sanity check
	}
}

# Character scope
on_marriage = {
	events = {
		# Fixing stupid stuff for the Tenno
		soh.7004 # Male holder of the Chrysanthemum Throne matri-marries - fix it!
		soh.7005 # Female holder of the Chrysanthemum Throne marries regularly - fix it!
		
		soh.7405 # Saio/Saiin failsafe
	}
}

# Character scope
on_yearly_pulse = {
	events = {
		soh.3509 # Cleanup of under_regency
		soh.3510 # Cleanup of under_regency2
		soh.3511 # Cleanup of under_regency3
		soh.3512 # Cleanup of all versions of japanese_regent
		soh.3515 # AI Tenno meddles
		soh.3516 # AI Shogun meddles
		soh.3517 # AI knockoff meddles
		soh.3518 # AI PR for the Tenno meddles
		soh.3519 # AI PR for the Shogun meddles
		soh.3520 # AI PR for the knockoff meddles
		
		soh.7006 # AI Imperial Family restoration
		soh.7007 # Unlanded AI "Japanese enough" Imperial Family member converts to Shinto if the Imperial Family is too small		
		soh.7016 # Remove diplomatic_immunity = yes from the Tenno if he should not have it
	}
}

# Character scope
on_character_convert_religion = {
	events = {
		soh.3509 # Cleanup of under_regency
		soh.3510 # Cleanup of under_regency2
		soh.3511 # Cleanup of under_regency3
		soh.3512 # Cleanup of all versions of japanese_regent
		
		soh.7019 # Handling of diplomatic_immunity = yes for the Tenno and possible release from prison
	}
}

# Character scope
on_character_convert_culture = {
	events = {
		soh.3510 # Cleanup of under_regency2
		soh.3512 # Cleanup of all versions of japanese_regent
		
		soh.7020 # Handling of diplomatic_immunity = yes for the Tenno and possible release from prison
	}
}

# FROM is attacker
# ROOT is defender
on_war_ended_victory = {
	events = {
		soh.7017 # Handle the Tenno's diplomatic_immunity and possible imprisonment
	}
}

# FROM is attacker
# ROOT is defender
on_war_ended_invalid = {
	events = {
		soh.7017 # Handle the Tenno's diplomatic_immunity and possible imprisonment
	}
}

# FROM is attacker
# ROOT is defender
on_war_ended_whitepeace = {
	events = {
		soh.7017 # Handle the Tenno's diplomatic_immunity and possible imprisonment
	}
}

# ROOT is prisoner
# FROM is jailer
on_become_imprisoned_any_reason = {
	events = {
		soh.7021 # Handling of imprisoned Tennos
	}
}