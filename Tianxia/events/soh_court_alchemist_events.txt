# Court Alchemist events
# by Silverswee(e)per

namespace = soh

# 11501-11800 reserved



##### Court Alchemist events

# TIANXIATODO: Add potion brewing flags
# TIANXIATODO: Review pictures, borders
# TIANXIATODO: Ensure characters that have been approached about a potion cannot brew potions before turning down (or finishing) a request
# TIANXIATODO: Ensure characters that have been approached about a potion cannot be approached by someone else at the same time
# TIANXIATODO: Ensure characters getting a humiliating/harmful potion delivered to them cannot brew one at the same time
# TIANXIATODO: Flag cleanup for humiliating/harmful potions on both the alchemist and the requester
# TIANXIATODO: Inform liege of discovered attempts to give potions to their courtiers

# AI Court Alchemist assignment found elsewhere

# Pure flavour events found with general Alchemist flavour

### Requesting ingredients

# Event for courtiers
character_event = {
	id = soh.11501
	hide_window = yes
	
	is_triggered_only = yes # on_five_year_pulse
	
	has_dlc = "Mystics"
	is_in_society = yes
	prisoner = no
	min_age = 16
	
	trigger = {
		is_inaccessible_or_incapable_trigger = no
		society_member_of = the_alchemists
		has_minor_title = title_court_alchemist
		liege = {
			is_inaccessible_or_incapable_trigger = no
		}
		ai = yes
		is_landed = no
		NOR = {
			trait = treasure_fleet_preparation
			trait = in_mourning
			any_artifact = {
				count >= 10 # A higher bar than for the Hermetics; the Alchemists are all about ingredients!
				has_artifact_flag = ingredient
			}
			has_character_modifier = request_ingredients_decision_cooldown_timer
		}
		OR = {
			trait = greedy
			NOT = {
				any_artifact = {
					count >= 5
					has_artifact_flag = ingredient
				}
			}
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				mult_modifier = {
					factor = 2
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					has_character_modifier = brewing_immortality_potion
				}
				
				add_character_modifier = {
					name = request_ingredients_decision_cooldown_timer
					years = 5
					hidden = yes
				}
				
				liege = {
					character_event = { id = soh.11502 } # Liege gets request
				}
			}
			
			50 = {
				mult_modifier = {
					factor = 2
					trait = charitable
				}
				
				mult_modifier = {
					factor = 10
					trait = content
				}
				
				# Do nothing
			}
		}
	}
}

# Liege gets request
character_event = {
	id = soh.11502
	desc = EVTDESC_SOH_11502
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes # request_ingredients decision, as well as the event above
	
	immediate = {
		if = {
			limit = {
				any_artifact = {
					has_artifact_flag = ingredient
				}
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				set_artifact_flag = ingredient_to_transfer
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				random = {
					chance = 50
					set_artifact_flag = ingredient_to_transfer
				}
			}
		}
	}
	
	option = {
		trigger = {
			any_artifact = {
				has_artifact_flag = ingredient_to_transfer
			}
		}
		
		name = EVTOPTA_SOH_11502 # I will give FROM some of my ingredients...
		
		any_artifact = {
			limit = {
				has_artifact_flag = ingredient_to_transfer
			}
			
			clr_artifact_flag = ingredient_to_transfer
			
			transfer_artifact = {
				from = ROOT
				to = FROM
			}
		}
		
		FROM = {
			character_event = { id = soh.11503 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						society_member_of = the_alchemists
						NOR = {
							trait = kind
							is_friend = FROM
							is_lover = FROM
						}
					}
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = FROM
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = FROM
					value < -25
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11502 # I will pay for a few ingredients...
		
		wealth = -25
		
		custom_tooltip = {
			text = FROM_gets_two_random_ingredients
		}
		
		FROM = {
			character_event = { id = soh.11504 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				wealth >= 25
			}
			
			mult_modifier = {
				factor = 0.1
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = FROM
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = FROM
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 10
				persistent_event_target:giving_me_immortality_potion = {
					character = FROM
				}
			}
		}
	}
	
	option = {
		trigger = {
			wealth >= 100
		}
		
		name = EVTOPTC_SOH_11502 # Spare no expense!
		
		wealth = -100
		
		custom_tooltip = {
			text = FROM_gets_four_random_ingredients
		}
		
		FROM = {
			character_event = { id = soh.11505 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					trait = greedy
					is_rival = FROM
				}
				OR = {
					trait = charitable
					is_friend = FROM
					is_lover = FROM
					is_close_relative = FROM
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = FROM
					value < 25
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = FROM
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 10
				persistent_event_target:giving_me_immortality_potion = {
					character = FROM
				}
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11502 # You are responsible for acquiring them!
		
		FROM = {
			character_event = { id = soh.11506 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
				}
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = FROM
					value >= 50
				}
			}
		}
	}
	
	after = {
		any_artifact = {
			limit = {
				has_artifact_flag = ingredient_to_transfer
			}
			
			clr_artifact_flag = ingredient_to_transfer
		}
	}
}

# Inform Court Alchemist - got some of liege's ingredients
character_event = {
	id = soh.11503
	desc = EVTDESC_SOH_11503
	picture = GFX_evt_china_diplomatic_success
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11503 # This will help!
		
		opinion = {
			who = FROM
			modifier = opinion_got_ingredients
		}
	}
}

# Inform Court Alchemist - liege paid for a few ingredients
character_event = {
	id = soh.11504
	desc = EVTDESC_SOH_11504
	picture = GFX_evt_china_diplomatic_success
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11504 # This will help!
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		opinion = {
			who = FROM
			modifier = opinion_got_ingredients
		}
	}
}

# Inform Court Alchemist - liege paid for many ingredients
character_event = {
	id = soh.11505
	desc = EVTDESC_SOH_11505
	picture = GFX_evt_china_diplomatic_success
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11505 # This will help!
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		opinion = {
			who = FROM
			modifier = opinion_got_plentiful_ingredients
		}
	}
}

# Inform Court Alchemist - liege refused to help
character_event = {
	id = soh.11506
	desc = EVTDESC_SOH_11506
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11506 # How can I work under these conditions?
		
		opinion = {
			who = FROM
			modifier = opinion_did_not_get_ingredients
		}
	}
}



### Prisoner experiment

# Event for the AI
character_event = {
	id = soh.11507
	hide_window = yes
	
	is_triggered_only = yes # on_five_year_pulse
	
	has_dlc = "Mystics"
	is_in_society = yes
	prisoner = no
	min_age = 16
	
	trigger = {
		is_inaccessible_or_incapable_trigger = no
		society_member_of = the_alchemists
		society_rank >= 2
		has_minor_title = title_court_alchemist
		ai = yes
		liege = {
			is_inaccessible_or_incapable_trigger = no
			has_regent = no
			NOT = {
				reverse_has_opinion_modifier = {
					who = ROOT
					modifier = opinion_requested_prisoner_experiment
				}
			}
			any_courtier = {
				prisoner = yes
				is_adult = yes
				is_actually_incapable_trigger = no
				OR = {
					is_rival = ROOT
					AND = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_close_relative = ROOT
						}
						ROOT = {
							trait = cruel
						}
					}
					ROOT = {
						trait = lunatic
					}
				}
				NOR = {
					reverse_has_opinion_modifier = {
						who = ROOT
						modifier = opinion_refused_experimentation
					}
					
					has_character_modifier = prisoner_took_potion
				}
			}
		}
		has_society_currency_major_trigger = yes
		NOR = {
			trait = treasure_fleet_preparation
			trait = in_mourning
			has_character_modifier = recent_prisoner_experiment
			trait = kind
			trait = just
			trait = honest
			trait = content
		}
		any_artifact = {
			count >= 2
			has_artifact_flag = ingredient
		}
	}
	
	immediate = {
		liege = {
			random_courtier = {
				limit = {
					prisoner = yes
					is_adult = yes
					is_actually_incapable_trigger = no
					OR = {
						is_rival = ROOT
						AND = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							ROOT = {
								trait = cruel
							}
						}
						ROOT = {
							trait = lunatic
						}
					}
					
					NOR = {
						reverse_has_opinion_modifier = {
							who = ROOT
							modifier = opinion_refused_experimentation
						}
						
						has_character_modifier = prisoner_took_potion
					}
				}
				
				preferred_limit = {
					NOR = {
						is_friend = PREV
						is_lover = PREV
						is_close_relative = PREV
						is_friend = ROOT
						is_lover = ROOT
						is_close_relative = ROOT
					}
				}
				
				preferred_limit = {
					NOR = {
						is_friend = ROOT
						is_lover = ROOT
						is_close_relative = ROOT
					}
				}
				
				save_event_target_as = prisoner_experimented_upon
			}
		}
		
		random_list = {
			50 = {
				mult_modifier = {
					factor = 5
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					is_rival = event_target:prisoner_experimented_upon
				}
				
				mult_modifier = {
					factor = 2
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = arbitrary
				}
				
				mult_modifier = {
					factor = 5
					trait = lunatic
				}
				
				detract_society_currency_medium_effect = yes
				
				save_event_target_as = experimenting_alchemist
				
				add_character_modifier = {
					name = recent_prisoner_experiment
					years = 2
					hidden = yes
				}
				
				reverse_opinion = {
					who = liege
					modifier = opinion_requested_prisoner_experiment
				}
				
				liege = {
					character_event = { id = soh.11508 } # Liege gets request
				}
			}
			
			50 = {
				# Do nothing
			}
		}
	}
}

# Liege approached
character_event = {
	id = soh.11508
	desc = EVTDESC_SOH_11508
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # request_prisoner_testing targeted_decision, as well as the event above
	
	immediate = {
		save_event_target_as = prisoner_liege
	}
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11508 # Well, it is for science...
		
		FROM = {
			character_event = { id = soh.11509 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:prisoner_experimented_upon
					is_lover = event_target:prisoner_experimented_upon
					AND = {
						is_close_relative = event_target:prisoner_experimented_upon
						NOT = {
							is_rival = event_target:prisoner_experimented_upon
						}
					}
					is_rival = FROM
					AND = {
						any_demesne_title = {
							OR = {
								higher_tier_than = duke
								controls_religion = yes
							}
							claimed_by = event_target:prisoner_experimented_upon
						}
						NOT = {
							trait = trusting
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 2
				is_lover = FROM
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = FROM
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = cruel
			}
			
			mult_modifier = {
				factor = 2
				trait = lunatic
			}
			
			mult_modifier = {
				factor = 2
				trait = charitable
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11508 # I suppose I can agree to that...
		
		FROM = {
			character_event = { id = soh.11510 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:prisoner_experimented_upon
					is_lover = event_target:prisoner_experimented_upon
					AND = {
						is_close_relative = event_target:prisoner_experimented_upon
						NOT = {
							is_rival = event_target:prisoner_experimented_upon
						}
					}
					is_rival = FROM
					AND = {
						any_demesne_title = {
							OR = {
								higher_tier_than = duke
								controls_religion = yes
							}
							claimed_by = event_target:prisoner_experimented_upon
						}
						NOT = {
							trait = trusting
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 2
				is_lover = FROM
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = FROM
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = cruel
			}
			
			mult_modifier = {
				factor = 2
				trait = lunatic
			}
			
			mult_modifier = {
				factor = 2
				trait = charitable
			}
		}
	}
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTC_SOH_11508 # Get your own test subjects!
		
		FROM = {
			character_event = { id = soh.11511 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 10
				trait = envious
			}
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = FROM
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:prisoner_experimented_upon
					value > 0
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:prisoner_experimented_upon
					value > 25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:prisoner_experimented_upon
					value > 50
				}
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTD_SOH_11508 # Absolutely not!
		
		FROM = {
			character_event = { id = soh.11512 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = FROM
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:prisoner_experimented_upon
					value > 0
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:prisoner_experimented_upon
					value > 25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:prisoner_experimented_upon
					value > 50
				}
			}
		}
	}
}

# Liege accepted - fellow alchemist
character_event = {
	id = soh.11509
	desc = EVTDESC_SOH_11509
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11509 # For science!
		
		event_target:prisoner_experimented_upon = {
			character_event = { id = soh.11268 } # Prisoner approached
		}
	}
}

# Liege accepted - normal
character_event = {
	id = soh.11510
	desc = EVTDESC_SOH_11510
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11510 # Good!
		
		event_target:prisoner_experimented_upon = {
			character_event = { id = soh.11268 } # Prisoner approached
		}
	}
}

# Liege refused - fellow alchemist
character_event = {
	id = soh.11511
	desc = EVTDESC_SOH_11511
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11511 # I see...
		
		remove_character_modifier = recent_prisoner_experiment
		
		add_society_currency_minor_effect = yes # Partial refund
			
		opinion = {
			who = FROM
			modifier = opinion_refused_experimentation
			months = 12
		}
	}
}

# Liege refused - normal
character_event = {
	id = soh.11512
	desc = EVTDESC_SOH_11512
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11512 # But it's for science!
		
		remove_character_modifier = recent_prisoner_experiment
		
		add_society_currency_minor_effect = yes # Partial refund
			
		opinion = {
			who = FROM
			modifier = opinion_refused_experimentation
			months = 12
		}
	}
}

# Prisoner accepted - liege
character_event = {
	id = soh.11513
	desc = EVTDESC_SOH_11513
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11513 # For science!
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11513 # I see...
	}
}

# Prisoner refused - liege
character_event = {
	id = soh.11514
	desc = EVTDESC_SOH_11514
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11514 # But it's for science!
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11514 # I see...
	}
}

# Inform liege - prisoner is doing a lot better
character_event = {
	id = soh.11515
	desc = EVTDESC_SOH_11515
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11515 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11515 # I see...
	}
}

# Inform liege - prisoner is doing a lot better, not released
character_event = {
	id = soh.11516
	desc = EVTDESC_SOH_11516
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11516 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11516 # I see...
	}
}

# Inform liege - prisoner is doing a bit better
character_event = {
	id = soh.11517
	desc = EVTDESC_SOH_11517
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11517 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11517 # I see...
	}
}

# Inform liege - prisoner is doing a bit better, not released
character_event = {
	id = soh.11518
	desc = EVTDESC_SOH_11518
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11518 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11518 # I see...
	}
}

# Inform liege - prisoner is a bit queasy
character_event = {
	id = soh.11519
	desc = EVTDESC_SOH_11519
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11519 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11519 # I see...
	}
}

# Inform liege - prisoner is a bit queasy, not released
character_event = {
	id = soh.11520
	desc = EVTDESC_SOH_11520
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11520 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11520 # I see...
	}
}

# Inform liege - prisoner is vomiting
character_event = {
	id = soh.11521
	desc = EVTDESC_SOH_11521
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11521 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11521 # I see...
	}
}

# Inform liege - prisoner is vomiting, not released
character_event = {
	id = soh.11522
	desc = EVTDESC_SOH_11522
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11522 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11522 # I see...
	}
}

# Inform liege - prisoner has diarrhea
character_event = {
	id = soh.11523
	desc = EVTDESC_SOH_11523
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11523 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11523 # I see...
	}
}

# Inform liege - prisoner has diarrhea, not released
character_event = {
	id = soh.11524
	desc = EVTDESC_SOH_11524
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11524 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11524 # I see...
	}
}

# Inform liege - prisoner has abdominal pain
character_event = {
	id = soh.11525
	desc = EVTDESC_SOH_11525
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11525 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11525 # I see...
	}
}

# Inform liege - prisoner has abdominal pain, not released
character_event = {
	id = soh.11526
	desc = EVTDESC_SOH_11526
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11526 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11526 # I see...
	}
}

# Inform liege - prisoner has cramps
character_event = {
	id = soh.11527
	desc = EVTDESC_SOH_11527
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11527 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11527 # I see...
	}
}

# Inform liege - prisoner has cramps, not released
character_event = {
	id = soh.11528
	desc = EVTDESC_SOH_11528
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11528 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11528 # I see...
	}
}

# Inform liege - prisoner has a headache
character_event = {
	id = soh.11529
	desc = EVTDESC_SOH_11529
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11529 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11529 # I see...
	}
}

# Inform liege - prisoner has a headache, not released
character_event = {
	id = soh.11530
	desc = EVTDESC_SOH_11530
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11530 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11530 # I see...
	}
}

# Inform liege - prisoner is smelling weirdly
character_event = {
	id = soh.11531
	desc = EVTDESC_SOH_11531
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11531 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11531 # I see...
	}
}

# Inform liege - prisoner is smelling weirdly, not released
character_event = {
	id = soh.11532
	desc = EVTDESC_SOH_11532
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11532 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11532 # I see...
	}
}

# Inform liege - prisoner is feeling a bit poorly
character_event = {
	id = soh.11533
	desc = EVTDESC_SOH_11533
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11533 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11533 # I see...
	}
}

# Inform liege - prisoner is feeling a bit poorly, not released
character_event = {
	id = soh.11534
	desc = EVTDESC_SOH_11534
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11534 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11534 # I see...
	}
}

# Inform liege - prisoner is feeling very poorly
character_event = {
	id = soh.11535
	desc = EVTDESC_SOH_11535
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11535 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11535 # I see...
	}
}

# Inform liege - prisoner is feeling very poorly, not released
character_event = {
	id = soh.11536
	desc = EVTDESC_SOH_11536
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11536 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11536 # I see...
	}
}

# Inform liege - prisoner died
character_event = {
	id = soh.11537
	desc = EVTDESC_SOH_11537
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			society_member_of = the_alchemists
		}
		
		name = EVTOPTA_SOH_11537 # Interesting...
	}
	
	option = {
		trigger = {
			NOT = {
				society_member_of = the_alchemists
			}
		}
		
		name = EVTOPTB_SOH_11537 # I see...
	}
}



### Request Healing Potion

# AI ruler might ask
character_event = {
	id = soh.11538
	hide_window = yes
	
	is_triggered_only = yes # on_bi_yearly_pulse -> random_events -> court_alchemist_healing_potion
	
	has_dlc = "Mystics"
	only_rulers = yes
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		OR = {
			character_disease_trigger = yes
			has_symptom_trigger = yes
			has_minor_disease_trigger = yes
		}
		
		OR = {
			any_courtier_or_vassal = {
				has_minor_title = title_court_alchemist
				society_member_of = the_alchemists
				society_rank >= 2
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					NOT = {
						is_rival = ROOT
					}
					ROOT = {
						trait = trusting
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank >= 2
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank >= 2
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_healing_potion
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
				
				mult_modifier = {
					factor = 2
					character_disease_trigger = yes
				}
				
				character_event = { id = soh.11540 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Courtier might ask
character_event = {
	id = soh.11539
	hide_window = yes
	
	is_triggered_only = yes # on_five_year_pulse -> random_events
	
	has_dlc = "Mystics"
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		is_playable = no
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		OR = {
			character_disease_trigger = yes
			has_symptom_trigger = yes
			has_minor_disease_trigger = yes
		}
		
		OR = {
			employer = {
				any_courtier_or_vassal = {
					has_minor_title = title_court_alchemist
					society_member_of = the_alchemists
					society_rank >= 2
					is_inaccessible_or_incapable_trigger = no
					NOR = {
						has_character_flag = preparing_potion
						has_opinion_modifier = {
							who = ROOT
							modifier = opinion_requested_potion
						}
					}
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
					OR = {
						NOT = {
							is_rival = ROOT
						}
						ROOT = {
							trait = trusting
						}
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank >= 2
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank >= 2
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_healing_potion
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
				
				mult_modifier = {
					factor = 2
					character_disease_trigger = yes
				}
				
				character_event = { id = soh.11540 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Who do you want to ask?
character_event = {
	id = soh.11540
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			100 = {
				trigger = {
					employer = {
						any_courtier_or_vassal = {
							has_minor_title = title_court_alchemist
							OR = {
								NOT = {
									is_rival = ROOT
								}
								ROOT = {
									trait = trusting
								}
							}
						}
					}
				}
				
				employer = {
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_court_alchemist
						}
						
						save_event_target_as = brewing_potion
					}
				}
			}
			
			100 = {
				trigger = {
					any_friend = {
						society_member_of = the_alchemists
						society_rank >= 2
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
					
				random_friend = {
					limit = {
						society_member_of = the_alchemists
						society_rank >= 2
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
			
			100 = {
				trigger = {
					any_lover = {
						society_member_of = the_alchemists
						society_rank >= 2
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
				
				random_lover = {
					limit = {
						society_member_of = the_alchemists
						society_rank >= 2
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
		}
		
		character_event = { id = soh.11541 } # Decide on how to phrase the request
	}
}

# Are you offering specific ingredients, offering to pay, or just asking?
character_event = {
	id = soh.11541
	desc = EVTDESC_SOH_11541
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				set_artifact_flag = ingredient_for_potion_1
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
					NOT = {
						has_artifact_flag = ingredient_for_potion_1
					}
				}
				
				set_artifact_flag = ingredient_for_potion_2
			}
		}
		
		save_event_target_as = potion_target
	}
	
	option = {
		trigger = {
			any_artifact = {
				has_artifact_flag = ingredient_for_potion
			}
		}
		
		name = EVTOPTA_SOH_11541 # I will provide the ingredients!
		
		custom_tooltip = {
			text = will_transfer_selected_artifact_1
		}
		custom_tooltip = {
			text = will_transfer_selected_artifact_2
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11542 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						OR = {
							society_member_of = the_alchemists
							society_member_of = hermetics
						}
						NOR = {
							is_friend = event_target:brewing_potion
							is_lover = event_target:brewing_potion
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				AND = {
					ai = yes
					wealth >= 0
				}
				wealth >= 25
			}
		}
		
		name = EVTOPTB_SOH_11541 # I will pay for the ingredients!
		
		custom_tooltip = {
			text = will_pay_25_gold_if_accepted
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11545 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:brewing_potion = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
		}
		
		name = EVTOPTC_SOH_11541 # Surely I don't have to provide anything!
		
		event_target:brewing_potion = {
			character_event = { id = soh.11548 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = event_target:brewing_potion
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = event_target:brewing_potion
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11541 # Actually, let's not...
		
		hidden_tooltip = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				clr_artifact_flag = ingredient_for_potion_1
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				clr_artifact_flag = ingredient_for_potion_2
			}
			
			event_target:brewing_potion = {
				remove_opinion = {
					who = ROOT
					modifier = opinion_requested_potion
				}
			}
		}
		
		ai_chance = { factor = 0 }
	}
}

# Got request - getting specific ingredients
character_event = {
	id = soh.11542
	desc = EVTDESC_SOH_11542
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11542 # Very well...
		
		FROM = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				
				clr_artifact_flag = ingredient_for_potion_1
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				
				clr_artifact_flag = ingredient_for_potion_2
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			character_event = { id = soh.11543 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11563 days = 1 }
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11542 # Not interested!
		
		FROM = {
			character_event = { id = soh.11544 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11543
	desc = EVTDESC_SOH_11543
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11543 # Great!
	}
}

# Request refused
character_event = {
	id = soh.11544
	desc = EVTDESC_SOH_11544
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11544 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - paying for random ingredients
character_event = {
	id = soh.11545
	desc = EVTDESC_SOH_11545
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11545 # Very well...
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		FROM = {
			character_event = { id = soh.11546 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11563 days = 1 }
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11545 # Not interested!
		
		FROM = {
			character_event = { id = soh.11547 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11546
	desc = EVTDESC_SOH_11546
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11546 # Great!
		
		wealth = -25
	}
}

# Request refused
character_event = {
	id = soh.11547
	desc = EVTDESC_SOH_11547
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11547 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - expected to provide the ingredients
character_event = {
	id = soh.11548
	desc = EVTDESC_SOH_11548
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = request_potion_option_
		
		# Determine up to two options
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
		}
		
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
					NOT = {
						has_character_flag = request_potion_option_repay_favor
					}
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
					NOT = {
						has_character_flag = request_potion_option_favor
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				trigger = {
					NOT = {
						has_character_flag = request_potion_option_money
					}
				}
				
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
					NOT = {
						has_character_flag = request_potion_option_grace
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
			
			1 = {
				# Nothing
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11548 # Very well...
		
		FROM = {
			character_event = { id = soh.11550 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11563 days = 1 }
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = ambitious
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_favor
		}
		
		name = EVTOPTB_SOH_11548 # If we consider it a Favor...
		
		FROM = {
			character_event = { id = soh.11551 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_repay_favor
		}
		
		name = EVTOPTC_SOH_11548 # If we consider it a Favor repaid...
		
		FROM = {
			character_event = { id = soh.11554 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_money
		}
		
		name = EVTOPTD_SOH_11548 # If you pay me...
		
		FROM = {
			character_event = { id = soh.11557 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_grace
		}
		
		name = EVTOPTE_SOH_11548 # For some Grace...
		
		FROM = {
			character_event = { id = soh.11560 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTF_SOH_11548 # Not interested!
		
		FROM = {
			character_event = { id = soh.11549 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request refused - general
character_event = {
	id = soh.11549
	desc = EVTDESC_SOH_11549
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11549 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Request accepted - asking for nothing
character_event = {
	id = soh.11550
	desc = EVTDESC_SOH_11550
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11550 # Great!
	}
}

# Alchemist asks for Favor
character_event = {
	id = soh.11551
	desc = EVTDESC_SOH_11551
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11551 # Very well...
		
		FROM = {
			add_favor = ROOT
			
			character_event = { id = soh.11552 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11551 # I think not!
		
		FROM = {
			character_event = { id = soh.11553 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Favor
character_event = {
	id = soh.11552
	desc = EVTDESC_SOH_11552
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11552 # Excellent!
		
		character_event = { id = soh.11563 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11553
	desc = EVTDESC_SOH_11553
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11553 # I see...
	}
}

# Alchemist asks for it to count as a Favor repaid
character_event = {
	id = soh.11554
	desc = EVTDESC_SOH_11554
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11554 # Very well...
		
		remove_favor = FROM
		
		FROM = {
			character_event = { id = soh.11555 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = ambitious
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = content
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11554 # I think not!
		
		FROM = {
			character_event = { id = soh.11556 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Favor considered repaid
character_event = {
	id = soh.11555
	desc = EVTDESC_SOH_11555
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11555 # Excellent!
		
		character_event = { id = soh.11563 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11556
	desc = EVTDESC_SOH_11556
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11556 # I see...
	}
}

# Alchemist asks for money
character_event = {
	id = soh.11557
	desc = EVTDESC_SOH_11557
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11557 # Very well...
		
		if = {
			limit = {
				real_tier = emperor
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.2
				min = 20
				max = 100
			}
		}
		
		else_if = {
			limit = {
				real_tier = king
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.15
				min = 15
				max = 75
			}
		}
		
		else_if = {
			limit = {
				real_tier = duke
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.1
				min = 10
				max = 50
			}
		}
		
		else = {
			transfer_scaled_wealth = {
				to = FROM
				value = 0.05
				min = 5
				max = 25
			}
		}
		
		FROM = {
			character_event = { id = soh.11558 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = charitable
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11557 # I think not!
		
		FROM = {
			character_event = { id = soh.11559 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got money
character_event = {
	id = soh.11558
	desc = EVTDESC_SOH_11558
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11558 # Excellent!
		
		character_event = { id = soh.11563 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11559
	desc = EVTDESC_SOH_11559
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11559 # I see...
	}
}

# Alchemist asks for Grace
character_event = {
	id = soh.11560
	desc = EVTDESC_SOH_11560
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11560 # Very well...
		
		FROM = {
			add_grace_medium_effect = yes
			
			character_event = { id = soh.11561 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11560 # I think not!
		
		FROM = {
			character_event = { id = soh.11562 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Grace
character_event = {
	id = soh.11561
	desc = EVTDESC_SOH_11561
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11561 # Excellent!
		
		character_event = { id = soh.11563 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11562
	desc = EVTDESC_SOH_11562
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11562 # I see...
	}
}

# Agreement reached - what will you actually brew?
character_event = {
	id = soh.11563
	desc = EVTDESC_SOH_11563
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11563 # I will brew what was requested!
		
		set_character_flag = potion_is_helpful
		
		character_event = { id = soh.11564 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						NOR = {
							trait = kind
							trait = honest
							trait = just
						}
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
				opinion = {
					who = event_target:potion_target
					value >= 0
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = kind
			}
			
			mult_modifier = {
				factor = 2
				trait = honest
			}
			
			mult_modifier = {
				factor = 2
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				is_friend = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 10
				is_lover = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value >= 25
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11563 # I will brew a placebo!
		
		set_character_flag = potion_is_placebo
		
		character_event = { id = soh.11565 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				check_variable = {
					which = alchemist_healing_knowledge
					value < 25
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				check_variable = {
					which = alchemist_healing_knowledge
					value >= 25
				}
				check_variable = {
					which = alchemist_poison_knowledge
					value >= 50
				}
			}
		}
		
		name = EVTOPTC_SOH_11563 # I will brew something harmful!
		
		set_character_flag = potion_is_harmful
		
		character_event = { id = soh.11566 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			check_variable = {
				which = alchemist_healing_knowledge
				value >= 25
			}
			check_variable = {
				which = alchemist_poison_knowledge
				value >= 50
			}
		}
		
		name = EVTOPTD_SOH_11563 # I will brew something sneaky!
		
		set_character_flag = potion_is_sneaky_harmful
		
		character_event = { id = soh.11567 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
}

# Brewing actual healing potion - which ingredient(s) to use?
character_event = {
	id = soh.11564
	desc = EVTDESC_SOH_11564
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_healing_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11564
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11564
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11564
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_healing_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11568 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing placebo - which ingredient(s) to use?
character_event = {
	id = soh.11565
	desc = EVTDESC_SOH_11565
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_effect = yes
		select_random_hermetic_ingredient_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11565
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11565
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11565
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_healing_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11568 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing harmful potion - which ingredients to use?
character_event = {
	id = soh.11566
	desc = EVTDESC_SOH_11566
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11566
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11566
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11566
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_healing_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11568 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing sneaky harmful potion - which ingredients to use?
character_event = {
	id = soh.11567
	desc = EVTDESC_SOH_11567
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11567
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11567
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11567
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_healing_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_healing_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = -1
				}
			}
			
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11568 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Potion delivered
character_event = {
	id = soh.11568
	desc = EVTDESC_SOH_11568
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = healing_potion_is_
		FROM = {
			trigger_switch = {
				on_trigger = has_character_flag
				
				potion_is_helpful = { ROOT = { set_character_flag = healing_potion_is_helpful } }
				potion_is_placebo = { ROOT = { set_character_flag = healing_potion_is_placebo } }
				potion_is_harmful = { ROOT = { set_character_flag = healing_potion_is_harmful } }
				potion_is_sneaky_harmful = { ROOT = { set_character_flag = healing_potion_is_sneaky_harmful } }
			}
			save_event_target_as = target_alchemist
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11568 # Thank you!
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_healing_potion_quality
				value = 0
			}
			
			while = {
				limit = {
					FROM = {
						NOT = {
							is_variable_equal = {
								which = alchemist_healing_potion_quality
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						FROM = {
							check_variable = {
								which = alchemist_healing_potion_quality
								value > 0
							}
						}
					}
					
					FROM = {
						change_variable = {
							which = alchemist_healing_potion_quality
							value = -0.05
						}
					}
					
					change_variable = {
						which = consumed_healing_potion_quality
						value = 0.05
					}
				}
				
				else = {
					FROM = {
						change_variable = {
							which = alchemist_healing_potion_quality
							value = 0.05
						}
					}
					
					change_variable = {
						which = consumed_healing_potion_quality
						value = -0.05
					}
				}
			}
			
			copy_healing_potion_flags_effect = yes
		}
		
		character_event = { id = soh.11305 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.5
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.5
				trait = craven
			}
			
			mult_modifier = {
				factor = 10
				FROM = {
					trait = physician
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11568 # I don't trust that...
		
		FROM = {
			character_event = { id = soh.11569 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					trait = trusting
					AND = {
						trait = brave
						NOT = {
							trait = paranoid
						}
					}
				}
			}
		}
	}
}

# Target refused to drink potion
character_event = {
	id = soh.11569
	desc = EVTDESC_SOH_11569
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			OR = {
				character_disease_trigger = yes
				has_symptom_trigger = yes
				has_minor_disease_trigger = yes
			}
			has_character_flag = potion_is_helpful
		}
		
		name = EVTOPTA_SOH_11569 # I guess *I* will take it, then...
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_healing_potion_quality
				which = alchemist_healing_potion_quality
			}
		}
		
		character_event = { id = soh.11305 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				NOR = {
					character_disease_trigger = yes
					has_minor_disease_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11569 # Oh, well...
	}
}



### Request Clarity Potion

# AI ruler might ask
character_event = {
	id = soh.11570
	hide_window = yes
	
	is_triggered_only = yes # on_bi_yearly_pulse -> random_events -> court_alchemist_clarity_potion
	
	has_dlc = "Mystics"
	only_rulers = yes
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		OR = {
			trait = stressed
			trait = depressed
			trait = headache
			trait = malaise
			trait = fatigue
			has_character_modifier = drowsy_alchemist
			has_character_modifier = alchemist_hallucinations
			has_character_modifier = alchemist_blurred_vision
			has_character_modifier = alchemist_dizzy
			has_character_modifier = clouded_mind
			has_character_modifier = apathetic
			has_character_modifier = potion_crash
		}
		
		OR = {
			any_courtier_or_vassal = {
				has_minor_title = title_court_alchemist
				society_member_of = the_alchemists
				society_rank >= 3
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					NOT = {
						is_rival = ROOT
					}
					ROOT = {
						trait = trusting
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_clarity_potion
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
				
				mult_modifier = {
					factor = 10
					trait = depressed
				}
				
				mult_modifier = {
					factor = 5
					trait = stressed
				}
				
				mult_modifier = {
					factor = 2
					trait = ambitious
				}
				
				character_event = { id = soh.11572 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Courtier might ask
character_event = {
	id = soh.11571
	hide_window = yes
	
	is_triggered_only = yes # on_five_year_pulse -> random_events
	
	has_dlc = "Mystics"
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		is_playable = no
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		OR = {
			trait = stressed
			trait = depressed
			trait = headache
			trait = malaise
			trait = fatigue
			has_character_modifier = drowsy_alchemist
			has_character_modifier = alchemist_hallucinations
			has_character_modifier = alchemist_blurred_vision
			has_character_modifier = alchemist_dizzy
			has_character_modifier = clouded_mind
			has_character_modifier = apathetic
			has_character_modifier = potion_crash
		}
		
		OR = {
			employer = {
				any_courtier_or_vassal = {
					has_minor_title = title_court_alchemist
					society_member_of = the_alchemists
					society_rank >= 3
					is_inaccessible_or_incapable_trigger = no
					NOR = {
						has_character_flag = preparing_potion
						has_opinion_modifier = {
							who = ROOT
							modifier = opinion_requested_potion
						}
					}
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
					OR = {
						NOT = {
							is_rival = ROOT
						}
						ROOT = {
							trait = trusting
						}
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_clarity_potion
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
				
				mult_modifier = {
					factor = 10
					trait = depressed
				}
				
				mult_modifier = {
					factor = 5
					trait = stressed
				}
				
				mult_modifier = {
					factor = 2
					trait = ambitious
				}
				
				character_event = { id = soh.11572 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Who do you want to ask?
character_event = {
	id = soh.11572
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			100 = {
				trigger = {
					employer = {
						any_courtier_or_vassal = {
							has_minor_title = title_court_alchemist
							OR = {
								NOT = {
									is_rival = ROOT
								}
								ROOT = {
									trait = trusting
								}
							}
						}
					}
				}
				
				employer = {
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_court_alchemist
						}
						
						save_event_target_as = brewing_potion
					}
				}
			}
			
			100 = {
				trigger = {
					any_friend = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
				
				random_friend = {
					limit = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
			
			100 = {
				trigger = {
					any_lover = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
				
				random_lover = {
					limit = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
		}
		
		character_event = { id = soh.11573 } # Decide on how to phrase the request
	}
}

# Are you offering specific ingredients, offering to pay, or just asking?
character_event = {
	id = soh.11573
	desc = EVTDESC_SOH_11573
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				set_artifact_flag = ingredient_for_potion_1
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
					NOT = {
						has_artifact_flag = ingredient_for_potion_1
					}
				}
				
				set_artifact_flag = ingredient_for_potion_2
			}
		}
		
		save_event_target_as = potion_target
	}
	
	option = {
		trigger = {
			any_artifact = {
				has_artifact_flag = ingredient_for_potion
			}
		}
		
		name = EVTOPTA_SOH_11573 # I will provide the ingredients!
		
		custom_tooltip = {
			text = will_transfer_selected_artifact_1
		}
		custom_tooltip = {
			text = will_transfer_selected_artifact_2
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11574 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						OR = {
							society_member_of = the_alchemists
							society_member_of = hermetics
						}
						NOR = {
							is_friend = event_target:brewing_potion
							is_lover = event_target:brewing_potion
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				AND = {
					ai = yes
					wealth >= 0
				}
				wealth >= 25
			}
		}
		
		name = EVTOPTB_SOH_11573 # I will pay for the ingredients!
		
		custom_tooltip = {
			text = will_pay_25_gold_if_accepted
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11577 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:brewing_potion = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
		}
		
		name = EVTOPTC_SOH_11573 # Surely I don't have to provide anything!
		
		event_target:brewing_potion = {
			character_event = { id = soh.11580 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = event_target:brewing_potion
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = event_target:brewing_potion
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11573 # Actually, let's not...
		
		hidden_tooltip = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				clr_artifact_flag = ingredient_for_potion_1
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				clr_artifact_flag = ingredient_for_potion_2
			}
			
			event_target:brewing_potion = {
				remove_opinion = {
					who = ROOT
					modifier = opinion_requested_potion
				}
			}
		}
		
		ai_chance = { factor = 0 }
	}
}

# Got request - getting specific ingredients
character_event = {
	id = soh.11574
	desc = EVTDESC_SOH_11574
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11574 # Very well...
		
		FROM = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				
				clr_artifact_flag = ingredient_for_potion_1
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				
				clr_artifact_flag = ingredient_for_potion_2
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			character_event = { id = soh.11575 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11595 days = 1 }
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11574 # Not interested!
		
		FROM = {
			character_event = { id = soh.11576 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11575
	desc = EVTDESC_SOH_11575
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11575 # Great!
	}
}

# Request refused
character_event = {
	id = soh.11576
	desc = EVTDESC_SOH_11576
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11576 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - paying for random ingredients
character_event = {
	id = soh.11577
	desc = EVTDESC_SOH_11577
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11577 # Very well...
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		FROM = {
			character_event = { id = soh.11578 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11595 days = 1 }
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11577 # Not interested!
		
		FROM = {
			character_event = { id = soh.11579 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11578
	desc = EVTDESC_SOH_11578
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11578 # Great!
		
		wealth = -25
	}
}

# Request refused
character_event = {
	id = soh.11579
	desc = EVTDESC_SOH_11579
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11579 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - expected to provide the ingredients
character_event = {
	id = soh.11580
	desc = EVTDESC_SOH_11580
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = request_potion_option_
		
		# Determine up to two options
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
		}
		
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
					NOT = {
						has_character_flag = request_potion_option_repay_favor
					}
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
					NOT = {
						has_character_flag = request_potion_option_favor
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				trigger = {
					NOT = {
						has_character_flag = request_potion_option_money
					}
				}
				
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
					NOT = {
						has_character_flag = request_potion_option_grace
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
			
			1 = {
				# Nothing
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11580 # Very well...
		
		FROM = {
			character_event = { id = soh.11582 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11595 days = 1 }
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = ambitious
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_favor
		}
		
		name = EVTOPTB_SOH_11580 # If we consider it a Favor...
		
		FROM = {
			character_event = { id = soh.11583 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_repay_favor
		}
		
		name = EVTOPTC_SOH_11580 # If we consider it a Favor repaid...
		
		FROM = {
			character_event = { id = soh.11586 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_money
		}
		
		name = EVTOPTD_SOH_11580 # If you pay me...
		
		FROM = {
			character_event = { id = soh.11589 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_grace
		}
		
		name = EVTOPTE_SOH_11580 # For some Grace...
		
		FROM = {
			character_event = { id = soh.11592 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTF_SOH_11580 # Not interested!
		
		FROM = {
			character_event = { id = soh.11581 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					is_lover = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request refused - general
character_event = {
	id = soh.11581
	desc = EVTDESC_SOH_11581
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11581 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Request accepted - asking for nothing
character_event = {
	id = soh.11582
	desc = EVTDESC_SOH_11582
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11582 # Great!
	}
}

# Alchemist asks for Favor
character_event = {
	id = soh.11583
	desc = EVTDESC_SOH_11583
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11583 # Very well...
		
		FROM = {
			add_favor = ROOT
			
			character_event = { id = soh.11584 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11583 # I think not!
		
		FROM = {
			character_event = { id = soh.11585 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Favor
character_event = {
	id = soh.11584
	desc = EVTDESC_SOH_11584
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11584 # Excellent!
		
		character_event = { id = soh.11595 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11585
	desc = EVTDESC_SOH_11585
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11585 # I see...
	}
}

# Alchemist asks for it to count as a Favor repaid
character_event = {
	id = soh.11586
	desc = EVTDESC_SOH_11586
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11586 # Very well...
		
		remove_favor = FROM
		
		FROM = {
			character_event = { id = soh.11587 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = ambitious
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = content
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11586 # I think not!
		
		FROM = {
			character_event = { id = soh.11588 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Favor considered repaid
character_event = {
	id = soh.11587
	desc = EVTDESC_SOH_11587
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11587 # Excellent!
		
		character_event = { id = soh.11595 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11588
	desc = EVTDESC_SOH_11588
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11588 # I see...
	}
}

# Alchemist asks for money
character_event = {
	id = soh.11589
	desc = EVTDESC_SOH_11589
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11589 # Very well...
		
		if = {
			limit = {
				real_tier = emperor
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.2
				min = 20
				max = 100
			}
		}
		
		else_if = {
			limit = {
				real_tier = king
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.15
				min = 15
				max = 75
			}
		}
		
		else_if = {
			limit = {
				real_tier = duke
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.1
				min = 10
				max = 50
			}
		}
		
		else = {
			transfer_scaled_wealth = {
				to = FROM
				value = 0.05
				min = 5
				max = 25
			}
		}
		
		FROM = {
			character_event = { id = soh.11590 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = charitable
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11589 # I think not!
		
		FROM = {
			character_event = { id = soh.11591 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got money
character_event = {
	id = soh.11590
	desc = EVTDESC_SOH_11590
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11590 # Excellent!
		
		character_event = { id = soh.11595 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11591
	desc = EVTDESC_SOH_11591
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11591 # I see...
	}
}

# Alchemist asks for Grace
character_event = {
	id = soh.11592
	desc = EVTDESC_SOH_11592
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11592 # Very well...
		
		FROM = {
			add_grace_medium_effect = yes
			
			character_event = { id = soh.11593 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11592 # I think not!
		
		FROM = {
			character_event = { id = soh.11594 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Grace
character_event = {
	id = soh.11593
	desc = EVTDESC_SOH_11593
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11593 # Excellent!
		
		character_event = { id = soh.11595 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11594
	desc = EVTDESC_SOH_11594
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11594 # I see...
	}
}

# Agreement reached - what will you actually brew?
character_event = {
	id = soh.11595
	desc = EVTDESC_SOH_11595
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11595 # I will brew what was requested!
		
		set_character_flag = potion_is_helpful
		
		character_event = { id = soh.11596 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						NOR = {
							trait = kind
							trait = honest
							trait = just
						}
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
				opinion = {
					who = event_target:potion_target
					value >= 0
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = kind
			}
			
			mult_modifier = {
				factor = 2
				trait = honest
			}
			
			mult_modifier = {
				factor = 2
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				is_friend = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 10
				is_lover = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value >= 25
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11595 # I will brew a placebo!
		
		set_character_flag = potion_is_placebo
		
		character_event = { id = soh.11597 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				check_variable = {
					which = alchemist_healing_knowledge
					value < 25
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				check_variable = {
					which = alchemist_healing_knowledge
					value >= 25
				}
				check_variable = {
					which = alchemist_poison_knowledge
					value >= 50
				}
			}
		}
		
		name = EVTOPTC_SOH_11595 # I will brew something harmful!
		
		set_character_flag = potion_is_harmful
		
		character_event = { id = soh.11598 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			check_variable = {
				which = alchemist_healing_knowledge
				value >= 25
			}
			check_variable = {
				which = alchemist_poison_knowledge
				value >= 50
			}
		}
		
		name = EVTOPTD_SOH_11595 # I will brew something sneaky!
		
		set_character_flag = potion_is_sneaky_harmful
		
		character_event = { id = soh.11599 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
}

# Brewing actual clarity potion - which ingredient(s) to use?
character_event = {
	id = soh.11596
	desc = EVTDESC_SOH_11596
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_healing_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11596
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11596
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11596
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_clarity_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11600 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing placebo - which ingredient(s) to use?
character_event = {
	id = soh.11597
	desc = EVTDESC_SOH_11597
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_effect = yes
		select_random_hermetic_ingredient_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11597
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11597
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11597
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_clarity_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11600 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing harmful potion - which ingredients to use?
character_event = {
	id = soh.11598
	desc = EVTDESC_SOH_11598
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11598
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11598
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11598
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_clarity_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11600 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing sneaky harmful potion - which ingredients to use?
character_event = {
	id = soh.11599
	desc = EVTDESC_SOH_11599
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11599
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11599
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11599
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_clarity_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_clarity_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_clarity_potion_quality
					value = -1
				}
			}
			
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11600 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Potion delivered
character_event = {
	id = soh.11600
	desc = EVTDESC_SOH_11600
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = clarity_potion_is_
		FROM = {
			trigger_switch = {
				on_trigger = has_character_flag
				
				potion_is_helpful = { ROOT = { set_character_flag = clarity_potion_is_helpful } }
				potion_is_placebo = { ROOT = { set_character_flag = clarity_potion_is_placebo } }
				potion_is_harmful = { ROOT = { set_character_flag = clarity_potion_is_harmful } }
				potion_is_sneaky_harmful = { ROOT = { set_character_flag = clarity_potion_is_sneaky_harmful } }
			}
			save_event_target_as = target_alchemist
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11600 # Thank you!
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_clarity_potion_quality
				value = 0
			}
			
			while = {
				limit = {
					FROM = {
						NOT = {
							is_variable_equal = {
								which = alchemist_clarity_potion_quality
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						FROM = {
							check_variable = {
								which = alchemist_clarity_potion_quality
								value > 0
							}
						}
					}
					
					FROM = {
						change_variable = {
							which = alchemist_clarity_potion_quality
							value = -0.05
						}
					}
					
					change_variable = {
						which = consumed_clarity_potion_quality
						value = 0.05
					}
				}
				
				else = {
					FROM = {
						change_variable = {
							which = alchemist_clarity_potion_quality
							value = 0.05
						}
					}
					
					change_variable = {
						which = consumed_clarity_potion_quality
						value = -0.05
					}
				}
			}
			
			copy_clarity_potion_flags_effect = yes
		}
		
		character_event = { id = soh.11326 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.5
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.5
				trait = craven
			}
			
			mult_modifier = {
				factor = 10
				FROM = {
					trait = physician
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11600 # I don't trust that...
		
		FROM = {
			character_event = { id = soh.11601 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					trait = trusting
					AND = {
						trait = brave
						NOT = {
							trait = paranoid
						}
					}
				}
			}
		}
	}
}

# Target refused to drink potion
character_event = {
	id = soh.11601
	desc = EVTDESC_SOH_11601
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			OR = {
				trait = stressed
				trait = depressed
				trait = headache
				trait = malaise
				trait = fatigue
				has_character_modifier = drowsy_alchemist
				has_character_modifier = alchemist_hallucinations
				has_character_modifier = alchemist_blurred_vision
				has_character_modifier = alchemist_dizzy
				has_character_modifier = clouded_mind
				has_character_modifier = apathetic
				has_character_modifier = potion_crash
			}
			has_character_flag = potion_is_helpful
		}
		
		name = EVTOPTA_SOH_11601 # I guess *I* will take it, then...
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_clarity_potion_quality
				which = alchemist_clarity_potion_quality
			}
		}
		
		character_event = { id = soh.11326 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = depressed
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11601 # Oh, well...
	}
}



### Request Fertility Potion

# AI ruler might ask
character_event = {
	id = soh.11602
	hide_window = yes
	
	is_triggered_only = yes # on_bi_yearly_pulse -> random_events -> court_alchemist_fertility_potion
	
	has_dlc = "Mystics"
	only_rulers = yes
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		NOR = {
			AND = {
				is_female = yes
				practical_age >= 45
			}
			trait = eunuch
			trait = celibate
			trait = in_mourning
			trait = homosexual
		}
		
		OR = {
			is_married = yes
			is_consort = yes
		}
		
		OR = {
			any_courtier_or_vassal = {
				has_minor_title = title_court_alchemist
				society_member_of = the_alchemists
				society_rank >= 3
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					NOT = {
						is_rival = ROOT
					}
					ROOT = {
						trait = trusting
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_fertility_potion
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
				
				mult_modifier = {
					factor = 10
					NOT = {
						any_child = {
							is_alive = yes
							NOR = {
								trait = bastard
								trait = eunuch
								trait = disinherited
								trait = sent_to_china
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 5
					trait = lustful
				}
				
				mult_modifier = {
					factor = 2
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 0.1
					trait = chaste
				}
				
				mult_modifier = {
					factor = 0.1
					has_character_flag = survivor_mom
				}
				
				mult_modifier = {
					factor = 0.5
					is_pregnant = yes
				}
				
				mult_modifier = {
					factor = 2
					OR = {
						has_ambition = obj_groom_an_heir
						has_ambition = obj_have_a_son
						has_ambition = obj_have_a_daughter
					}
				}
			
				mult_modifier = {
					factor = 2
					OR = {
						religion = confucian
						has_religion_feature = religion_feature_family_focus
						has_religion_feature = religion_feature_batak
						has_religion_feature = religion_feature_miao
						has_religion_feature = religion_feature_sundanese
						has_religion_feature = religion_feature_viet
						has_religion_feature = religion_feature_yi
						has_religion_feature = religion_feature_zhuang
					}
				}
				
				mult_modifier = {
					factor = 2
					has_focus = focus_family
				}
				
				character_event = { id = soh.11604 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Courtier might ask
character_event = {
	id = soh.11603
	hide_window = yes
	
	is_triggered_only = yes # on_five_year_pulse -> random_events
	
	has_dlc = "Mystics"
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		is_playable = no
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		NOR = {
			AND = {
				is_female = yes
				practical_age >= 45
			}
			trait = eunuch
			trait = celibate
			trait = in_mourning
			trait = homosexual
		}
		
		OR = {
			is_married = yes
			is_consort = yes
		}
		
		OR = {
			employer = {
				any_courtier_or_vassal = {
					has_minor_title = title_court_alchemist
					society_member_of = the_alchemists
					society_rank >= 3
					is_inaccessible_or_incapable_trigger = no
					NOR = {
						has_character_flag = preparing_potion
						has_opinion_modifier = {
							who = ROOT
							modifier = opinion_requested_potion
						}
					}
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
					OR = {
						NOT = {
							is_rival = ROOT
						}
						ROOT = {
							trait = trusting
						}
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank >= 3
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_fertility_potion
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
				
				mult_modifier = {
					factor = 10
					NOT = {
						any_child = {
							is_alive = yes
							NOR = {
								trait = bastard
								trait = eunuch
								trait = disinherited
								trait = sent_to_china
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 5
					trait = lustful
				}
				
				mult_modifier = {
					factor = 2
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 0.1
					trait = chaste
				}
				
				mult_modifier = {
					factor = 0.1
					has_character_flag = survivor_mom
				}
				
				mult_modifier = {
					factor = 0.5
					is_pregnant = yes
				}
				
				mult_modifier = {
					factor = 2
					OR = {
						has_ambition = obj_groom_an_heir
						has_ambition = obj_have_a_son
						has_ambition = obj_have_a_daughter
					}
				}
			
				mult_modifier = {
					factor = 2
					OR = {
						religion = confucian
						has_religion_feature = religion_feature_family_focus
						has_religion_feature = religion_feature_batak
						has_religion_feature = religion_feature_miao
						has_religion_feature = religion_feature_sundanese
						has_religion_feature = religion_feature_viet
						has_religion_feature = religion_feature_yi
						has_religion_feature = religion_feature_zhuang
					}
				}
				
				mult_modifier = {
					factor = 2
					has_focus = focus_family
				}
				
				character_event = { id = soh.11604 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Who do you want to ask?
character_event = {
	id = soh.11604
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			100 = {
				trigger = {
					employer = {
						any_courtier_or_vassal = {
							has_minor_title = title_court_alchemist
							OR = {
								NOT = {
									is_rival = ROOT
								}
								ROOT = {
									trait = trusting
								}
							}
						}
					}
				}
				
				employer = {
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_court_alchemist
						}
						
						save_event_target_as = brewing_potion
					}
				}
			}
			
			100 = {
				trigger = {
					any_friend = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
				
				random_friend = {
					limit = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
			
			100 = {
				trigger = {
					any_lover = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
				
				random_lover = {
					limit = {
						society_member_of = the_alchemists
						society_rank >= 3
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
		}
		
		character_event = { id = soh.11605 } # Decide on how to phrase the request
	}
}

# Are you offering specific ingredients, offering to pay, or just asking?
character_event = {
	id = soh.11605
	desc = EVTDESC_SOH_11605
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				set_artifact_flag = ingredient_for_potion_1
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
					NOT = {
						has_artifact_flag = ingredient_for_potion_1
					}
				}
				
				set_artifact_flag = ingredient_for_potion_2
			}
		}
		
		save_event_target_as = potion_target
	}
	
	option = {
		trigger = {
			any_artifact = {
				has_artifact_flag = ingredient_for_potion
			}
		}
		
		name = EVTOPTA_SOH_11605 # I will provide the ingredients!
		
		custom_tooltip = {
			text = will_transfer_selected_artifact_1
		}
		custom_tooltip = {
			text = will_transfer_selected_artifact_2
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11606 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						OR = {
							society_member_of = the_alchemists
							society_member_of = hermetics
						}
						NOR = {
							is_friend = event_target:brewing_potion
							is_lover = event_target:brewing_potion
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				AND = {
					ai = yes
					wealth >= 0
				}
				wealth >= 25
			}
		}
		
		name = EVTOPTB_SOH_11605 # I will pay for the ingredients!
		
		custom_tooltip = {
			text = will_pay_25_gold_if_accepted
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11609 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:brewing_potion = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
		}
		
		name = EVTOPTC_SOH_11605 # Surely I don't have to provide anything!
		
		event_target:brewing_potion = {
			character_event = { id = soh.11612 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = event_target:brewing_potion
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = event_target:brewing_potion
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11605 # Actually, let's not...
		
		hidden_tooltip = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				clr_artifact_flag = ingredient_for_potion_1
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				clr_artifact_flag = ingredient_for_potion_2
			}
			
			event_target:brewing_potion = {
				remove_opinion = {
					who = ROOT
					modifier = opinion_requested_potion
				}
			}
		}
		
		ai_chance = { factor = 0 }
	}
}

# Got request - getting specific ingredients
character_event = {
	id = soh.11606
	desc = EVTDESC_SOH_11606
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11606 # Very well...
		
		FROM = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				
				clr_artifact_flag = ingredient_for_potion_1
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				
				clr_artifact_flag = ingredient_for_potion_2
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			character_event = { id = soh.11607 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11627 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					NAND = {
						OR = {
							is_married = FROM
							is_consort = FROM
							is_lover = FROM
						}
						OR = {
							has_character_flag = survivor_mom
							trait = celibate
							AND = {
								trait = homosexual
								NOT = {
									same_sex = FROM
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					has_ambition = obj_groom_an_heir
					has_ambition = obj_have_a_son
					has_ambition = obj_have_a_daughter
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					religion = confucian
					has_religion_feature = religion_feature_family_focus
					has_religion_feature = religion_feature_batak
					has_religion_feature = religion_feature_miao
					has_religion_feature = religion_feature_sundanese
					has_religion_feature = religion_feature_viet
					has_religion_feature = religion_feature_yi
					has_religion_feature = religion_feature_zhuang
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				has_focus = focus_family
			}
				
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11606 # Not interested!
		
		FROM = {
			character_event = { id = soh.11608 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11607
	desc = EVTDESC_SOH_11607
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11607 # Great!
	}
}

# Request refused
character_event = {
	id = soh.11608
	desc = EVTDESC_SOH_11608
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11608 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - paying for random ingredients
character_event = {
	id = soh.11609
	desc = EVTDESC_SOH_11609
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11609 # Very well...
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		FROM = {
			character_event = { id = soh.11610 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11627 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					NAND = {
						OR = {
							is_married = FROM
							is_consort = FROM
							is_lover = FROM
						}
						OR = {
							has_character_flag = survivor_mom
							trait = celibate
							AND = {
								trait = homosexual
								NOT = {
									same_sex = FROM
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					has_ambition = obj_groom_an_heir
					has_ambition = obj_have_a_son
					has_ambition = obj_have_a_daughter
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					religion = confucian
					has_religion_feature = religion_feature_family_focus
					has_religion_feature = religion_feature_batak
					has_religion_feature = religion_feature_miao
					has_religion_feature = religion_feature_sundanese
					has_religion_feature = religion_feature_viet
					has_religion_feature = religion_feature_yi
					has_religion_feature = religion_feature_zhuang
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				has_focus = focus_family
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11609 # Not interested!
		
		FROM = {
			character_event = { id = soh.11611 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11610
	desc = EVTDESC_SOH_11610
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11610 # Great!
		
		wealth = -25
	}
}

# Request refused
character_event = {
	id = soh.11611
	desc = EVTDESC_SOH_11611
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11611 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - expected to provide the ingredients
character_event = {
	id = soh.11612
	desc = EVTDESC_SOH_11612
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = request_potion_option_
		
		# Determine up to two options
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
		}
		
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
					NOT = {
						has_character_flag = request_potion_option_repay_favor
					}
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
					NOT = {
						has_character_flag = request_potion_option_favor
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				trigger = {
					NOT = {
						has_character_flag = request_potion_option_money
					}
				}
				
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
					NOT = {
						has_character_flag = request_potion_option_grace
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
			
			1 = {
				# Nothing
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11612 # Very well...
		
		FROM = {
			character_event = { id = soh.11614 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11627 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					NAND = {
						OR = {
							is_married = FROM
							is_consort = FROM
							is_lover = FROM
						}
						OR = {
							has_character_flag = survivor_mom
							trait = celibate
							AND = {
								trait = homosexual
								NOT = {
									same_sex = FROM
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					has_ambition = obj_groom_an_heir
					has_ambition = obj_have_a_son
					has_ambition = obj_have_a_daughter
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					religion = confucian
					has_religion_feature = religion_feature_family_focus
					has_religion_feature = religion_feature_batak
					has_religion_feature = religion_feature_miao
					has_religion_feature = religion_feature_sundanese
					has_religion_feature = religion_feature_viet
					has_religion_feature = religion_feature_yi
					has_religion_feature = religion_feature_zhuang
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				has_focus = focus_family
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = ambitious
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_favor
		}
		
		name = EVTOPTB_SOH_11612 # If we consider it a Favor...
		
		FROM = {
			character_event = { id = soh.11615 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					NAND = {
						OR = {
							is_married = FROM
							is_consort = FROM
							is_lover = FROM
						}
						OR = {
							has_character_flag = survivor_mom
							trait = celibate
							AND = {
								trait = homosexual
								NOT = {
									same_sex = FROM
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					has_ambition = obj_groom_an_heir
					has_ambition = obj_have_a_son
					has_ambition = obj_have_a_daughter
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					religion = confucian
					has_religion_feature = religion_feature_family_focus
					has_religion_feature = religion_feature_batak
					has_religion_feature = religion_feature_miao
					has_religion_feature = religion_feature_sundanese
					has_religion_feature = religion_feature_viet
					has_religion_feature = religion_feature_yi
					has_religion_feature = religion_feature_zhuang
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				has_focus = focus_family
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_repay_favor
		}
		
		name = EVTOPTC_SOH_11612 # If we consider it a Favor repaid...
		
		FROM = {
			character_event = { id = soh.11618 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					NAND = {
						OR = {
							is_married = FROM
							is_consort = FROM
							is_lover = FROM
						}
						OR = {
							has_character_flag = survivor_mom
							trait = celibate
							AND = {
								trait = homosexual
								NOT = {
									same_sex = FROM
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					has_ambition = obj_groom_an_heir
					has_ambition = obj_have_a_son
					has_ambition = obj_have_a_daughter
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					religion = confucian
					has_religion_feature = religion_feature_family_focus
					has_religion_feature = religion_feature_batak
					has_religion_feature = religion_feature_miao
					has_religion_feature = religion_feature_sundanese
					has_religion_feature = religion_feature_viet
					has_religion_feature = religion_feature_yi
					has_religion_feature = religion_feature_zhuang
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				has_focus = focus_family
			}
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_money
		}
		
		name = EVTOPTD_SOH_11612 # If you pay me...
		
		FROM = {
			character_event = { id = soh.11621 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					NAND = {
						OR = {
							is_married = FROM
							is_consort = FROM
							is_lover = FROM
						}
						OR = {
							has_character_flag = survivor_mom
							trait = celibate
							AND = {
								trait = homosexual
								NOT = {
									same_sex = FROM
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					has_ambition = obj_groom_an_heir
					has_ambition = obj_have_a_son
					has_ambition = obj_have_a_daughter
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					religion = confucian
					has_religion_feature = religion_feature_family_focus
					has_religion_feature = religion_feature_batak
					has_religion_feature = religion_feature_miao
					has_religion_feature = religion_feature_sundanese
					has_religion_feature = religion_feature_viet
					has_religion_feature = religion_feature_yi
					has_religion_feature = religion_feature_zhuang
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				has_focus = focus_family
			}
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_grace
		}
		
		name = EVTOPTE_SOH_11612 # For some Grace...
		
		FROM = {
			character_event = { id = soh.11624 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					NAND = {
						OR = {
							is_married = FROM
							is_consort = FROM
							is_lover = FROM
						}
						OR = {
							has_character_flag = survivor_mom
							trait = celibate
							AND = {
								trait = homosexual
								NOT = {
									same_sex = FROM
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					has_ambition = obj_groom_an_heir
					has_ambition = obj_have_a_son
					has_ambition = obj_have_a_daughter
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				OR = {
					religion = confucian
					has_religion_feature = religion_feature_family_focus
					has_religion_feature = religion_feature_batak
					has_religion_feature = religion_feature_miao
					has_religion_feature = religion_feature_sundanese
					has_religion_feature = religion_feature_viet
					has_religion_feature = religion_feature_yi
					has_religion_feature = religion_feature_zhuang
				}
			}
			
			mult_modifier = {
				factor = 2
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				has_focus = focus_family
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTF_SOH_11612 # Not interested!
		
		FROM = {
			character_event = { id = soh.11613 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request refused - general
character_event = {
	id = soh.11613
	desc = EVTDESC_SOH_11613
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11613 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Request accepted - asking for nothing
character_event = {
	id = soh.11614
	desc = EVTDESC_SOH_11614
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11614 # Great!
	}
}

# Alchemist asks for Favor
character_event = {
	id = soh.11615
	desc = EVTDESC_SOH_11615
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11615 # Very well...
		
		FROM = {
			add_favor = ROOT
			
			character_event = { id = soh.11616 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11615 # I think not!
		
		FROM = {
			character_event = { id = soh.11617 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Favor
character_event = {
	id = soh.11616
	desc = EVTDESC_SOH_11616
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11616 # Excellent!
		
		character_event = { id = soh.11627 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11617
	desc = EVTDESC_SOH_11617
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11617 # I see...
	}
}

# Alchemist asks for it to count as a Favor repaid
character_event = {
	id = soh.11618
	desc = EVTDESC_SOH_11618
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11618 # Very well...
		
		remove_favor = FROM
		
		FROM = {
			character_event = { id = soh.11619 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = ambitious
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = content
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11618 # I think not!
		
		FROM = {
			character_event = { id = soh.11620 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Favor considered repaid
character_event = {
	id = soh.11619
	desc = EVTDESC_SOH_11619
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11619 # Excellent!
		
		character_event = { id = soh.11627 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11620
	desc = EVTDESC_SOH_11620
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11620 # I see...
	}
}

# Alchemist asks for money
character_event = {
	id = soh.11621
	desc = EVTDESC_SOH_11621
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11621 # Very well...
		
		if = {
			limit = {
				real_tier = emperor
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.2
				min = 20
				max = 100
			}
		}
		
		else_if = {
			limit = {
				real_tier = king
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.15
				min = 15
				max = 75
			}
		}
		
		else_if = {
			limit = {
				real_tier = duke
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.1
				min = 10
				max = 50
			}
		}
		
		else = {
			transfer_scaled_wealth = {
				to = FROM
				value = 0.05
				min = 5
				max = 25
			}
		}
		
		FROM = {
			character_event = { id = soh.11622 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = charitable
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11621 # I think not!
		
		FROM = {
			character_event = { id = soh.11623 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got money
character_event = {
	id = soh.11622
	desc = EVTDESC_SOH_11622
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11622 # Excellent!
		
		character_event = { id = soh.11627 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11623
	desc = EVTDESC_SOH_11623
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11623 # I see...
	}
}

# Alchemist asks for Grace
character_event = {
	id = soh.11624
	desc = EVTDESC_SOH_11624
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11624 # Very well...
		
		FROM = {
			add_grace_medium_effect = yes
			
			character_event = { id = soh.11625 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11624 # I think not!
		
		FROM = {
			character_event = { id = soh.11626 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Grace
character_event = {
	id = soh.11625
	desc = EVTDESC_SOH_11625
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11625 # Excellent!
		
		character_event = { id = soh.11627 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11626
	desc = EVTDESC_SOH_11626
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11626 # I see...
	}
}

# Agreement reached - what will you actually brew?
character_event = {
	id = soh.11627
	desc = EVTDESC_SOH_11627
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11627 # I will brew what was requested!
		
		set_character_flag = potion_is_helpful
		
		character_event = { id = soh.11628 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						NOR = {
							trait = kind
							trait = honest
							trait = just
						}
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
				opinion = {
					who = event_target:potion_target
					value >= 0
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = kind
			}
			
			mult_modifier = {
				factor = 2
				trait = honest
			}
			
			mult_modifier = {
				factor = 2
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				is_friend = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 10
				is_lover = event_target:potion_target
				NOR = {
					trait = celibate
					has_character_flag = survivor_mom
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = event_target:potion_target
					is_consort = event_target:potion_target
					is_lover = event_target:potion_target
				}
				trait = celibate
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = event_target:potion_target
					is_consort = event_target:potion_target
					is_lover = event_target:potion_target
				}
				has_character_flag = survivor_mom
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value >= 25
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11627 # I will brew a placebo!
		
		set_character_flag = potion_is_placebo
		
		character_event = { id = soh.11629 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				check_variable = {
					which = alchemist_healing_knowledge
					value < 25
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 10
				OR = {
					is_married = event_target:potion_target
					is_consort = event_target:potion_target
					is_lover = event_target:potion_target
				}
				trait = celibate
				NOT = {
					is_rival = event_target:potion_target
				}
			}
			
			mult_modifier = {
				factor = 10
				OR = {
					is_married = event_target:potion_target
					is_consort = event_target:potion_target
					is_lover = event_target:potion_target
				}
				has_character_flag = survivor_mom
				NOT = {
					is_rival = event_target:potion_target
				}
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				check_variable = {
					which = alchemist_healing_knowledge
					value >= 25
				}
				check_variable = {
					which = alchemist_poison_knowledge
					value >= 50
				}
			}
		}
		
		name = EVTOPTC_SOH_11627 # I will brew something harmful!
		
		set_character_flag = potion_is_harmful
		
		character_event = { id = soh.11630 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			check_variable = {
				which = alchemist_healing_knowledge
				value >= 25
			}
			check_variable = {
				which = alchemist_poison_knowledge
				value >= 50
			}
		}
		
		name = EVTOPTD_SOH_11627 # I will brew something sneaky!
		
		set_character_flag = potion_is_sneaky_harmful
		
		character_event = { id = soh.11631 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
}

# Brewing actual fertility potion - which ingredient(s) to use?
character_event = {
	id = soh.11628
	desc = EVTDESC_SOH_11628
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_healing_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11628
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11628
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11628
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_fertility_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11632 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing placebo - which ingredient(s) to use?
character_event = {
	id = soh.11629
	desc = EVTDESC_SOH_11629
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_effect = yes
		select_random_hermetic_ingredient_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11629
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11629
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11629
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_fertility_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11632 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing harmful potion - which ingredients to use?
character_event = {
	id = soh.11630
	desc = EVTDESC_SOH_11630
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11630
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11630
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11630
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_fertility_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11632 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing sneaky harmful potion - which ingredients to use?
character_event = {
	id = soh.11631
	desc = EVTDESC_SOH_11631
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11631
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11631
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11631
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_fertility_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_fertility_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_fertility_potion_quality
					value = -1
				}
			}
			
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11632 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Potion delivered
character_event = {
	id = soh.11632
	desc = EVTDESC_SOH_11632
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = fertility_potion_is_
		FROM = {
			trigger_switch = {
				on_trigger = has_character_flag
				
				potion_is_helpful = { ROOT = { set_character_flag = fertility_potion_is_helpful } }
				potion_is_placebo = { ROOT = { set_character_flag = fertility_potion_is_placebo } }
				potion_is_harmful = { ROOT = { set_character_flag = fertility_potion_is_harmful } }
				potion_is_sneaky_harmful = { ROOT = { set_character_flag = fertility_potion_is_sneaky_harmful } }
			}
			save_event_target_as = target_alchemist
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11632 # Thank you!
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_fertility_potion_quality
				value = 0
			}
			
			while = {
				limit = {
					FROM = {
						NOT = {
							is_variable_equal = {
								which = alchemist_fertility_potion_quality
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						FROM = {
							check_variable = {
								which = alchemist_fertility_potion_quality
								value > 0
							}
						}
					}
					
					FROM = {
						change_variable = {
							which = alchemist_fertility_potion_quality
							value = -0.05
						}
					}
					
					change_variable = {
						which = consumed_fertility_potion_quality
						value = 0.05
					}
				}
				
				else = {
					FROM = {
						change_variable = {
							which = alchemist_fertility_potion_quality
							value = 1
						}
					}
					
					change_variable = {
						which = consumed_fertility_potion_quality
						value = -0.05
					}
				}
			}
			
			copy_fertility_potion_flags_effect = yes
		}
		
		character_event = { id = soh.11348 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.5
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.5
				trait = craven
			}
			
			mult_modifier = {
				factor = 10
				FROM = {
					trait = physician
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11632 # I don't trust that...
		
		FROM = {
			character_event = { id = soh.11633 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					trait = trusting
					AND = {
						trait = brave
						NOT = {
							trait = paranoid
						}
					}
				}
			}
		}
	}
}

# Target refused to drink potion
character_event = {
	id = soh.11633
	desc = EVTDESC_SOH_11633
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			OR = {
				is_female = no
				practical_age < 45
			}
			NOR = {
				trait = eunuch
				trait = celibate
			}
		}
		
		name = EVTOPTA_SOH_11633 # I guess *I* will take it, then...
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_fertility_potion_quality
				which = alchemist_fertility_potion_quality
			}
		}
		
		character_event = { id = soh.11348 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				NOR = {
					character_disease_trigger = yes
					has_minor_disease_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11633 # Oh, well...
	}
}



### Request Aphrodisiac

# AI ruler might ask
character_event = {
	id = soh.11634
	hide_window = yes
	
	is_triggered_only = yes # on_bi_yearly_pulse -> random_events -> court_alchemist_aphrodisiac
	
	has_dlc = "Mystics"
	only_rulers = yes
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		NOR = {
			trait = celibate
			trait = in_mourning
		}
		
		OR = {
			any_courtier_or_vassal = {
				has_minor_title = title_court_alchemist
				society_member_of = the_alchemists
				society_rank == 4
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					NOT = {
						is_rival = ROOT
					}
					ROOT = {
						trait = trusting
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank == 4
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank == 4
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_aphrodisiac
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
			
				mult_modifier = {
					factor = 5
					OR = {
						trait = master_seducer
						trait = master_seductress
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = lustful
				}
				
				mult_modifier = {
					factor = 2
					has_focus = focus_seduction
				}
				
				character_event = { id = soh.11636 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Courtier might ask
character_event = {
	id = soh.11635
	hide_window = yes
	
	is_triggered_only = yes # on_five_year_pulse -> random_events
	
	has_dlc = "Mystics"
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		is_playable = no
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		NOR = {
			trait = celibate
			trait = in_mourning
		}
		
		OR = {
			employer = {
				any_courtier_or_vassal = {
					has_minor_title = title_court_alchemist
					society_member_of = the_alchemists
					society_rank == 4
					is_inaccessible_or_incapable_trigger = no
					NOR = {
						has_character_flag = preparing_potion
						has_opinion_modifier = {
							who = ROOT
							modifier = opinion_requested_potion
						}
					}
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
					OR = {
						NOT = {
							is_rival = ROOT
						}
						ROOT = {
							trait = trusting
						}
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				society_rank == 4
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				society_rank == 4
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				NOR = {
					has_character_flag = preparing_potion
					has_opinion_modifier = {
						who = ROOT
						modifier = opinion_requested_potion
					}
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
		
		NOT = {
			has_character_modifier = recent_aphrodisiac
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 0.1
					trait = paranoid
				}
			
				mult_modifier = {
					factor = 5
					OR = {
						trait = master_seducer
						trait = master_seductress
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = lustful
				}
				
				mult_modifier = {
					factor = 2
					has_focus = focus_seduction
				}
				
				character_event = { id = soh.11636 } # Who do you want to ask?
			}
			50 = {
				# Do nothing
			}
		}
	}
}

# Who do you want to ask?
character_event = {
	id = soh.11636
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			100 = {
				trigger = {
					employer = {
						any_courtier_or_vassal = {
							has_minor_title = title_court_alchemist
							OR = {
								NOT = {
									is_rival = ROOT
								}
								ROOT = {
									trait = trusting
								}
							}
						}
					}
				}
				
				employer = {
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_court_alchemist
						}
						
						save_event_target_as = brewing_potion
					}
				}
			}
			
			100 = {
				trigger = {
					any_friend = {
						society_member_of = the_alchemists
						society_rank == 4
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
				
				random_friend = {
					limit = {
						society_member_of = the_alchemists
						society_rank == 4
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
			
			100 = {
				trigger = {
					any_lover = {
						society_member_of = the_alchemists
						society_rank == 4
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
				}
				
				random_lover = {
					limit = {
						society_member_of = the_alchemists
						society_rank == 4
						same_realm = ROOT
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							has_character_flag = preparing_potion
							has_opinion_modifier = {
								who = ROOT
								modifier = opinion_requested_potion
							}
						}
						OR = {
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
							
							ROOT = {
								OR = {
									wealth >= 0 # It's fine for the AI to go into debt for this...
									any_artifact = {
										count >= 2
										has_artifact_flag = ingredient
									}
								}
							}
						}
					}
					
					save_event_target_as = brewing_potion
				}
			}
		}
		
		character_event = { id = soh.11637 } # Decide on how to phrase the request
	}
}

# Are you offering specific ingredients, offering to pay, or just asking?
character_event = {
	id = soh.11637
	desc = EVTDESC_SOH_11637
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				set_artifact_flag = ingredient_for_potion_1
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
					NOT = {
						has_artifact_flag = ingredient_for_potion_1
					}
				}
				
				set_artifact_flag = ingredient_for_potion_2
			}
		}
		
		save_event_target_as = potion_target
	}
	
	option = {
		trigger = {
			any_artifact = {
				has_artifact_flag = ingredient_for_potion
			}
		}
		
		name = EVTOPTA_SOH_11637 # I will provide the ingredients!
		
		custom_tooltip = {
			text = will_transfer_selected_artifact_1
		}
		custom_tooltip = {
			text = will_transfer_selected_artifact_2
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11638 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						OR = {
							society_member_of = the_alchemists
							society_member_of = hermetics
						}
						NOR = {
							is_friend = event_target:brewing_potion
							is_lover = event_target:brewing_potion
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				AND = {
					ai = yes
					wealth >= 0
				}
				wealth >= 25
			}
		}
		
		name = EVTOPTB_SOH_11637 # I will pay for the ingredients!
		
		custom_tooltip = {
			text = will_pay_25_gold_if_accepted
		}
		
		event_target:brewing_potion = {
			character_event = { id = soh.11641 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:brewing_potion
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:brewing_potion = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
		}
		
		name = EVTOPTC_SOH_11637 # Surely I don't have to provide anything!
		
		event_target:brewing_potion = {
			character_event = { id = soh.11644 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = event_target:brewing_potion
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = event_target:brewing_potion
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11637 # Actually, let's not...
		
		hidden_tooltip = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				clr_artifact_flag = ingredient_for_potion_1
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				clr_artifact_flag = ingredient_for_potion_2
			}
			
			event_target:brewing_potion = {
				remove_opinion = {
					who = ROOT
					modifier = opinion_requested_potion
				}
			}
		}
		
		ai_chance = { factor = 0 }
	}
}

# Got request - getting specific ingredients
character_event = {
	id = soh.11638
	desc = EVTDESC_SOH_11638
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11638 # Very well...
		
		FROM = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				
				clr_artifact_flag = ingredient_for_potion_1
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				
				clr_artifact_flag = ingredient_for_potion_2
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			character_event = { id = soh.11639 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11659 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					FROM = {
						NOR = {
							AND = {
								dynasty = ROOT
								NOR = {
									is_married = yes
									is_consort = yes
									is_lover = ROOT
								}
							}
							AND = {
								OR = {
									is_married = ROOT
									is_consort = ROOT
								}
								OR = {
									root_attraction_trigger = no
									ROOT = {
										trait = celibate
									}
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = lustful
			}
				
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11638 # Not interested!
		
		FROM = {
			character_event = { id = soh.11640 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11639
	desc = EVTDESC_SOH_11639
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11639 # Great!
	}
}

# Request refused
character_event = {
	id = soh.11640
	desc = EVTDESC_SOH_11640
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11640 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - paying for random ingredients
character_event = {
	id = soh.11641
	desc = EVTDESC_SOH_11641
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11641 # Very well...
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		FROM = {
			character_event = { id = soh.11642 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11659 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					FROM = {
						NOR = {
							AND = {
								dynasty = ROOT
								NOR = {
									is_married = yes
									is_consort = yes
									is_lover = ROOT
								}
							}
							AND = {
								OR = {
									is_married = ROOT
									is_consort = ROOT
								}
								OR = {
									root_attraction_trigger = no
									ROOT = {
										trait = celibate
									}
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = lustful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_11641 # Not interested!
		
		FROM = {
			character_event = { id = soh.11643 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11642
	desc = EVTDESC_SOH_11642
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11642 # Great!
		
		wealth = -25
	}
}

# Request refused
character_event = {
	id = soh.11643
	desc = EVTDESC_SOH_11643
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11643 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Got request - expected to provide the ingredients
character_event = {
	id = soh.11644
	desc = EVTDESC_SOH_11644
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = request_potion_option_
		
		# Determine up to two options
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
		}
		
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
					NOT = {
						has_character_flag = request_potion_option_repay_favor
					}
				}
				
				set_character_flag = request_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
					NOT = {
						has_character_flag = request_potion_option_favor
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = request_potion_option_favor
			}
			
			10 = {
				trigger = {
					NOT = {
						has_character_flag = request_potion_option_money
					}
				}
				
				set_character_flag = request_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
					NOT = {
						has_character_flag = request_potion_option_grace
					}
				}
				
				set_character_flag = request_potion_option_grace
			}
			
			1 = {
				# Nothing
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11644 # Very well...
		
		FROM = {
			character_event = { id = soh.11646 days = 1 } # Infom FROM
		}
		
		character_event = { id = soh.11659 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					FROM = {
						NOR = {
							AND = {
								dynasty = ROOT
								NOR = {
									is_married = yes
									is_consort = yes
									is_lover = ROOT
								}
							}
							AND = {
								OR = {
									is_married = ROOT
									is_consort = ROOT
								}
								OR = {
									root_attraction_trigger = no
									ROOT = {
										trait = celibate
									}
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = lustful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = ambitious
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_favor
		}
		
		name = EVTOPTB_SOH_11644 # If we consider it a Favor...
		
		FROM = {
			character_event = { id = soh.11647 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					FROM = {
						NOR = {
							AND = {
								dynasty = ROOT
								NOR = {
									is_married = yes
									is_consort = yes
									is_lover = ROOT
								}
							}
							AND = {
								OR = {
									is_married = ROOT
									is_consort = ROOT
								}
								OR = {
									root_attraction_trigger = no
									ROOT = {
										trait = celibate
									}
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = lustful
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_repay_favor
		}
		
		name = EVTOPTC_SOH_11644 # If we consider it a Favor repaid...
		
		FROM = {
			character_event = { id = soh.11650 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					FROM = {
						NOR = {
							AND = {
								dynasty = ROOT
								NOR = {
									is_married = yes
									is_consort = yes
									is_lover = ROOT
								}
							}
							AND = {
								OR = {
									is_married = ROOT
									is_consort = ROOT
								}
								OR = {
									root_attraction_trigger = no
									ROOT = {
										trait = celibate
									}
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = lustful
			}
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_money
		}
		
		name = EVTOPTD_SOH_11644 # If you pay me...
		
		FROM = {
			character_event = { id = soh.11653 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					FROM = {
						NOR = {
							AND = {
								dynasty = ROOT
								NOR = {
									is_married = yes
									is_consort = yes
									is_lover = ROOT
								}
							}
							AND = {
								OR = {
									is_married = ROOT
									is_consort = ROOT
								}
								OR = {
									root_attraction_trigger = no
									ROOT = {
										trait = celibate
									}
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = lustful
			}
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
			has_character_flag = request_potion_option_grace
		}
		
		name = EVTOPTE_SOH_11644 # For some Grace...
		
		FROM = {
			character_event = { id = soh.11656 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				OR = {
					AND = {
						has_minor_title = title_court_alchemist
						FROM = {
							any_courtier_or_vassal = {
								character = ROOT
							}
						}
					}
					FROM = {
						NOR = {
							AND = {
								dynasty = ROOT
								NOR = {
									is_married = yes
									is_consort = yes
									is_lover = ROOT
								}
							}
							AND = {
								OR = {
									is_married = ROOT
									is_consort = ROOT
								}
								OR = {
									root_attraction_trigger = no
									ROOT = {
										trait = celibate
									}
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				OR = {
					is_married = FROM
					is_consort = FROM
					is_lover = FROM
				}
				trait = lustful
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				has_minor_title = title_court_alchemist
				FROM = {
					any_courtier_or_vassal = {
						character = ROOT
					}
				}
			}
		}
		
		name = EVTOPTF_SOH_11644 # Not interested!
		
		FROM = {
			character_event = { id = soh.11645 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = FROM
					AND = {
						is_rival = FROM
						NOR = {
							trait = kind
							trait = slothful
							trait = craven
						}
					}
				}
			}
		}
	}
}

# Request refused - general
character_event = {
	id = soh.11645
	desc = EVTDESC_SOH_11645
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11645 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_brewing_potion
		}
	}
}

# Request accepted - asking for nothing
character_event = {
	id = soh.11646
	desc = EVTDESC_SOH_11646
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11646 # Great!
	}
}

# Alchemist asks for Favor
character_event = {
	id = soh.11647
	desc = EVTDESC_SOH_11647
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11647 # Very well...
		
		FROM = {
			add_favor = ROOT
			
			character_event = { id = soh.11648 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11647 # I think not!
		
		FROM = {
			character_event = { id = soh.11649 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Favor
character_event = {
	id = soh.11648
	desc = EVTDESC_SOH_11648
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11648 # Excellent!
		
		character_event = { id = soh.11659 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11649
	desc = EVTDESC_SOH_11649
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11649 # I see...
	}
}

# Alchemist asks for it to count as a Favor repaid
character_event = {
	id = soh.11650
	desc = EVTDESC_SOH_11650
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11650 # Very well...
		
		remove_favor = FROM
		
		FROM = {
			character_event = { id = soh.11651 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = ambitious
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = content
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11650 # I think not!
		
		FROM = {
			character_event = { id = soh.11652 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Favor considered repaid
character_event = {
	id = soh.11651
	desc = EVTDESC_SOH_11651
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11651 # Excellent!
		
		character_event = { id = soh.11659 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11652
	desc = EVTDESC_SOH_11652
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11652 # I see...
	}
}

# Alchemist asks for money
character_event = {
	id = soh.11653
	desc = EVTDESC_SOH_11653
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11653 # Very well...
		
		if = {
			limit = {
				real_tier = emperor
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.2
				min = 20
				max = 100
			}
		}
		
		else_if = {
			limit = {
				real_tier = king
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.15
				min = 15
				max = 75
			}
		}
		
		else_if = {
			limit = {
				real_tier = duke
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.1
				min = 10
				max = 50
			}
		}
		
		else = {
			transfer_scaled_wealth = {
				to = FROM
				value = 0.05
				min = 5
				max = 25
			}
		}
		
		FROM = {
			character_event = { id = soh.11654 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = charitable
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11653 # I think not!
		
		FROM = {
			character_event = { id = soh.11655 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got money
character_event = {
	id = soh.11654
	desc = EVTDESC_SOH_11654
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11654 # Excellent!
		
		character_event = { id = soh.11659 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11655
	desc = EVTDESC_SOH_11655
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11655 # I see...
	}
}

# Alchemist asks for Grace
character_event = {
	id = soh.11656
	desc = EVTDESC_SOH_11656
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11656 # Very well...
		
		FROM = {
			add_grace_medium_effect = yes
			
			character_event = { id = soh.11657 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11656 # I think not!
		
		FROM = {
			character_event = { id = soh.11658 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Grace
character_event = {
	id = soh.11657
	desc = EVTDESC_SOH_11657
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11657 # Excellent!
		
		character_event = { id = soh.11659 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11658
	desc = EVTDESC_SOH_11658
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11658 # I see...
	}
}

# Agreement reached - what will you actually brew?
character_event = {
	id = soh.11659
	desc = EVTDESC_SOH_11659
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11659 # I will brew what was requested!
		
		set_character_flag = potion_is_helpful
		
		character_event = { id = soh.11660 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						NOR = {
							trait = kind
							trait = honest
							trait = just
						}
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
				opinion = {
					who = event_target:potion_target
					value >= 0
				}
				event_target:potion_target = {
					NOR = {
						AND = {
							dynasty = ROOT
							NOR = {
								is_married = yes
								is_consort = yes
								is_lover = ROOT
							}
						}
						AND = {
							OR = {
								is_married = ROOT
								is_consort = ROOT
							}
							OR = {
								root_attraction_trigger = no
								ROOT = {
									trait = celibate
								}
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = kind
			}
			
			mult_modifier = {
				factor = 2
				trait = honest
			}
			
			mult_modifier = {
				factor = 2
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				is_friend = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 10
				is_lover = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value >= 25
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11659 # I will brew a placebo!
		
		set_character_flag = potion_is_placebo
		
		character_event = { id = soh.11661 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:potion_target
					OR = {
						trait = cruel
						trait = deceitful
						trait = arbitrary
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				check_variable = {
					which = alchemist_healing_knowledge
					value < 25
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:potion_target
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 10
				event_target:potion_target = {
					OR = {
						AND = {
							dynasty = ROOT
							NOR = {
								is_married = yes
								is_consort = yes
								is_lover = ROOT
							}
						}
						AND = {
							OR = {
								is_married = ROOT
								is_consort = ROOT
							}
							OR = {
								root_attraction_trigger = no
								ROOT = {
									trait = celibate
								}
							}
						}
					}
					NOT = {
						is_rival = ROOT
					}
				}
			}
		}
	}
	
	option = {
		trigger = {
			NAND = {
				check_variable = {
					which = alchemist_healing_knowledge
					value >= 25
				}
				check_variable = {
					which = alchemist_poison_knowledge
					value >= 50
				}
			}
		}
		
		name = EVTOPTC_SOH_11659 # I will brew something harmful!
		
		set_character_flag = potion_is_harmful
		
		character_event = { id = soh.11662 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			check_variable = {
				which = alchemist_healing_knowledge
				value >= 25
			}
			check_variable = {
				which = alchemist_poison_knowledge
				value >= 50
			}
		}
		
		name = EVTOPTD_SOH_11659 # I will brew something sneaky!
		
		set_character_flag = potion_is_sneaky_harmful
		
		character_event = { id = soh.11663 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:potion_target
					is_lover = event_target:potion_target
					AND = {
						is_close_relative = event_target:potion_target
						NOT = {
							is_rival = event_target:potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:potion_target
					opinion = {
						who = event_target:potion_target
						value < 0
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:potion_target
					value < -50
				}
			}
		}
	}
}

# Brewing actual aphrodisiac - which ingredient(s) to use?
character_event = {
	id = soh.11660
	desc = EVTDESC_SOH_11660
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_healing_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11660
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11660
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11660
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_aphrodisiac_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11664 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing placebo - which ingredient(s) to use?
character_event = {
	id = soh.11661
	desc = EVTDESC_SOH_11661
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_effect = yes
		select_random_hermetic_ingredient_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11661
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11661
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11661
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_aphrodisiac_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11664 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing harmful potion - which ingredients to use?
character_event = {
	id = soh.11662
	desc = EVTDESC_SOH_11662
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11662
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11662
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11662
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_aphrodisiac_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11664 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Brewing sneaky harmful potion - which ingredients to use?
character_event = {
	id = soh.11663
	desc = EVTDESC_SOH_11663
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11663
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11663
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11663
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_aphrodisiac_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_aphrodisiac_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_aphrodisiac_quality
					value = -1
				}
			}
			
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_healing_potion_quality
					value = 1
				}
			}
			
			event_target:potion_target = {
				character_event = { id = soh.11664 } # Target offered the potion
			}
			
			character_event = { id = soh.11378 days = 10 } # Flag cleanup
		}
	}
}

# Potion delivered
character_event = {
	id = soh.11664
	desc = EVTDESC_SOH_11664
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = aphrodisiac_is_
		FROM = {
			trigger_switch = {
				on_trigger = has_character_flag
				
				potion_is_helpful = { ROOT = { set_character_flag = aphrodisiac_is_helpful } }
				potion_is_placebo = { ROOT = { set_character_flag = aphrodisiac_is_placebo } }
				potion_is_harmful = { ROOT = { set_character_flag = aphrodisiac_is_harmful } }
				potion_is_sneaky_harmful = { ROOT = { set_character_flag = aphrodisiac_is_sneaky_harmful } }
			}
			save_event_target_as = target_alchemist
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11664 # Thank you!
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_aphrodisiac_quality
				value = 0
			}
			
			while = {
				limit = {
					FROM = {
						NOT = {
							is_variable_equal = {
								which = alchemist_aphrodisiac_quality
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						FROM = {
							check_variable = {
								which = alchemist_aphrodisiac_quality
								value > 0
							}
						}
					}
					
					FROM = {
						change_variable = {
							which = alchemist_aphrodisiac_quality
							value = -0.05
						}
					}
					
					change_variable = {
						which = consumed_aphrodisiac_quality
						value = 0.05
					}
				}
				
				else = {
					FROM = {
						change_variable = {
							which = alchemist_aphrodisiac_quality
							value = 0.05
						}
					}
					
					change_variable = {
						which = consumed_aphrodisiac_quality
						value = -0.05
					}
				}
			}
			
			copy_aphrodisiac_flags_effect = yes
		}
		
		character_event = { id = soh.11360 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.5
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.5
				trait = craven
			}
			
			mult_modifier = {
				factor = 10
				FROM = {
					trait = physician
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11664 # I don't trust that...
		
		FROM = {
			character_event = { id = soh.11665 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					trait = trusting
					AND = {
						trait = brave
						NOT = {
							trait = paranoid
						}
					}
				}
			}
		}
	}
}

# Target refused to drink potion
character_event = {
	id = soh.11665
	desc = EVTDESC_SOH_11665
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		trigger = {
			OR = {
				is_female = no
				practical_age < 45
			}
			NOR = {
				trait = eunuch
				trait = celibate
			}
		}
		
		name = EVTOPTA_SOH_11665 # I guess *I* will take it, then...
		
		hidden_tooltip = {
			set_variable = {
				which = consumed_aphrodisiac_quality
				which = alchemist_aphrodisiac_quality
			}
		}
		
		character_event = { id = soh.11360 days = 5 } # Determine the outcome
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = chaste
			}
			
			mult_modifier = {
				factor = 5
				trait = lustful
			}
			
			mult_modifier = {
				factor = 2
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 5
				has_focus = focus_seduction
			}
			
			mult_modifier = {
				factor = 10
				OR = {
					trait = master_seducer
					trait = master_seductress
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = physician
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11665 # Oh, well...
	}
}



### Request Humiliating Potion

# Possible opportunity
character_event = {
	id = soh.11666
	hide_window = yes
	
	is_triggered_only = yes # on_bi_yearly_pulse -> random_events -> court_alchemist_humiliating_potion
	
	has_dlc = "Mystics"
	only_rulers = yes
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		top_liege = {
			any_realm_character = {
				is_adult = yes
				is_inaccessible_or_incapable_trigger = no
				OR = {
					is_rival = ROOT
					reverse_opinion = {
						who = ROOT
						value < 0
					}
				}
			}
		}
		
		OR = {
			any_courtier_or_vassal = {
				has_minor_title = title_court_alchemist
				society_member_of = the_alchemists
				is_inaccessible_or_incapable_trigger = no
				OR = {
					NOT = {
						is_rival = ROOT
					}
					ROOT = {
						trait = trusting
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
	}
	
	immediate = {
		top_liege = {
			random_realm_character = {
				limit = {
					is_adult = yes
					is_inaccessible_or_incapable_trigger = no
					OR = {
						is_rival = ROOT
						reverse_opinion = {
							who = ROOT
							value < 0
						}
					}
				}
				
				preferred_limit = {
					employer = {
						character = ROOT
					}
				}
				
				preferred_limit = {
					is_vassal_or_below = ROOT
				}
				
				save_event_target_as = bad_potion_target
			}
		}
		
		character_event = { id = soh.11668 } # Go for it?
	}
}

# Courtier might ask
character_event = {
	id = soh.11667
	hide_window = yes
	
	is_triggered_only = yes # on_decade_year_pulse -> random_events
	
	has_dlc = "Mystics"
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		is_playable = no
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		employer = {
			top_liege = {
				any_realm_character = {
					is_adult = yes
					is_inaccessible_or_incapable_trigger = yes
					OR = {
						is_rival = ROOT
						reverse_opinion = {
							who = ROOT
							value < 0
						}
					}
				}
			}
		}
		
		OR = {
			employer = {
				any_courtier_or_vassal = {
					has_minor_title = title_court_alchemist
					society_member_of = the_alchemists
					is_inaccessible_or_incapable_trigger = no
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
					OR = {
						NOT = {
							is_rival = ROOT
						}
						ROOT = {
							trait = trusting
						}
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
	}
	
	immediate = {
		employer = {
			top_liege = {
				random_realm_character = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							is_rival = ROOT
							reverse_opinion = {
								who = ROOT
								value < 0
							}
						}
					}
					
					preferred_limit = {
						employer = {
							any_courtier = {
								character = ROOT
							}
						}
					}
					
					save_event_target_as = bad_potion_target
				}
			}
		}
		
		character_event = { id = soh.11668 } # Go for it?
	}
}

# Who do you want to ask?
character_event = {
	id = soh.11668
	desc = EVTDESC_SOH_11668
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		employer = {
			any_courtier_or_vassal = {
				limit = {
					has_minor_title = title_court_alchemist
					is_inaccessible_or_incapable_trigger = no
					NOR = {
						character = ROOT
						character = event_target:bad_potion_target
					}
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
				}
				
				save_event_target_as = alchemist_option_1
			}
		}
		
		random_friend = {
			limit = {
				society_member_of = the_alchemists
				is_inaccessible_or_incapable_trigger = no
				same_realm = ROOT
				NOR = {
					character = ROOT
					character = event_target:bad_potion_target
					character = event_target:alchemist_option_1
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			save_event_target_as = alchemist_option_2
		}
		
		random_lover = {
			limit = {
				society_member_of = the_alchemists
				is_inaccessible_or_incapable_trigger = no
				same_realm = ROOT
				NOR = {
					character = ROOT
					character = event_target:bad_potion_target
					character = event_target:alchemist_option_1
					character = event_target:alchemist_option_2
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			save_event_target_as = alchemist_option_3
		}
	}
	
	option = {
		trigger = {
			event_target:alchemist_option_1 = {
				always = yes
			}
		}
		
		name = EVTOPTA_SOH_11668 # My Court Alchemist!
		
		event_target:alchemist_option_1 = {
			save_event_target_as = target_alchemist
		}
		
		character_event = { id = soh.11669 } # Decide on how to phrase the request
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:alchemist_option_1
					NOT = {
						trait = trusting
					}
				}
				NAND = {
					trait = kind
					trait = honest
					trait = just
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 0.1
				event_target:alchemist_option_1 = {
					OR = {
						is_friend = event_target:bad_potion_target
						is_lover = event_target:bad_potion_target
						AND = {
							is_close_relative = event_target:bad_potion_target
							NOT = {
								is_rival = event_target:bad_potion_target
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:alchemist_option_2 = {
				always = yes
			}
		}
		
		name = EVTOPTB_SOH_11668 # My friend!
		
		event_target:alchemist_option_2 = {
			save_event_target_as = target_alchemist
		}
		
		character_event = { id = soh.11669 } # Decide on how to phrase the request
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					trait = kind
					trait = honest
					trait = just
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 0.1
				event_target:alchemist_option_2 = {
					OR = {
						is_friend = event_target:bad_potion_target
						is_lover = event_target:bad_potion_target
						AND = {
							is_close_relative = event_target:bad_potion_target
							NOT = {
								is_rival = event_target:bad_potion_target
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:alchemist_option_3 = {
				always = yes
			}
		}
		
		name = EVTOPTC_SOH_11668 # My lover!
		
		event_target:alchemist_option_3 = {
			save_event_target_as = target_alchemist
		}
		
		character_event = { id = soh.11669 } # Decide on how to phrase the request
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					trait = kind
					trait = honest
					trait = just
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 0.1
				event_target:alchemist_option_3 = {
					OR = {
						is_friend = event_target:bad_potion_target
						is_lover = event_target:bad_potion_target
						AND = {
							is_close_relative = event_target:bad_potion_target
							NOT = {
								is_rival = event_target:bad_potion_target
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11668 # This is a bad idea...
		
		piety = 25
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					trait = cruel
					trait = arbitrary
					trait = deceitful
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
		}
	}
}

# Are you offering specific ingredients, offering to pay, or just asking?
character_event = {
	id = soh.11669
	desc = EVTDESC_SOH_11669
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				set_artifact_flag = ingredient_for_potion_1
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
					NOT = {
						has_artifact_flag = ingredient_for_potion_1
					}
				}
				
				set_artifact_flag = ingredient_for_potion_2
			}
		}
		
		save_event_target_as = making_request
	}
	
	option = {
		trigger = {
			any_artifact = {
				has_artifact_flag = ingredient_for_potion
			}
		}
		
		name = EVTOPTA_SOH_11669 # I will provide the ingredients!
		
		custom_tooltip = {
			text = will_transfer_selected_artifact_1_target_alchemist
		}
		custom_tooltip = {
			text = will_transfer_selected_artifact_2_target_alchemist
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11670 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						OR = {
							society_member_of = the_alchemists
							society_member_of = hermetics
						}
						NOR = {
							is_friend = event_target:target_alchemist
							is_lover = event_target:target_alchemist
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				AND = {
					ai = yes
					wealth >= 0
				}
				wealth >= 25
			}
		}
		
		name = EVTOPTB_SOH_11669 # I will pay for the ingredients!
		
		custom_tooltip = {
			text = will_pay_25_gold_if_accepted_target_alchemist
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11673 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:target_alchemist = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
		}
		
		name = EVTOPTC_SOH_11669 # Surely I don't have to provide anything!
		
		event_target:target_alchemist = {
			character_event = { id = soh.11676 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = event_target:target_alchemist
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = event_target:target_alchemist
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11669 # Actually, let's not...
		
		hidden_tooltip = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				clr_artifact_flag = ingredient_for_potion_1
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				clr_artifact_flag = ingredient_for_potion_2
			}
			
			event_target:target_alchemist = {
				remove_opinion = {
					who = ROOT
					modifier = opinion_requested_potion
				}
			}
		}
		
		ai_chance = { factor = 0 }
	}
}

# Got request - getting specific ingredients
character_event = {
	id = soh.11670
	desc = EVTDESC_SOH_11670
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11670 # Very well...
		
		FROM = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				
				clr_artifact_flag = ingredient_for_potion_1
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				
				clr_artifact_flag = ingredient_for_potion_2
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			character_event = { id = soh.11671 days = 1 } # Inform FROM
		}
		
		character_event = { id = soh.11691 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				NAND = {
					is_close_relative = event_target:bad_potion_target
					NOR = {
						is_rival = event_target:bad_potion_target
						AND = {
							NOT = {
								dynasty = event_target:bad_potion_target
							}
							opinion = {
								who = event_target:bad_potion_target
								value < -25
							}
						}
						opinion = {
							who = event_target:bad_potion_target
							value < -50
						}
					}
				}
				NAND = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11670 # Not interested!
		
		FROM = {
			character_event = { id = soh.11672 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:bad_potion_target
					NOT = {
						is_rival = FROM
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_11670 # I will tell the target
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11698 } # Inform the target
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					is_rival = event_target:bad_potion_target
				}
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 0.5
				opinion = {
					who = event_target:bad_potion_target
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11671
	desc = EVTDESC_SOH_11671
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11671 # Great!
	}
}

# Request refused
character_event = {
	id = soh.11672
	desc = EVTDESC_SOH_11672
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11672 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_helping_with_potion_plot
		}
	}
}

# Got request - paying for random ingredients
character_event = {
	id = soh.11673
	desc = EVTDESC_SOH_11673
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11673 # Very well...
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		FROM = {
			character_event = { id = soh.11674 days = 1 } # Inform FROM
		}
		
		character_event = { id = soh.11691 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				NAND = {
					is_close_relative = event_target:bad_potion_target
					NOR = {
						is_rival = event_target:bad_potion_target
						AND = {
							NOT = {
								dynasty = event_target:bad_potion_target
							}
							opinion = {
								who = event_target:bad_potion_target
								value < -25
							}
						}
						opinion = {
							who = event_target:bad_potion_target
							value < -50
						}
					}
				}
				NAND = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11673 # Not interested!
		
		FROM = {
			character_event = { id = soh.11675 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:bad_potion_target
					NOT = {
						is_rival = FROM
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_11673 # I will tell the target
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11698 } # Inform the target
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					is_rival = event_target:bad_potion_target
				}
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 0.5
				opinion = {
					who = event_target:bad_potion_target
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11674
	desc = EVTDESC_SOH_11674
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11674 # Great!
		
		wealth = -25
	}
}

# Request refused
character_event = {
	id = soh.11675
	desc = EVTDESC_SOH_11675
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11675 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_helping_with_potion_plot
		}
	}
}

# Got request - expected to provide the ingredients
character_event = {
	id = soh.11676
	desc = EVTDESC_SOH_11676
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = bad_potion_option_
		
		# Get one option
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
				}
				
				set_character_flag = bad_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = bad_potion_option_favor
			}
			
			10 = {
				set_character_flag = bad_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
				}
				
				set_character_flag = bad_potion_option_grace
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11676 # Very well...
		
		FROM = {
			character_event = { id = soh.11678 days = 1 } # Inform FROM
		}
		
		character_event = { id = soh.11691 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				NAND = {
					is_close_relative = event_target:bad_potion_target
					NOR = {
						is_rival = event_target:bad_potion_target
						AND = {
							NOT = {
								dynasty = event_target:bad_potion_target
							}
							opinion = {
								who = event_target:bad_potion_target
								value < -25
							}
						}
						opinion = {
							who = event_target:bad_potion_target
							value < -50
						}
					}
				}
				NAND = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = ambitious
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_favor
		}
		
		name = EVTOPTB_SOH_11676 # If we consider it a Favor...
		
		FROM = {
			character_event = { id = soh.11679 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				NAND = {
					is_close_relative = event_target:bad_potion_target
					NOR = {
						is_rival = event_target:bad_potion_target
						AND = {
							NOT = {
								dynasty = event_target:bad_potion_target
							}
							opinion = {
								who = event_target:bad_potion_target
								value < -25
							}
						}
						opinion = {
							who = event_target:bad_potion_target
							value < -50
						}
					}
				}
				NAND = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_repay_favor
		}
		
		name = EVTOPTC_SOH_11676 # If we consider it a Favor repaid...
		
		FROM = {
			character_event = { id = soh.11682 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				NAND = {
					is_close_relative = event_target:bad_potion_target
					NOR = {
						is_rival = event_target:bad_potion_target
						AND = {
							NOT = {
								dynasty = event_target:bad_potion_target
							}
							opinion = {
								who = event_target:bad_potion_target
								value < -25
							}
						}
						opinion = {
							who = event_target:bad_potion_target
							value < -50
						}
					}
				}
				NAND = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_money
		}
		
		name = EVTOPTD_SOH_11676 # If you pay me...
		
		FROM = {
			character_event = { id = soh.11685 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				NAND = {
					is_close_relative = event_target:bad_potion_target
					NOR = {
						is_rival = event_target:bad_potion_target
						AND = {
							NOT = {
								dynasty = event_target:bad_potion_target
							}
							opinion = {
								who = event_target:bad_potion_target
								value < -25
							}
						}
						opinion = {
							who = event_target:bad_potion_target
							value < -50
						}
					}
				}
				NAND = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_grace
		}
		
		name = EVTOPTE_SOH_11676 # For some Grace...
		
		FROM = {
			character_event = { id = soh.11688 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				NAND = {
					is_close_relative = event_target:bad_potion_target
					NOR = {
						is_rival = event_target:bad_potion_target
						AND = {
							NOT = {
								dynasty = event_target:bad_potion_target
							}
							opinion = {
								who = event_target:bad_potion_target
								value < -25
							}
						}
						opinion = {
							who = event_target:bad_potion_target
							value < -50
						}
					}
				}
				NAND = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 0.1
				trait = honest
			}
			
			mult_modifier = {
				factor = 0.1
				trait = just
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTF_SOH_11676 # Not interested!
		
		FROM = {
			character_event = { id = soh.11677 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:bad_potion_target
					NOT = {
						is_rival = FROM
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
		}
	}
	
	option = {
		name = EVTOPTG_SOH_11676 # I will tell the target
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11698 } # Inform the target
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					is_rival = event_target:bad_potion_target
				}
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 0.5
				opinion = {
					who = event_target:bad_potion_target
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
}

# Request refused - general
character_event = {
	id = soh.11677
	desc = EVTDESC_SOH_11677
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11677 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_helping_with_potion_plot
		}
	}
}

# Request accepted - asking for nothing
character_event = {
	id = soh.11678
	desc = EVTDESC_SOH_11678
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11678 # Great!
	}
}

# Alchemist asks for Favor
character_event = {
	id = soh.11679
	desc = EVTDESC_SOH_11679
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11679 # Very well...
		
		FROM = {
			add_favor = ROOT
			
			character_event = { id = soh.11680 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11679 # I think not!
		
		FROM = {
			character_event = { id = soh.11681 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Favor
character_event = {
	id = soh.11680
	desc = EVTDESC_SOH_11680
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11680 # Excellent!
		
		character_event = { id = soh.11691 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11681
	desc = EVTDESC_SOH_11681
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11681 # I see...
	}
}

# Alchemist asks for it to count as a Favor repaid
character_event = {
	id = soh.11682
	desc = EVTDESC_SOH_11682
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11682 # Very well...
		
		remove_favor = FROM
		
		FROM = {
			character_event = { id = soh.11683 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = ambitious
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = content
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11682 # I think not!
		
		FROM = {
			character_event = { id = soh.11684 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Favor considered repaid
character_event = {
	id = soh.11683
	desc = EVTDESC_SOH_11683
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11683 # Excellent!
		
		character_event = { id = soh.11691 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11684
	desc = EVTDESC_SOH_11684
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11684 # I see...
	}
}

# Alchemist asks for money
character_event = {
	id = soh.11685
	desc = EVTDESC_SOH_11685
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11685 # Very well...
		
		if = {
			limit = {
				real_tier = emperor
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.2
				min = 20
				max = 100
			}
		}
		
		else_if = {
			limit = {
				real_tier = king
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.15
				min = 15
				max = 75
			}
		}
		
		else_if = {
			limit = {
				real_tier = duke
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.1
				min = 10
				max = 50
			}
		}
		
		else = {
			transfer_scaled_wealth = {
				to = FROM
				value = 0.05
				min = 5
				max = 25
			}
		}
		
		FROM = {
			character_event = { id = soh.11686 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = charitable
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11685 # I think not!
		
		FROM = {
			character_event = { id = soh.11687 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got money
character_event = {
	id = soh.11686
	desc = EVTDESC_SOH_11686
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11686 # Excellent!
		
		character_event = { id = soh.11691 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11687
	desc = EVTDESC_SOH_11687
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11687 # I see...
	}
}

# Alchemist asks for Grace
character_event = {
	id = soh.11688
	desc = EVTDESC_SOH_11688
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11688 # Very well...
		
		FROM = {
			add_grace_medium_effect = yes
			
			character_event = { id = soh.11689 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11688 # I think not!
		
		FROM = {
			character_event = { id = soh.11690 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Grace
character_event = {
	id = soh.11689
	desc = EVTDESC_SOH_11689
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11689 # Excellent!
		
		character_event = { id = soh.11691 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11690
	desc = EVTDESC_SOH_11690
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11690 # I see...
	}
}

# Agreement reached - what will you actually brew?
character_event = {
	id = soh.11691
	desc = EVTDESC_SOH_11691
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = created_humiliating_potion_
	}
	
	option = {
		name = EVTOPTA_SOH_11691 # I will brew what was requested!
		
		set_character_flag = created_humiliating_potion_is_humiliating
		
		character_event = { id = soh.11692 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:making_request
					NOT = {
						is_rival = event_target:making_request
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = kind
			}
			
			mult_modifier = {
				factor = 10
				is_friend = event_target:making_request
			}
			
			mult_modifier = {
				factor = 10
				is_lover = event_target:making_request
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:making_request
					value >= 50
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:making_request
					value >= 25
				}
			}
			
			mult_modifier = {
				factor = 0.5
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 0.2
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11691 # I will brew a placebo!
		
		set_character_flag = created_humiliating_potion_is_placebo
		
		character_event = { id = soh.11693 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					OR = {
						is_friend = event_target:making_request
						is_lover = event_target:making_request
					}
					NOR = {
						is_friend = event_target:bad_potion_target
						is_lover = event_target:bad_potion_target
						AND = {
							is_close_relative = event_target:bad_potion_target
							NOT = {
								is_rival = event_target:bad_potion_target
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 10
				trait = kind
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value >= 0
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value >= 25
				}
			}
			
			mult_modifier = {
				factor = 10
				opinion = {
					who = event_target:bad_potion_target
					value >= 50
				}
			}
		}
	}
	
	option = {
		trigger = {
			check_variable = {
				which = alchemist_poison_knowledge
				value < 50
			}
		}
		
		name = EVTOPTC_SOH_11691 # I will brew something harmful!
		
		set_character_flag = created_humiliating_potion_is_harmful
		
		character_event = { id = soh.11694 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
					AND = {
						is_close_relative = event_target:bad_potion_target
						NOT = {
							is_rival = event_target:bad_potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:bad_potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
			
			mult_modifier = {
				factor = 2
				NOR = {
					is_friend = event_target:making_request
					is_lover = event_target:making_request
				}
			}
			
			mult_modifier = {
				factor = 5
				is_rival = event_target:making_request
			}
		}
	}
	
	option = {
		trigger = {
			check_variable = {
				which = alchemist_poison_knowledge
				value >= 50
			}
		}
		
		name = EVTOPTD_SOH_11691 # I will brew something sneaky!
		
		set_character_flag = created_humiliating_potion_is_sneaky_harmful
		
		character_event = { id = soh.11695 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
					AND = {
						is_close_relative = event_target:bad_potion_target
						NOT = {
							is_rival = event_target:bad_potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:bad_potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
			
			mult_modifier = {
				factor = 2
				NOR = {
					is_friend = event_target:making_request
					is_lover = event_target:making_request
				}
			}
			
			mult_modifier = {
				factor = 5
				is_rival = event_target:making_request
			}
		}
	}
}

# Brewing actual humiliating potion - which ingredient(s) to use?
character_event = {
	id = soh.11692
	desc = EVTDESC_SOH_11692
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_effect = yes
		select_random_hermetic_ingredient_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11692
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11692
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11692
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_humiliating_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -1
				}
			}
			
			event_target:making_request = {
				character_event = { id = soh.11696 } # Requester gets potion
			}
		}
	}
}

# Brewing placebo - which ingredient(s) to use?
character_event = {
	id = soh.11693
	desc = EVTDESC_SOH_11693
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_effect = yes
		select_random_hermetic_ingredient_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11693
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11693
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11693
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_humiliating_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 1
				}
			}
			
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 1
				}
			}
			
			event_target:making_request = {
				character_event = { id = soh.11696 } # Requester gets potion
			}
		}
	}
}

# Brewing harmful potion - which ingredients to use?
character_event = {
	id = soh.11694
	desc = EVTDESC_SOH_11694
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11694
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11694
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11694
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_humiliating_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -1
				}
			}
			
			event_target:making_request = {
				character_event = { id = soh.11696 } # Requester gets potion
			}
		}
	}
}

# Brewing sneaky harmful potion - which ingredients to use?
character_event = {
	id = soh.11695
	desc = EVTDESC_SOH_11695
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11695
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11695
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11695
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_humiliating_potion_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_humiliating_potion_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = -1
				}
			}
			
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_humiliating_potion_quality
					value = 1
				}
			}
			
			event_target:making_request = {
				character_event = { id = soh.11696 } # Requester gets potion
			}
		}
	}
}

# Potion delivered
character_event = {
	id = soh.11696
	desc = EVTDESC_SOH_11696
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = humiliating_potion_is_
		FROM = {
			trigger_switch = {
				on_trigger = has_character_flag
				
				created_humiliating_potion_is_humiliating = { ROOT = { set_character_flag = humiliating_potion_is_helpful } }
				created_humiliating_potion_is_placebo = { ROOT = { set_character_flag = humiliating_potion_is_placebo } }
				created_humiliating_potion_is_harmful = { ROOT = { set_character_flag = humiliating_potion_is_harmful } }
				created_humiliating_potion_is_sneaky_harmful = { ROOT = { set_character_flag = humiliating_potion_is_sneaky_harmful } }
			}
			save_event_target_as = target_alchemist
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11696 # Now to deliver it to the target...
		
		hidden_tooltip = {
			set_variable = {
				which = humiliating_potion_to_deliver
				value = 0
			}
			
			while = {
				limit = {
					FROM = {
						NOT = {
							is_variable_equal = {
								which = alchemist_humiliating_potion_quality
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						FROM = {
							check_variable = {
								which = alchemist_humiliating_potion_quality
								value > 0
							}
						}
					}
					
					FROM = {
						change_variable = {
							which = alchemist_humiliating_potion_quality
							value = -0.05
						}
					}
					
					change_variable = {
						which = humiliating_potion_to_deliver
						value = 0.05
					}
				}
				
				else = {
					FROM = {
						change_variable = {
							which = alchemist_humiliating_potion_quality
							value = 0.05
						}
					}
					
					change_variable = {
						which = humiliating_potion_to_deliver
						value = -0.05
					}
				}
			}
			
			copy_humiliating_potion_flags_effect = yes
		}
		
		character_event = { id = soh.11700 days = 5 random = 10 } # Determine if the delivery is successful
	}
	
	option = {
		name = EVTOPTB_SOH_11696 # Actually, let's not...
		
		FROM = {
			character_event = { id = soh.11697 } # Inform FROM
		}
		
		ai_chance = {
			factor = 0
		}
	}
}

# Requester had second thoughts
character_event = {
	id = soh.11697
	desc = EVTDESC_SOH_11697
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11697 # Oh, well...
	}
}

# Court Alchemist informed target - target
character_event = {
	id = soh.11698
	desc = EVTDESC_SOH_11698
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11698 # That snake!
		
		opinion = {
			who = FROM
			modifier = opinion_told_of_potion_plot
		}
		
		opinion = {
			who = event_target:making_request
			modifier = opinion_attempted_potion_plot
		}
		
		event_target:making_request = {
			character_event = { id = soh.11699 } # Inform requester
		}
	}
}

# Court Alchemist informed target - requester
character_event = {
	id = soh.11699
	desc = EVTDESC_SOH_11699
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11699 # I should never have trusted FROMFROM!
		
		opinion = {
			who = event_target:target_alchemist
			modifier = opinion_untrustworthy_alchemist
		}
	}
}

# Determine if the delivery is successful
character_event = {
	id = soh.11700
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		event_target:bad_potion_target = {
			is_alive = yes
			prisoner = no
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				trigger = {
					event_target:bad_potion_target = {
						OR = {
							trait = paranoid
							intrigue >= 10
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value < -5
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value < -10
					}
				}
				
				mult_modifier = {
					factor = 10
					event_target:bad_potion_target = {
						trait = paranoid
					}
				}
				
				character_event = { id = soh.11701 } # Failed delivery - got caught
			}
			
			100 = {
				character_event = { id = soh.11704 } # Failed delivery - did not get caught
			}
			50 = {
				trigger = {
					intrigue >= 10
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= -5
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= 0
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= 5
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= 10
					}
				}
				
				mult_modifier = {
					factor = 0.1
					event_target:bad_potion_target = {
						trait = paranoid
					}
				}
				
				character_event = { id = soh.11706 } # Successfully delivery
			}
		}
	}
}

# Failed delivery, got caught
character_event = {
	id = soh.11701
	desc = EVTDESC_SOH_11701
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11701 # Not as planned!
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11702 } # Inform the target
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11703 } # Inform the alchemist
		}
	}
}

# Inform target
character_event = {
	id = soh.11702
	desc = EVTDESC_SOH_11702
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11702 # I saw that!
		
		opinion = {
			who = FROM
			modifier = opinion_attempted_potion_plot
		}
	}
	
	option = {
		trigger = {
			is_landed = yes
		}
		
		name = EVTOPTB_SOH_11702 # Guards! Seize them!
		
		opinion = {
			who = FROM
			modifier = opinion_attempted_potion_plot
		}
		
		FROM = {
			imprison = ROOT
		}
	}
}

# Inform alchemist
character_event = {
	id = soh.11703
	desc = EVTDESC_SOH_11703
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11703 # At least my involvement is unknown...
	}
}

# Failed delivery, did not get caught
character_event = {
	id = soh.11704
	desc = EVTDESC_SOH_11704
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11704 # Could have been worse...
		
		event_target:target_alchemist = {
			character_event = { id = soh.11705 } # Inform the alchemist
		}
	}
}

# Inform alchemist
character_event = {
	id = soh.11705
	desc = EVTDESC_SOH_11705
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11705 # Unfortunate!
	}
}

# Successfully delivered the potion
character_event = {
	id = soh.11706
	desc = EVTDESC_SOH_11706
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		event_target:bad_potion_target = {
			set_variable = {
				which = consumed_humiliating_potion_quality
				value = 0
			}
			
			while = {
				limit = {
					ROOT = {
						NOT = {
							is_variable_equal = {
								which = humiliating_potion_to_deliver
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						ROOT = {
							check_variable = {
								which = humiliating_potion_to_deliver
								value > 0
							}
						}
					}
					
					ROOT = {
						change_variable = {
							which = humiliating_potion_to_deliver
							value = -0.05
						}
					}
					
					change_variable = {
						which = consumed_humiliating_potion_quality
						value = 0.05
					}
				}
				
				else = {
					ROOT = {
						change_variable = {
							which = humiliating_potion_to_deliver
							value = 0.05
						}
					}
					
					change_variable = {
						which = consumed_humiliating_potion_quality
						value = -0.05
					}
				}
			}
			
			copy_humiliating_potion_flags_target_effect = yes
			
			character_event = { id = soh.11708 days = 5 }
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11706 # Just as planned!
		
		event_target:target_alchemist = {
			character_event = { id = soh.11707 } # Inform the alchemist
		}
	}
}

# Inform alchemist
character_event = {
	id = soh.11707
	desc = EVTDESC_SOH_11707
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11707 # Now we wait...
	}
}

# Determine the outcome
character_event = {
	id = soh.11708
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			100 = {
				trigger = {
					check_variable = {
						which = consumed_humiliating_potion_quality
						value >= 2
					}
				}
				
				mult_modifier = {
					factor = 5
					has_character_flag = consumed_humiliating_potion_is_placebo
				}
				
				mult_modifier = {
					factor = 2
					has_character_flag = consumed_humiliating_potion_is_sneaky_harmful
				}
				
				mult_modifier = {
					factor = 2
					check_variable = {
						which = consumed_humiliating_potion_quality
						value >= 4
					}
				}
				
				FROM = {
					character_event = { id = soh.11709 } # Potion does not seem to have done anything
				}
			}
			
			100 = {
				trigger = {
					check_variable = {
						which = consumed_humiliating_potion_quality
						value < 2
					}
				}
				
				mult_modifier = {
					factor = 0.5
					has_character_flag = consumed_humiliating_potion_is_sneaky_harmful
				}
				
				character_event = { id = soh.11711 } # Smelling weirdly
			}
			
			100 = {
				trigger = {
					has_dlc = "Reapers"
					check_variable = {
						which = consumed_humiliating_potion_quality
						value < 1
					}
					OR = {
						has_symptom_trigger = no
						has_character_flag = disease_not_serious
					}
				}
				
				mult_modifier = {
					factor = 0.5
					has_character_flag = consumed_humiliating_potion_is_sneaky_harmful
				}
				
				character_event = { id = soh.11714 } # Vomiting
			}
			
			100 = {
				trigger = {
					has_dlc = "Reapers"
					check_variable = {
						which = consumed_humiliating_potion_quality
						value < 1
					}
					OR = {
						has_symptom_trigger = no
						has_character_flag = disease_not_serious
					}
				}
				
				mult_modifier = {
					factor = 0.5
					has_character_flag = consumed_humiliating_potion_is_sneaky_harmful
				}
				
				character_event = { id = soh.11717 } # Diarrhea
			}
			
			100 = {
				trigger = {
					check_variable = {
						which = consumed_humiliating_potion_quality
						value < 1
					}
				}
				
				mult_modifier = {
					factor = 0.5
					has_character_flag = consumed_humiliating_potion_is_sneaky_harmful
				}
				
				character_event = { id = soh.11720 } # Hallucinations
			}
			
			100 = {
				trigger = {
					check_variable = {
						which = consumed_humiliating_potion_quality
						value < 1
					}
				}
				
				mult_modifier = {
					factor = 0.5
					has_character_flag = consumed_humiliating_potion_is_sneaky_harmful
				}
				
				mult_modifier = {
					factor = 2
					has_character_flag = consumed_humiliating_potion_is_harmful
				}
				
				character_event = { id = soh.11723 } # Feeling a bit worse
			}
			
			100 = {
				trigger = {
					check_variable = {
						which = consumed_humiliating_potion_quality
						value <= -1
					}
				}
				
				mult_modifier = {
					factor = 0.5
					has_character_flag = consumed_humiliating_potion_is_sneaky_harmful
				}
				
				mult_modifier = {
					factor = 2
					has_character_flag = consumed_humiliating_potion_is_harmful
				}
				
				mult_modifier = {
					factor = 2
					check_variable = {
						which = consumed_humiliating_potion_quality
						value <= -2
					}
				}
				
				character_event = { id = soh.11726 } # Feeling a lot worse
			}
		}
		
		side_effect_humiliating_potion_effect = yes
	}
}

# Potion does not seem to be doing anything - person that delivered the potion
character_event = {
	id = soh.11709
	desc = EVTDESC_SOH_11709
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11709 # That did nothing...
		
		event_target:target_alchemist = {
			character_event = { id = soh.11710 } # Inform alchemist
		}
	}
}

# Potion does not seem to be doing anything - alchemist
character_event = {
	id = soh.11710
	desc = EVTDESC_SOH_11710
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11710 # That did nothing...
	}
}

# Target is smelling weird
character_event = {
	id = soh.11711
	desc = EVTDESC_SOH_11711
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11711 # Is that me?
		
		add_trait_partially_uncouth_effect = yes
		
		add_character_modifier = {
			name = smelly_courtier
			years = 2
		}
		
		event_target:making_request = {
			character_event = { id = soh.11712 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11713 } # Inform alchemist
		}
	}
}

# Target is smelling weird - person that delivered the potion
character_event = {
	id = soh.11712
	desc = EVTDESC_SOH_11712
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11712 # Works for me!
	}
}

# Target is smelling weird - alchemist
character_event = {
	id = soh.11713
	desc = EVTDESC_SOH_11713
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11713 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 1
			}
		}
	}
}

# Target is vomiting
character_event = {
	id = soh.11714
	desc = EVTDESC_SOH_11714
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11714 # Out of my way!
		
		set_character_flag = disease_not_serious
		
		add_trait_vomiting_effect = yes
		
		character_event = {
			id = RIP.11005 # Remove vomiting
			days = 10
			random = 30
		}
		
		event_target:making_request = {
			character_event = { id = soh.11715 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11716 } # Inform alchemist
		}
	}
}

# Target is vomiting - person that delivered the potion
character_event = {
	id = soh.11715
	desc = EVTDESC_SOH_11715
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11715 # Works for me!
	}
}

# Target is vomiting - alchemist
character_event = {
	id = soh.11716
	desc = EVTDESC_SOH_11716
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11716 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 1
			}
		}
	}
}

# Target has diarrhea
character_event = {
	id = soh.11717
	desc = EVTDESC_SOH_11717
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11717 # I really need to go!
		
		set_character_flag = disease_not_serious
		
		add_trait_diarrhea_effect = yes
		
		character_event = {
			id = RIP.11004 # Remove diarrhea
			days = 10
			random = 30
		}
		
		event_target:making_request = {
			character_event = { id = soh.11718 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11719 } # Inform alchemist
		}
	}
}

# Target has diarrhea - person that delivered the potion
character_event = {
	id = soh.11718
	desc = EVTDESC_SOH_11718
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11718 # Works for me!
	}
}

# Target has diarrhea - alchemist
character_event = {
	id = soh.11719
	desc = EVTDESC_SOH_11719
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11719 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 1
			}
		}
	}
}

# Target is hallucinating
character_event = {
	id = soh.11720
	desc = EVTDESC_SOH_11720
	picture = GFX_evt_stressed_ruler
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11720 # What's that?
		
		random = {
			chance = 1
			add_trait_partially_paranoid_effect = yes
		}
		
		add_character_modifier = {
			name = alchemist_hallucinations
			years = 2
		}
		
		event_target:making_request = {
			character_event = { id = soh.11721 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11722 } # Inform alchemist
		}
	}
}

# Target is hallucinating - person that delivered the potion
character_event = {
	id = soh.11721
	desc = EVTDESC_SOH_11721
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11721 # Works for me!
	}
}

# Target is hallucinating - alchemist
character_event = {
	id = soh.11722
	desc = EVTDESC_SOH_11722
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11722 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 1
			}
		}
	}
}

# Target is feeling a bit unwell
character_event = {
	id = soh.11723
	desc = EVTDESC_SOH_11723
	picture = GFX_evt_stressed_ruler
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11723 # What's this?
		
		add_character_modifier = {
			name = alchemist_bad_potion
			months = 12
			hidden = yes
		}
		
		event_target:making_request = {
			character_event = { id = soh.11724 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11725 } # Inform alchemist
		}
	}
}

# Target is feeling a bit unwell - person that delivered the potion
character_event = {
	id = soh.11724
	desc = EVTDESC_SOH_11724
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11724 # Not quite what I expected...
	}
}

# Target is feeling a bit unwell - alchemist
character_event = {
	id = soh.11725
	desc = EVTDESC_SOH_11725
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11725 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 2
			}
		}
	}
}

# Target is feeling very poorly
character_event = {
	id = soh.11726
	desc = EVTDESC_SOH_11726
	picture = GFX_evt_stressed_ruler
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11726 # What's this?
		
		add_character_modifier = {
			name = alchemist_terrible_potion
			months = 12
			hidden = yes
		}
		
		event_target:making_request = {
			character_event = { id = soh.11727 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11728 } # Inform alchemist
		}
	}
}

# Target is feeling very poorly - person that delivered the potion
character_event = {
	id = soh.11727
	desc = EVTDESC_SOH_11727
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11727 # That was not what I intended!
	}
}

# Target is feeling very poorly - alchemist
character_event = {
	id = soh.11728
	desc = EVTDESC_SOH_11728
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11728 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 3
			}
		}
	}
}



### Request Poison

# Possible opportunity
character_event = {
	id = soh.11729
	hide_window = yes
	
	is_triggered_only = yes # on_five_year_pulse -> random_events
	
	has_dlc = "Mystics"
	only_rulers = yes
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		top_liege = {
			any_realm_character = {
				is_inaccessible_or_incapable_trigger = yes
				OR = {
					is_rival = ROOT
					reverse_opinion = {
						who = ROOT
						value < 0
					}
				}
			}
		}
		
		OR = {
			any_courtier_or_vassal = {
				has_minor_title = title_court_alchemist
				society_member_of = the_alchemists
				is_inaccessible_or_incapable_trigger = no
				OR = {
					NOT = {
						is_rival = ROOT
					}
					ROOT = {
						trait = trusting
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
	}
	
	immediate = {
		top_liege = {
			random_realm_character = {
				limit = {
					is_adult = yes
					is_inaccessible_or_incapable_trigger = no
					OR = {
						is_rival = ROOT
						reverse_opinion = {
							who = ROOT
							value < 0
						}
					}
				}
				
				preferred_limit = {
					employer = {
						character = ROOT
					}
				}
				
				preferred_limit = {
					is_vassal_or_below = ROOT
				}
				
				save_event_target_as = bad_potion_target
			}
		}
		
		character_event = { id = soh.11731 } # Go for it?
	}
}

# Courtier might ask
character_event = {
	id = soh.11730
	hide_window = yes
	
	is_triggered_only = yes # on_decade_pulse -> random_events
	
	has_dlc = "Mystics"
	min_age = 16
	prisoner = no
	
	trigger = {
		ai = yes
		is_playable = no
		has_chinese_government_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		
		employer = {
			top_liege = {
				any_realm_character = {
					is_inaccessible_or_incapable_trigger = yes
					OR = {
						is_rival = ROOT
						reverse_opinion = {
							who = ROOT
							value < 0
						}
					}
				}
			}
		}
		
		OR = {
			employer = {
				any_courtier_or_vassal = {
					has_minor_title = title_court_alchemist
					society_member_of = the_alchemists
					is_inaccessible_or_incapable_trigger = no
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
					OR = {
						NOT = {
							is_rival = ROOT
						}
						ROOT = {
							trait = trusting
						}
					}
				}
			}
			
			any_friend = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			any_lover = {
				society_member_of = the_alchemists
				same_realm = ROOT
				is_inaccessible_or_incapable_trigger = no
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
		}
	}
	
	immediate = {
		employer = {
			top_liege = {
				random_realm_character = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							is_rival = ROOT
							reverse_opinion = {
								who = ROOT
								value < 0
							}
						}
					}
					
					preferred_limit = {
						employer = {
							any_courtier = {
								character = ROOT
							}
						}
					}
					
					save_event_target_as = bad_potion_target
				}
			}
		}
		
		character_event = { id = soh.11731 } # Go for it?
	}
}

# Who do you want to ask?
character_event = {
	id = soh.11731
	desc = EVTDESC_SOH_11731
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		employer = {
			any_courtier_or_vassal = {
				limit = {
					has_minor_title = title_court_alchemist
					is_inaccessible_or_incapable_trigger = no
					NOR = {
						character = ROOT
						character = event_target:bad_potion_target
					}
					OR = {
						any_artifact = {
							count >= 2
							has_artifact_flag = ingredient
						}
						
						ROOT = {
							OR = {
								wealth >= 0 # It's fine for the AI to go into debt for this...
								any_artifact = {
									count >= 2
									has_artifact_flag = ingredient
								}
							}
						}
					}
				}
				
				save_event_target_as = alchemist_option_1
			}
		}
		
		random_friend = {
			limit = {
				society_member_of = the_alchemists
				is_inaccessible_or_incapable_trigger = no
				same_realm = ROOT
				NOR = {
					character = ROOT
					character = event_target:bad_potion_target
					character = event_target:alchemist_option_1
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			save_event_target_as = alchemist_option_2
		}
		
		random_lover = {
			limit = {
				society_member_of = the_alchemists
				is_inaccessible_or_incapable_trigger = no
				same_realm = ROOT
				NOR = {
					character = ROOT
					character = event_target:bad_potion_target
					character = event_target:alchemist_option_1
					character = event_target:alchemist_option_2
				}
				OR = {
					any_artifact = {
						count >= 2
						has_artifact_flag = ingredient
					}
					
					ROOT = {
						OR = {
							wealth >= 0 # It's fine for the AI to go into debt for this...
							any_artifact = {
								count >= 2
								has_artifact_flag = ingredient
							}
						}
					}
				}
			}
			
			save_event_target_as = alchemist_option_3
		}
	}
	
	option = {
		trigger = {
			event_target:alchemist_option_1 = {
				always = yes
			}
		}
		
		name = EVTOPTA_SOH_11731 # My Court Alchemist!
		
		event_target:alchemist_option_1 = {
			save_event_target_as = target_alchemist
		}
		
		character_event = { id = soh.11732 } # Decide on how to phrase the request
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:alchemist_option_1
					NOT = {
						trait = trusting
					}
				}
				NOR = {
					trait = kind
					trait = honest
					trait = just
				}
			}
			
			mult_modifier = {
				factor = 0.1
				event_target:alchemist_option_1 = {
					OR = {
						is_friend = event_target:bad_potion_target
						is_lover = event_target:bad_potion_target
						AND = {
							is_close_relative = event_target:bad_potion_target
							NOT = {
								is_rival = event_target:bad_potion_target
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:alchemist_option_2 = {
				always = yes
			}
		}
		
		name = EVTOPTB_SOH_11731 # My friend!
		
		event_target:alchemist_option_2 = {
			save_event_target_as = target_alchemist
		}
		
		character_event = { id = soh.11732 } # Decide on how to phrase the request
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					trait = kind
					trait = honest
					trait = just
				}
			}
			
			mult_modifier = {
				factor = 0.1
				event_target:alchemist_option_2 = {
					OR = {
						is_friend = event_target:bad_potion_target
						is_lover = event_target:bad_potion_target
						AND = {
							is_close_relative = event_target:bad_potion_target
							NOT = {
								is_rival = event_target:bad_potion_target
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:alchemist_option_3 = {
				always = yes
			}
		}
		
		name = EVTOPTC_SOH_11731 # My lover!
		
		event_target:alchemist_option_3 = {
			save_event_target_as = target_alchemist
		}
		
		character_event = { id = soh.11732 } # Decide on how to phrase the request
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					trait = kind
					trait = honest
					trait = just
				}
			}
			
			mult_modifier = {
				factor = 0.1
				event_target:alchemist_option_3 = {
					OR = {
						is_friend = event_target:bad_potion_target
						is_lover = event_target:bad_potion_target
						AND = {
							is_close_relative = event_target:bad_potion_target
							NOT = {
								is_rival = event_target:bad_potion_target
							}
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11731 # This is a bad idea...
		
		piety = 25
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					trait = cruel
					trait = arbitrary
					trait = deceitful
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
		}
	}
}

# Are you offering specific ingredients, offering to pay, or just asking?
character_event = {
	id = soh.11732
	desc = EVTDESC_SOH_11732
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
				}
				
				set_artifact_flag = ingredient_for_potion_1
			}
			
			random_artifact = {
				limit = {
					has_artifact_flag = ingredient
					NOT = {
						has_artifact_flag = ingredient_for_potion_1
					}
				}
				
				set_artifact_flag = ingredient_for_potion_2
			}
		}
		
		save_event_target_as = making_request
	}
	
	option = {
		trigger = {
			any_artifact = {
				has_artifact_flag = ingredient_for_potion
			}
		}
		
		name = EVTOPTA_SOH_11732 # I will provide the ingredients!
		
		custom_tooltip = {
			text = will_transfer_selected_artifact_1_target_alchemist
		}
		custom_tooltip = {
			text = will_transfer_selected_artifact_2_target_alchemist
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11733 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						OR = {
							society_member_of = the_alchemists
							society_member_of = hermetics
						}
						NOR = {
							is_friend = event_target:target_alchemist
							is_lover = event_target:target_alchemist
						}
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				AND = {
					ai = yes
					wealth >= 0
				}
				wealth >= 25
			}
		}
		
		name = EVTOPTB_SOH_11732 # I will pay for the ingredients!
		
		custom_tooltip = {
			text = will_pay_25_gold_if_accepted_target_alchemist
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11736 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < 0
				}
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:target_alchemist
					value < -25
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:target_alchemist = {
				any_artifact = {
					count >= 2
					has_artifact_flag = ingredient
				}
			}
		}
		
		name = EVTOPTC_SOH_11732 # Surely I don't have to provide anything!
		
		event_target:target_alchemist = {
			character_event = { id = soh.11739 } # Request made
		}
		
		ai_chance = {
			factor = 100
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = event_target:target_alchemist
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = event_target:target_alchemist
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_11732 # Actually, let's not...
		
		hidden_tooltip = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				clr_artifact_flag = ingredient_for_potion_1
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				clr_artifact_flag = ingredient_for_potion_2
			}
			
			event_target:target_alchemist = {
				remove_opinion = {
					who = ROOT
					modifier = opinion_requested_potion
				}
			}
		}
		
		ai_chance = { factor = 0 }
	}
}

# Got request - getting specific ingredients
character_event = {
	id = soh.11733
	desc = EVTDESC_SOH_11733
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11733 # Very well...
		
		FROM = {
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_1
				}
				
				clr_artifact_flag = ingredient_for_potion_1
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			any_artifact = {
				limit = {
					has_artifact_flag = ingredient_for_potion_2
				}
				
				clr_artifact_flag = ingredient_for_potion_2
				
				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
			
			character_event = { id = soh.11734 days = 1 } # Inform FROM
		}
		
		character_event = { id = soh.11754 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
				NOR = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11733 # Not interested!
		
		FROM = {
			character_event = { id = soh.11735 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:bad_potion_target
					NOT = {
						is_rival = FROM
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_11733 # I will tell the target
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11759 } # Inform the target
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					is_rival = event_target:bad_potion_target
				}
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:bad_potion_target
					value < -75
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11734
	desc = EVTDESC_SOH_11734
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11734 # Great!
	}
}

# Request refused
character_event = {
	id = soh.11735
	desc = EVTDESC_SOH_11735
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11735 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_helping_with_potion_plot
		}
	}
}

# Got request - paying for random ingredients
character_event = {
	id = soh.11736
	desc = EVTDESC_SOH_11736
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11736 # Very well...
		
		hermetic_add_random_ingredient_effect = yes
		hermetic_add_random_ingredient_effect = yes
		
		FROM = {
			character_event = { id = soh.11737 days = 1 } # Inform FROM
		}
		
		character_event = { id = soh.11754 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
				NOR = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11736 # Not interested!
		
		FROM = {
			character_event = { id = soh.11738 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:bad_potion_target
					NOT = {
						is_rival = FROM
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_11736 # I will tell the target
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11759 } # Inform the target
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					is_rival = event_target:bad_potion_target
				}
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:bad_potion_target
					value < -75
				}
			}
		}
	}
}

# Request accepted
character_event = {
	id = soh.11737
	desc = EVTDESC_SOH_11737
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11737 # Great!
		
		wealth = -25
	}
}

# Request refused
character_event = {
	id = soh.11738
	desc = EVTDESC_SOH_11738
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11738 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_helping_with_potion_plot
		}
	}
}

# Got request - expected to provide the ingredients
character_event = {
	id = soh.11739
	desc = EVTDESC_SOH_11739
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = bad_potion_option_
		
		# Get one option
		random_list = {
			1000 = {
				trigger = {
					has_dlc = "Conclave"
					owes_favor_to = FROM
				}
				
				set_character_flag = bad_potion_option_repay_favor
			}
			
			100 = {
				trigger = {
					has_dlc = "Conclave"
					NOR = {
						owes_favor_to = FROM
						holds_favor_on = FROM
					}
				}
				
				mult_modifier = {
					factor = 0.1
					FROM = {
						NOR = {
							higher_real_tier_than = ROOT
							higher_real_tier_than = duke
							any_close_relative = {
								NOT = {
									character = ROOT
								}
								any_vassal = {
									character = ROOT
								}
							}
							AND = {
								is_voter = yes
								liege = {
									OR = {
										any_voter = {
											character = ROOT
										}
										any_vassal = {
											character = ROOT
										}
									}
								}
							}
						}
					}
				}
				
				set_character_flag = bad_potion_option_favor
			}
			
			10 = {
				set_character_flag = bad_potion_option_money
			}
			
			100 = {
				trigger = {
					has_dlc = "Jade Dragon"
					FROM = {
						is_chinese_emperor_trigger = yes
					}
				}
				
				set_character_flag = bad_potion_option_grace
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11739 # Very well...
		
		FROM = {
			character_event = { id = soh.11741 days = 1 } # Inform FROM
		}
		
		character_event = { id = soh.11754 days = 1 }
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
				NOR = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = slothful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = ambitious
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_favor
		}
		
		name = EVTOPTB_SOH_11739 # If we consider it a Favor...
		
		FROM = {
			character_event = { id = soh.11742 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
				NOR = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_repay_favor
		}
		
		name = EVTOPTC_SOH_11739 # If we consider it a Favor repaid...
		
		FROM = {
			character_event = { id = soh.11745 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
				NOR = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = paranoid
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_money
		}
		
		name = EVTOPTD_SOH_11739 # If you pay me...
		
		FROM = {
			character_event = { id = soh.11748 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
				NOR = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = greedy
			}
			
			mult_modifier = {
				factor = 0.1
				trait = charitable
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		trigger = {
			has_character_flag = bad_potion_option_grace
		}
		
		name = EVTOPTE_SOH_11739 # For some Grace...
		
		FROM = {
			character_event = { id = soh.11751 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
				NOR = {
					trait = kind
					trait = just
					trait = honest
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.1
				trait = trusting
			}
			
			mult_modifier = {
				factor = 0.1
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTF_SOH_11739 # Not interested!
		
		FROM = {
			character_event = { id = soh.11740 days = 1 } # Inform FROM
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NAND = {
					is_rival = event_target:bad_potion_target
					NOT = {
						is_rival = FROM
					}
				}
			}
			
			mult_modifier = {
				factor = 0.1
				trait = cruel
			}
			
			mult_modifier = {
				factor = 0.1
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 0.1
				trait = arbitrary
			}
		}
	}
	
	option = {
		name = EVTOPTG_SOH_11739 # I will tell the target
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11759 } # Inform the target
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOT = {
					is_rival = event_target:bad_potion_target
				}
			}
			
			mult_modifier = {
				factor = 10
				is_rival = FROM
			}
			
			mult_modifier = {
				factor = 0.1
				opinion = {
					who = event_target:bad_potion_target
					value < -75
				}
			}
		}
	}
}

# Request refused - general
character_event = {
	id = soh.11740
	desc = EVTDESC_SOH_11740
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11740 # I see...
		
		opinion = {
			who = FROM
			modifier = opinion_not_helping_with_potion_plot
		}
	}
}

# Request accepted - asking for nothing
character_event = {
	id = soh.11741
	desc = EVTDESC_SOH_11741
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11741 # Great!
	}
}

# Alchemist asks for Favor
character_event = {
	id = soh.11742
	desc = EVTDESC_SOH_11742
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11742 # Very well...
		
		FROM = {
			add_favor = ROOT
			
			character_event = { id = soh.11743 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11742 # I think not!
		
		FROM = {
			character_event = { id = soh.11744 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Favor
character_event = {
	id = soh.11743
	desc = EVTDESC_SOH_11743
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11743 # Excellent!
		
		character_event = { id = soh.11754 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11744
	desc = EVTDESC_SOH_11744
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11744 # I see...
	}
}

# Alchemist asks for it to count as a Favor repaid
character_event = {
	id = soh.11745
	desc = EVTDESC_SOH_11745
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11745 # Very well...
		
		remove_favor = FROM
		
		FROM = {
			character_event = { id = soh.11746 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = ambitious
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = content
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11745 # I think not!
		
		FROM = {
			character_event = { id = soh.11747 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Favor considered repaid
character_event = {
	id = soh.11746
	desc = EVTDESC_SOH_11746
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11746 # Excellent!
		
		character_event = { id = soh.11754 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11747
	desc = EVTDESC_SOH_11747
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11747 # I see...
	}
}

# Alchemist asks for money
character_event = {
	id = soh.11748
	desc = EVTDESC_SOH_11748
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11748 # Very well...
		
		if = {
			limit = {
				real_tier = emperor
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.2
				min = 20
				max = 100
			}
		}
		
		else_if = {
			limit = {
				real_tier = king
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.15
				min = 15
				max = 75
			}
		}
		
		else_if = {
			limit = {
				real_tier = duke
			}
			
			transfer_scaled_wealth = {
				to = FROM
				value = 0.1
				min = 10
				max = 50
			}
		}
		
		else = {
			transfer_scaled_wealth = {
				to = FROM
				value = 0.05
				min = 5
				max = 25
			}
		}
		
		FROM = {
			character_event = { id = soh.11749 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = greedy
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = charitable
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11748 # I think not!
		
		FROM = {
			character_event = { id = soh.11750 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got money
character_event = {
	id = soh.11749
	desc = EVTDESC_SOH_11749
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11749 # Excellent!
		
		character_event = { id = soh.11754 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11750
	desc = EVTDESC_SOH_11750
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11750 # I see...
	}
}

# Alchemist asks for Grace
character_event = {
	id = soh.11751
	desc = EVTDESC_SOH_11751
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11751 # Very well...
		
		FROM = {
			add_grace_medium_effect = yes
			
			character_event = { id = soh.11752 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					AND = {
						is_rival = FROM
						NOT = {
							trait = trusting
						}
					}
					trait = paranoid
				}
			}
			
			mult_modifier = {
				factor = 10
				trait = trusting
			}
			
			mult_modifier = {
				factor = 10
				is_friend = FROM
			}
			
			mult_modifier = {
				factor = 10
				is_lover = FROM
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_11751 # I think not!
		
		FROM = {
			character_event = { id = soh.11753 } # Inform the alchemist
		}
		
		ai_chance = {
			factor = 100
		}
	}
}

# Got Grace
character_event = {
	id = soh.11752
	desc = EVTDESC_SOH_11752
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11752 # Excellent!
		
		character_event = { id = soh.11754 days = 1 }
	}
}

# Request refused
character_event = {
	id = soh.11753
	desc = EVTDESC_SOH_11753
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11753 # I see...
	}
}

# Agreement reached - what will you actually brew?
character_event = {
	id = soh.11754
	desc = EVTDESC_SOH_11754
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = created_poison_
	}
	
	option = {
		name = EVTOPTA_SOH_11754 # I will brew something harmful!
		
		set_character_flag = created_poison_is_harmful
		
		character_event = { id = soh.11755 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
					AND = {
						is_close_relative = event_target:bad_potion_target
						NOT = {
							is_rival = event_target:bad_potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:bad_potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
			
			mult_modifier = {
				factor = 2
				NOR = {
					is_friend = event_target:making_request
					is_lover = event_target:making_request
				}
			}
			
			mult_modifier = {
				factor = 5
				is_rival = event_target:making_request
			}
		}
	}
	
	option = {
		trigger = {
			check_variable = {
				which = alchemist_poison_knowledge
				value >= 50
			}
		}
		
		name = EVTOPTB_SOH_11754 # I will brew something sneaky!
		
		set_character_flag = created_poison_is_sneaky_harmful
		
		character_event = { id = soh.11756 days = 1 } # Decide on ingredients
		
		ai_chance = {
			factor = 100
			
			trigger = {
				NOR = {
					is_friend = event_target:bad_potion_target
					is_lover = event_target:bad_potion_target
					AND = {
						is_close_relative = event_target:bad_potion_target
						NOT = {
							is_rival = event_target:bad_potion_target
						}
					}
				}
				OR = {
					is_rival = event_target:bad_potion_target
					opinion = {
						who = event_target:bad_potion_target
						value < -50
					}
				}
			}
			
			mult_modifier = {
				factor = 2
				trait = deceitful
			}
			
			mult_modifier = {
				factor = 2
				trait = arbitrary
			}
			
			mult_modifier = {
				factor = 10
				is_rival = event_target:bad_potion_target
			}
			
			mult_modifier = {
				factor = 2
				opinion = {
					who = event_target:bad_potion_target
					value < -25
				}
			}
			
			mult_modifier = {
				factor = 5
				opinion = {
					who = event_target:bad_potion_target
					value < -50
				}
			}
			
			mult_modifier = {
				factor = 2
				NOR = {
					is_friend = event_target:making_request
					is_lover = event_target:making_request
				}
			}
			
			mult_modifier = {
				factor = 5
				is_rival = event_target:making_request
			}
		}
	}
}

# Brewing harmful potion - which ingredients to use?
character_event = {
	id = soh.11755
	desc = EVTDESC_SOH_11755
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11755
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_poison_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11755
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_poison_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11755
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_poison_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_poison_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -1
				}
			}
			
			event_target:making_request = {
				character_event = { id = soh.11757 } # Requester gets potion
			}
		}
	}
}

# Brewing sneaky harmful potion - which ingredients to use?
character_event = {
	id = soh.11756
	desc = EVTDESC_SOH_11756
	picture = GFX_evt_experiment
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		select_random_hermetic_ingredient_prefer_healing_effect = yes
		select_random_hermetic_ingredient_prefer_harmful_effect = yes
	}

	option = { # I will use ingredient 1
		name = EVTOPTA_SOH_11756
		
		calculate_health_level_of_ingredient_1_effect = yes
		save_ingredient_1_flag_poison_effect = yes
		destroy_selected_ingredient_1_effect = yes
	}

	option = { # I will use ingredient 2
		trigger = {
			has_selected_ingredient_2_trigger = yes
		}
		
		name = EVTOPTB_SOH_11756
		
		calculate_health_level_of_ingredient_2_effect = yes
		save_ingredient_2_flag_poison_effect = yes
		destroy_selected_ingredient_2_effect = yes
	}

	option = { # I will use both!
		trigger = {
			has_selected_ingredient_2_trigger = yes
			selected_ingredient_1_and_2_are_same = no
		}
		
		name = EVTOPTC_SOH_11756
		
		calculate_health_level_of_ingredient_1_and_2_effect = yes
		save_ingredient_1_and_2_flag_poison_effect = yes
		destroy_selected_ingredient_1_and_2_effect = yes
	}
	
	after = {
		hidden_tooltip = {
			set_variable = {
				which = alchemist_poison_quality
				which = local_current_potion_quality
			}
			
			# Alchemist's knowledge matters a bit
			if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -4
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 75
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -3
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_poison_knowledge
						value >= 25
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = -1
				}
			}
			
			if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 100
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = 2
				}
			}
			
			else_if = {
				limit = {
					check_variable = {
						which = alchemist_healing_knowledge
						value >= 50
					}
				}
				
				change_variable = {
					which = alchemist_poison_quality
					value = 1
				}
			}
			
			event_target:making_request = {
				character_event = { id = soh.11757 } # Requester gets potion
			}
		}
	}
}

# Potion delivered
character_event = {
	id = soh.11757
	desc = EVTDESC_SOH_11757
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		clear_flags_with_prefix = poison_is_
		FROM = {
			trigger_switch = {
				on_trigger = has_character_flag
				
				created_poison_is_harmful = { ROOT = { set_character_flag = poison_is_harmful } }
				created_poison_is_sneaky_harmful = { ROOT = { set_character_flag = poison_is_sneaky_harmful } }
			}
			save_event_target_as = target_alchemist
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11757 # Now to deliver it to the target...
		
		hidden_tooltip = {
			set_variable = {
				which = poison_to_deliver
				value = 0
			}
			
			while = {
				limit = {
					FROM = {
						NOT = {
							is_variable_equal = {
								which = alchemist_poison_quality
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						FROM = {
							check_variable = {
								which = alchemist_poison_quality
								value > 0
							}
						}
					}
					
					FROM = {
						change_variable = {
							which = alchemist_poison_quality
							value = -0.05
						}
					}
					
					change_variable = {
						which = poison_to_deliver
						value = 0.05
					}
				}
				
				else = {
					FROM = {
						change_variable = {
							which = alchemist_poison_quality
							value = 0.05
						}
					}
					
					change_variable = {
						which = poison_to_deliver
						value = -0.05
					}
				}
			}
			
			copy_poison_flags_effect = yes
		}
		
		character_event = { id = soh.11761 days = 5 random = 10 } # Determine if the delivery is successful
	}
	
	option = {
		name = EVTOPTB_SOH_11757 # Actually, let's not...
		
		FROM = {
			character_event = { id = soh.11758 } # Inform FROM
		}
		
		ai_chance = {
			factor = 0
		}
	}
}

# Requester had second thoughts
character_event = {
	id = soh.11758
	desc = EVTDESC_SOH_11758
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11758 # Oh, well...
	}
}

# Court Alchemist informed target - target
character_event = {
	id = soh.11759
	desc = EVTDESC_SOH_11759
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11759 # That snake!
		
		opinion = {
			who = FROM
			modifier = opinion_told_of_potion_plot
		}
		
		opinion = {
			who = event_target:making_request
			modifier = opinion_attempted_potion_plot
		}
		
		event_target:making_request = {
			character_event = { id = soh.11760 } # Inform requester
		}
	}
}

# Court Alchemist informed target - requester
character_event = {
	id = soh.11760
	desc = EVTDESC_SOH_11760
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11760 # I should never have trusted FROMFROM!
		
		opinion = {
			who = event_target:target_alchemist
			modifier = opinion_untrustworthy_alchemist
		}
	}
}

# Determine if the delivery is successful
character_event = {
	id = soh.11761
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		event_target:bad_potion_target = {
			is_alive = yes
			prisoner = no
		}
	}
	
	immediate = {
		random_list = {
			50 = {
				trigger = {
					event_target:bad_potion_target = {
						OR = {
							trait = paranoid
							intrigue >= 10
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value < -5
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value < -10
					}
				}
				
				mult_modifier = {
					factor = 10
					event_target:bad_potion_target = {
						trait = paranoid
					}
				}
				
				character_event = { id = soh.11762 } # Failed delivery - got caught
			}
			
			100 = {
				character_event = { id = soh.11765 } # Failed delivery - did not get caught
			}
			50 = {
				trigger = {
					intrigue >= 10
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= -5
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= 0
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= 5
					}
				}
				
				mult_modifier = {
					factor = 2
					attribute_diff = {
						attribute = intrigue
						who = event_target:bad_potion_target
						value >= 10
					}
				}
				
				mult_modifier = {
					factor = 0.1
					event_target:bad_potion_target = {
						trait = paranoid
					}
				}
				
				character_event = { id = soh.11767 } # Successfully delivery
			}
		}
	}
}

# Failed delivery, got caught
character_event = {
	id = soh.11762
	desc = EVTDESC_SOH_11762
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11762 # Not as planned!
		
		event_target:bad_potion_target = {
			character_event = { id = soh.11763 } # Inform the target
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11764 } # Inform the alchemist
		}
	}
}

# Inform target
character_event = {
	id = soh.11763
	desc = EVTDESC_SOH_11763
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11763 # I saw that!
		
		opinion = {
			who = FROM
			modifier = opinion_attempted_potion_plot
		}
	}
	
	option = {
		trigger = {
			is_landed = yes
		}
		
		name = EVTOPTB_SOH_11763 # Guards! Seize them!
		
		opinion = {
			who = FROM
			modifier = opinion_attempted_potion_plot
		}
		
		FROM = {
			imprison = ROOT
		}
	}
}

# Inform alchemist
character_event = {
	id = soh.11764
	desc = EVTDESC_SOH_11764
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11764 # At least my involvement is unknown...
	}
}

# Failed delivery, did not get caught
character_event = {
	id = soh.11765
	desc = EVTDESC_SOH_11765
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11765 # Could have been worse...
		
		event_target:target_alchemist = {
			character_event = { id = soh.11766 } # Inform the alchemist
		}
	}
}

# Inform alchemist
character_event = {
	id = soh.11766
	desc = EVTDESC_SOH_11766
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11766 # Unfortunate!
	}
}

# Successfully delivered the poison
character_event = {
	id = soh.11767
	desc = EVTDESC_SOH_11767
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		event_target:bad_potion_target = {
			set_variable = {
				which = consumed_poison_quality
				value = 0
			}
			
			while = {
				limit = {
					ROOT = {
						NOT = {
							is_variable_equal = {
								which = poison_to_deliver
								value = 0
							}
						}
					}
				}
				
				if = {
					limit = {
						ROOT = {
							check_variable = {
								which = poison_to_deliver
								value > 0
							}
						}
					}
					
					ROOT = {
						change_variable = {
							which = poison_to_deliver
							value = -0.05
						}
					}
					
					change_variable = {
						which = consumed_poison_quality
						value = 0.05
					}
				}
				
				else = {
					ROOT = {
						change_variable = {
							which = poison_to_deliver
							value = 0.05
						}
					}
					
					change_variable = {
						which = consumed_poison_quality
						value = -0.05
					}
				}
			}
			
			copy_poison_flags_target_effect = yes
			
			character_event = { id = soh.11769 days = 5 }
		}
	}
	
	option = {
		name = EVTOPTA_SOH_11767 # Just as planned!
		
		event_target:target_alchemist = {
			character_event = { id = soh.11768 } # Inform the alchemist
		}
	}
}

# Inform alchemist
character_event = {
	id = soh.11768
	desc = EVTDESC_SOH_11768
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11768 # Now we wait...
	}
}

# Determine the outcome
character_event = {
	id = soh.11769
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			100 = {
				trigger = {
					check_variable = {
						which = consumed_poison_quality
						value >= 0
					}
				}
				
				mult_modifier = {
					factor = 2
					has_character_flag = consumed_poison_is_sneaky_harmful
				}
				
				event_target:making_request = {
					character_event = { id = soh.11770 } # Inform requester
				}
			}
			
			100 = {
				trigger = {
					check_variable = {
						which = consumed_poison_quality
						value < 2
					}
				}
				
				mult_modifier = {
					factor = 2
					check_variable = {
						which = consumed_poison_quality
						value < 0
					}
				}
				
				character_event = { id = soh.11772 } # Feeling a bit worse
			}
			
			100 = {
				trigger = {
					check_variable = {
						which = consumed_poison_quality
						value < 0
					}
				}
				
				mult_modifier = {
					factor = 0.5
					has_character_flag = consumed_poison_is_sneaky_harmful
				}
				
				mult_modifier = {
					factor = 2
					check_variable = {
						which = consumed_poison_quality
						value < -2
					}
				}
				
				character_event = { id = soh.11775 } # Feeling a lot worse
			}
			
			100 = {
				trigger = {
					check_variable = {
						which = consumed_poison_quality
						value < -2
					}
				}
				
				mult_modifier = {
					factor = 0.1
					has_character_flag = consumed_poison_is_sneaky_harmful
				}
				
				mult_modifier = {
					factor = 2
					check_variable = {
						which = consumed_poison_quality
						value < -4
					}
				}
				
				mult_modifier = {
					factor = 2
					check_variable = {
						which = consumed_poison_quality
						value < -6
					}
				}
				
				mult_modifier = {
					factor = 2
					check_variable = {
						which = consumed_poison_quality
						value < -8
					}
				}
				
				character_event = { id = soh.11778 } # Died
			}
		}
		
		side_effect_poison_effect = yes
	}
}

# No effect - requester
character_event = {
	id = soh.11770
	desc = EVTDESC_SOH_11770
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11770 # That did nothing...
		
		event_target:target_alchemist = {
			character_event = { id = soh.11771 } # Inform alchemist
		}
	}
}

# No effect - alchemist
character_event = {
	id = soh.11771
	desc = EVTDESC_SOH_11771
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11771 # That did nothing...
	}
}

# Target is feeling a bit unwell
character_event = {
	id = soh.11772
	desc = EVTDESC_SOH_11772
	picture = GFX_evt_stressed_ruler
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11772 # What's this?
		
		add_character_modifier = {
			name = alchemist_minor_poison
			months = 12
			hidden = yes
		}
		
		event_target:making_request = {
			character_event = { id = soh.11773 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11774 } # Inform alchemist
		}
	}
}

# Target is feeling a bit unwell - person that delivered the potion
character_event = {
	id = soh.11773
	desc = EVTDESC_SOH_11773
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11773 # Not quite what I expected...
	}
}

# Target is feeling a bit unwell - alchemist
character_event = {
	id = soh.11774
	desc = EVTDESC_SOH_11774
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11774 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 2
			}
		}
	}
}

# Target is feeling very poorly
character_event = {
	id = soh.11775
	desc = EVTDESC_SOH_11775
	picture = GFX_evt_stressed_ruler
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11775 # What's this?
		
		add_character_modifier = {
			name = alchemist_major_poison
			months = 12
			hidden = yes
		}
		
		event_target:making_request = {
			character_event = { id = soh.11776 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11777 } # Inform alchemist
		}
	}
}

# Target is feeling very poorly - person that delivered the potion
character_event = {
	id = soh.11776
	desc = EVTDESC_SOH_11776
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11776 # Almost!
	}
}

# Target is feeling very poorly - alchemist
character_event = {
	id = soh.11777
	desc = EVTDESC_SOH_11777
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11777 # Seems to have worked...
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 3
			}
		}
	}
}

# Died due to poison
character_event = {
	id = soh.11778
	desc = EVTDESC_SOH_11778
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11778 # Who did this?
		
		event_target:making_request = {
			character_event = { id = soh.11779 } # Inform requester
		}
		
		event_target:target_alchemist = {
			character_event = { id = soh.11780 } # Inform alchemist
		}
		
		death = {
			death_reason = death_murder_unknown_poison
			killer = event_target:making_request
		}
	}
}

# Died due to poison - requester
character_event = {
	id = soh.11779
	desc = EVTDESC_SOH_11779
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11779 # Got them!
	}
}

# Died due to poison - alchemist
character_event = {
	id = soh.11780
	desc = EVTDESC_SOH_11780
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_11780 # As expected!
		
		hidden_tooltip = {
			change_variable = {
				which = alchemist_poison_knowledge
				value = 3
			}
		}
	}
}