# Misc events

namespace = tianxia

# IDs 1401-1500 reserved

##### Random accident death

# 1 % chance of dying in a random accident for unlanded characters that plausibly could
character_event = {
	id = tianxia.1401
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse -> random_events -> random_death
	
	min_age = 16
	prisoner = no
	only_capable = yes # Works fine
	
	trigger = {
		is_ruler = no
		is_inaccessible_trigger = no
	}
	
	weight_multiplier = {
		days = 1
		
		mult_modifier = {
			factor = 2
			is_unimportant_trigger = yes
		}
	}
	
	immediate = {
		random_accident_death_effect = yes
	}
}

# 1 % chance of vanishing every year
character_event = {
	id = tianxia.1402
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse -> random_events -> random_death
	
	min_age = 16
	prisoner = no
	only_capable = yes # Works fine
	
	trigger = {
		is_ruler = no
		is_inaccessible_trigger = no
	}
	
	weight_multiplier = {
		days = 1
		
		mult_modifier = {
			factor = 2
			is_unimportant_trigger = yes
		}
	}
	
	immediate = {
		death = {
			death_reason = death_missing
		}
	}
}

##### Kinslayer trait fix

# on_startup, convert non-Tribal Kinslayer to Tribal Kinslayer where relevant
character_event = {
	id = tianxia.1403
	hide_window = yes
	
	is_triggered_only = yes # on_startup
	
	only_rulers = yes
	
	trigger = {
		is_tribal = yes
		OR = {
			trait = kinslayer
			trait = familial_kinslayer
			trait = dynastic_kinslayer
		}
	}
	
	immediate = {
		add_trait = tribal_kinslayer
	}
}

##### Seclusion fix, e.g on marriage

# on_host_change, put characters in seclusion if their new host is in seclusion
character_event = {
	id = tianxia.1404
	hide_window = yes
	
	is_triggered_only = yes # on_host_change
	
	prisoner = no # Takes precedence
	
	trigger = {
		is_landed = no
		FROMFROM = {
			has_character_modifier = in_seclusion
		}
	}
	
	immediate = {
		add_character_modifier = {
			name = in_seclusion
			duration = -1
		}
	}
}