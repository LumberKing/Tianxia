###########################################
#                                         #
# M&M Monastic Artifacts Events           #
#                                         #
# ID MNM.9000-MNM.9911                    #
#                                         #
###########################################

# IDs:
# 9000-9199 Mathilda
# 9200-9399 Henrik / Milla
# 9400-9599 David
# 9600-9799 / 9030-9032 Drikus
# 9800-9898 Axel
# 9899-9999 Joel

namespace = MNM

# Sends rumors
character_event = {
	id = MNM.9000

	hide_window = yes
	is_triggered_only = yes # on_yearly_pulse, random_events

	has_dlc = "Mystics"
	min_age = 13
	only_playable = yes
	only_capable = yes
	prisoner = no

	trigger = {
		is_landed = yes
		mercenary = no
		holy_order = no

		trigger_if = {
			limit = { ai = yes }
			higher_real_tier_than = COUNT
		}

		any_voter = {
			is_councillor = yes
			is_incapable = no
			prisoner = no
			ai = yes

			opinion = {
				who = ROOT
				value >= 20
			}
		}

		NOR = {
			has_character_modifier = relic_rumor_major
			has_character_modifier = relic_rumor_medium
			has_character_modifier = relic_rumor_minor
			religion_openly_zun_or_reformed_trigger = yes
			religion = pagan
			religion = hellenic_pagan

			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 2.0
			has_ambition = obj_create_treasury
		}
	}

	immediate = {
		save_event_target_as = relic_ruler

		random_voter = {
			limit = {
				is_councillor = yes
				is_incapable = no
				prisoner = no
				ai = yes

				opinion = {
					who = ROOT
					value >= 20
				}
			}
			save_event_target_as = rumor_councillor
		}

		random_list = {
			10 = { # Epic rumor
				# T5
				trigger = {
					trigger_if = {
						limit = {
							OR = {
								JD_T5_artifact_discovery_possible_trigger = yes
								chinese_T5_artifact_discovery_possible_trigger = yes
								japanese_T5_artifact_discovery_possible_trigger = yes
							}
						}
						
						always = yes
					}
					
					trigger_else = {
						trigger_if = {
							limit = { religion_group = christian }

							NAND = {
								has_artifact = bones_of_st_peter
								has_artifact = staff_of_moses
								has_artifact = davids_harp
							}
						}
						trigger_else_if = {
							limit = { religion_group = jewish_group }

							NAND = {
								has_artifact = bones_of_st_peter
								has_artifact = staff_of_moses
								has_artifact = davids_harp
							}
						}
						trigger_else_if = {
							limit = { religion_group = muslim }

							NAND = {
								has_artifact = staff_of_moses
								has_artifact = davids_harp
								has_artifact = seal_of_mohammad
								has_artifact = holy_banner_of_mohammad
								has_artifact = blessed_mantle
							}
						}
						trigger_else_if = {
							limit = { religion_group = zoroastrian_group }

							NAND = {
								has_artifact = cup_of_jamshid
								has_artifact = babr_e_bayan
							}
						}
						trigger_else_if = {
							limit = { religion = buddhist }
							NOT = { has_artifact = buddhas_tooth }
						}
						trigger_else_if = {
							limit = { religion_openly_norse_or_reformed_trigger = yes }

							NAND = {
								has_artifact = mjolnir
								has_artifact = andvaranaut
							}
						}
						trigger_else_if = {
							limit = { religion_openly_west_african_or_reformed_trigger = yes }
							NOT = { has_artifact = fetish_of_souls }
						}
						trigger_else_if = {
							limit = { religion_openly_finnish_or_reformed_trigger = yes }
							NOT = { has_artifact = sampo }
						}
						trigger_else_if = {
							limit = { religion_openly_slavic_or_reformed_trigger = yes }
							NOT = { has_artifact = axe_of_perun }
						}
						trigger_else_if = {
							limit = { religion_openly_baltic_or_reformed_trigger = yes }
							NOT = { has_artifact = axe_of_perkunas }
						}
						trigger_else_if = {
							limit = { religion_openly_tengri_or_reformed_trigger = yes }
							NOT = { has_artifact = yada_tashy }
						}
						trigger_else_if = {
							limit = {
								religion_openly_chinese_or_reformed_trigger = yes
								has_global_flag = bamboo_annals_exist
							}
							NOT = { has_artifact = bamboo_annals }
						}
					}
				}

				mult_modifier = {
					factor = 0.7
					ai = yes
				}

				character_event = { id = MNM.9004 }
			}

			30 = { # Good rumor
				# T3 and T4
				trigger = {
					trigger_if = {
						limit = {
							OR = {
								JD_T4_artifact_discovery_possible_trigger = yes
								JD_T3_artifact_discovery_possible_trigger = yes
							}
						}
						
						always = yes
					}
					
					trigger_else_if = {
						limit = {
							OR = {
								chinese_T4_artifact_discovery_possible_trigger = yes
								chinese_T3_artifact_discovery_possible_trigger = yes
								japanese_T4_artifact_discovery_possible_trigger = yes
								japanese_T3_artifact_discovery_possible_trigger = yes
							}
						}
						
						always = yes
					}
					
					trigger_else_if = {
						limit = {
							has_chinese_government_trigger = yes
							NOT = {
								has_artifact = works_of_shan_yu
							}
						}
						
						always = yes
					}
					
					trigger_else_if = {
						limit = {
							OR = {
								religion_openly_korean_or_reformed_trigger = yes
								AND = {
									culture_group = koreanic
									OR = {
										religion = buddhist
										has_chinese_eastern_religion_trigger = yes
									}
								}
							}
							NOT = {
								has_artifact = hwarang_segi
							}
						}
						
						always = yes
					}
					
					trigger_else = {
						religion_openly_finnish_or_reformed_trigger = no
						religion_openly_slavic_or_reformed_trigger = no
						religion_openly_baltic_or_reformed_trigger = no
						religion_openly_tengri_or_reformed_trigger = no

						trigger_if = {
							limit = { religion_group = christian }

							NAND = {
								has_artifact = crown_of_thorns
								has_artifact = seamless_robe_of_jesus
								has_artifact = fragment_of_true_cross
								has_artifact = holy_foreskin
								has_artifact = seal_of_solomon
								AND = {
									has_artifact = image_of_edessa
									NOT = {
										religion = iconoclast
									}
								}
							}
						}
						trigger_else_if = {
							limit = { religion_group = jewish_group }

							NAND = {
								has_artifact = seal_of_solomon
								has_artifact = tabernacle
							}
						}
						trigger_else_if = {
							limit = { religion_group = muslim }

							NAND = {
								has_artifact = seal_of_solomon
								has_artifact = sword_of_mohammad
								has_artifact = letter_of_mohammad
								has_artifact = blessed_sandals
								has_artifact = cloak_of_mohammad
							}
						}
						trigger_else_if = {
							limit = { religion_group = zoroastrian_group }

							NAND = {
								has_artifact = derafsh_kaviani
								has_artifact = cyrus_cylinder
							}
						}
						trigger_else_if = {
							limit = { has_dharmic_religion_trigger = yes }

							NAND = {
								has_artifact = mountain_of_light_diamond
								OR = {
									has_artifact = elaborate_danda
									NOR = {
										religion = hindu
										religion = kejawen
									}
								}
								OR = {
									has_artifact = sarira
									religion = buddhist
								}
								has_artifact = sariraka_actual_body_part
							}
						}
						trigger_else_if = {
							limit = { religion_openly_norse_or_reformed_trigger = yes }
							NOT = { has_artifact = gjallarhorn }
						}
						trigger_else_if = {
							limit = {
								religion_openly_chinese_or_reformed_trigger = yes
								has_global_flag = shennong_bencaojing_exists
							}
							NOT = { has_artifact = shennong_bencaojing }
						}
						trigger_else_if = {
							limit = {
								religion = taoist
								has_global_flag = zhong_he_ji_exists
							}
							NOT = { has_artifact = zhong_he_ji }
						}
					}
				}

				character_event = { id = MNM.9005 }
			}

			60 = { # Weak rumor
				# T1 and T2
				trigger = {
					trigger_if = {
						limit = {
							OR = {
								JD_T2_artifact_discovery_possible_trigger = yes
								JD_T1_artifact_discovery_possible_trigger = yes
							}
						}
						
						always = yes
					}
					
					trigger_else_if = {
						limit = {
							OR = {
								chinese_T2_artifact_discovery_possible_trigger = yes
								chinese_T1_artifact_discovery_possible_trigger = yes
							}
						}
						
						always = yes
					}
					
					trigger_else_if = {
						limit = {
							OR = {
								is_close_to_china_or_along_the_silk_road_trigger = yes
								region = world_china
								region = world_korea
								region = world_vietnam
								region = world_balhae
								region = world_japan
								region = world_ryukyu
							}
							has_global_flag = art_of_war_exists
							NOT = {
								has_artifact = art_of_war_page
							}
						}
						
						always = yes
					}
					
					trigger_else = {
						trigger_if = {
							limit = { religion_group = christian }

							NAND = {
								has_artifact = fingerbone_of_saint
								has_artifact = famous_head
								has_artifact = famous_tongue
								#has_artifact = infamous_tongue
								has_artifact = famous_hand
								has_artifact = famous_arm
								has_artifact = famous_foot
								has_artifact = famous_ancient_weapon
								has_artifact = chains_of_st_peter
								has_artifact = right_hand_st_demetrius
								has_artifact = veil_of_veronica
								has_artifact = remains_of_st_cessianus
								has_artifact = weeping_statue
							}
						}
						trigger_else_if = {
							limit = { religion_group = jewish_group }

							NAND = {
								#has_artifact = famous_head
								#has_artifact = famous_tongue
								#has_artifact = infamous_tongue
								#has_artifact = famous_hand
								#has_artifact = famous_arm
								#has_artifact = famous_foot
								has_artifact = famous_ancient_weapon
								has_artifact = davids_sling
							}
						}
						trigger_else_if = {
							limit = { religion_group = muslim }

							NAND = {
								has_artifact = mohammads_beard
								#has_artifact = famous_head
								#has_artifact = famous_tongue
								#has_artifact = infamous_tongue
								#has_artifact = famous_hand
								#has_artifact = famous_arm
								#has_artifact = famous_foot
								has_artifact = famous_ancient_weapon
								has_artifact = mohammads_bowl
								has_artifact = tooth_of_mohammad

								OR = {
									has_artifact = blessed_mantle # safeguard so you don't end up with two waters
									has_artifact = water_of_blessed_mantle
								}
							}
						}
						trigger_else_if = {
							limit = { religion_group = zoroastrian_group }

							NAND = {
								has_artifact = haoma_sapling
								has_artifact = keshmar_cypress_branch
								#has_artifact = famous_head
								#has_artifact = famous_tongue
								#has_artifact = infamous_tongue
								#has_artifact = famous_hand
								#has_artifact = famous_arm
								#has_artifact = famous_foot
								has_artifact = famous_ancient_weapon
							}
						}
						trigger_else_if = {
							limit = { religion_group = indian_group }

							NOT = {
								#has_artifact = famous_head
								#has_artifact = famous_tongue
								#has_artifact = infamous_tongue
								#has_artifact = famous_hand
								#has_artifact = famous_arm
								#has_artifact = famous_foot
								has_artifact = famous_ancient_weapon
							}
						}
						trigger_else = {
							NOT = {
								#has_artifact = famous_head
								#has_artifact = famous_tongue
								#has_artifact = infamous_tongue
								#has_artifact = famous_hand
								#has_artifact = famous_arm
								#has_artifact = famous_foot
								has_artifact = famous_ancient_weapon
							}
						}
					}
				}

				character_event = { id = MNM.9006 }
			}

			9000 = { # AI is less likely to find artifacts
				trigger = { ai = yes }
			}
		}
	}
}

# Rumors [Major/Extraordinary rumor]
character_event = {
	id = MNM.9004
	desc = EVTDESC_MNM_9004
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_religion
	portrait = event_target:rumor_councillor

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9004

		custom_tooltip = { text = EVTOPTA_MNM_9004_TT }
		custom_tooltip = { text = outcome_will_depend_on_froms_skill_tt }

		add_character_modifier = {
			name = relic_rumor_major
			years = 20
		}

		add_artifact_search_payment_effect = yes

		hidden_effect = {
			# Start searching
			event_target:rumor_councillor = { # the councilor
				set_character_flag = relic_hunter
				save_event_target_as = relic_hunter
				character_event = { id = MNM.9007 days = 30 } # The looping evaluation for progress increase/decrease begins...
			}
		}

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTB_MNM_9004

		custom_tooltip = { text = EVTOPTB_MNM_9004_TT }

		add_character_modifier = {
			name = relic_rumor_major
			years = 20
		}
	}

	after = {
		hidden_effect = { set_variable = { which = relic_score value = 0 } }

		opinion = {
			name = opinion_grateful
			who = event_target:rumor_councillor
			years = 20
		}
	}
}

# Rumors [Good/Medium rumor]
character_event = {
	id = MNM.9005
	desc = EVTDESC_MNM_9005
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_religion
	portrait = event_target:rumor_councillor

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9005

		custom_tooltip = { text = EVTOPTA_MNM_9005_TT }
		custom_tooltip = { text = outcome_will_depend_on_froms_skill_tt }

		add_character_modifier = {
			name = relic_rumor_medium
			years = 20
		}

		add_artifact_search_payment_effect = yes

		hidden_effect = {
			# Start searching
			event_target:rumor_councillor = { # the councilor
				set_character_flag = relic_hunter
				save_event_target_as = relic_hunter
				character_event = { id = MNM.9007 days = 30 } # The looping evaluation for progress increase/decrease begins...
			}
		}

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTB_MNM_9005

		custom_tooltip = { text = EVTOPTB_MNM_9005_TT }

		add_character_modifier = {
			name = relic_rumor_medium
			years = 20
		}
	}

	after = {
		hidden_effect = { set_variable = { which = relic_score value = 0 } }

		opinion = {
			name = opinion_grateful
			who = event_target:rumor_councillor
			years = 15
		}
	}
}

# Rumors [Decent rumor]
character_event = {
	id = MNM.9006
	desc = EVTDESC_MNM_9006
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion
	portrait = event_target:rumor_councillor

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9006

		custom_tooltip = { text = EVTOPTA_MNM_9006_TT }
		custom_tooltip = { text = outcome_will_depend_on_froms_skill_tt }

		add_character_modifier = {
			name = relic_rumor_minor
			years = 10
		}

		add_artifact_search_payment_effect = yes

		hidden_effect = {
			# Start searching
			event_target:rumor_councillor = { # the councilor
				set_character_flag = relic_hunter
				save_event_target_as = relic_hunter
				character_event = { id = MNM.9007 days = 30 } # The looping evaluation for progress increase/decrease begins...
			}
		}

		ai_chance = { factor = 100 }
	}

	option = {
		name = INTERESTING

		custom_tooltip = { text = EVTOPTB_MNM_9006_TT }

		add_character_modifier = {
			name = relic_rumor_minor
			years = 10
		}
	}

	after = {
		hidden_effect = { set_variable = { which = relic_score value = 0 } }

		opinion = {
			name = opinion_grateful
			who = event_target:rumor_councillor
			years = 10
		}
	}
}

# Person you sent out starts searching
character_event = {
	id = MNM.9007

	hide_window = yes
	is_triggered_only = yes # search_for_artifact, mnm_artifact_decisions.txt, other events

	has_character_flag = relic_hunter
	has_job_title = yes
	has_dlc = "Mystics"
	only_capable = yes
	prisoner = no

	trigger = {
		liege = {
			character = event_target:relic_ruler

			OR = {
				has_character_modifier = relic_rumor_major
				has_character_modifier = relic_rumor_medium
				has_character_modifier = relic_rumor_minor
			}
		}
	}

	fail_trigger_effect = {
		if = {
			limit = { has_character_flag = relic_hunter }
			event_target:relic_ruler = { character_event = { id = MNM.9009 } }
		}
		else = {
			event_target:relic_ruler = { clr_artifact_searcher_effect = yes }
		}
	}

	immediate = {
		# If relic is found...
		if = {
			limit = { the_hunt_for_an_artifact_has_made_enough_progress_trigger = yes }
			event_target:relic_ruler = { character_event = { id = MNM.9008 } } # Relic tombola
		}

		# If relic isn't found...
		else = {
			if = {
				limit = { # to make sure that you don't the Ask For Help events too often...
					event_target:relic_ruler = {
						had_character_flag = {
							flag = they_asked_for_your_help
							months >= 18
						}
					}
				}

				clr_character_flag = they_asked_for_your_help
			}

			# Outcome of this search
			random_list = {
				20 = { # Search through diplomacy
					mult_modifier = { factor = 5 has_job_title = job_chancellor }
					mult_modifier = { factor = 3 diplomacy >= 10 }

					random_list = {
						15 = { # Passive points gain
							mult_modifier = { factor = 1.5 has_job_title = job_chancellor }
							mult_modifier = { factor = 1.2 diplomacy >= 8 }
							mult_modifier = { factor = 1.2 diplomacy >= 10 }
							mult_modifier = { factor = 1.4 diplomacy >= 12 }
							mult_modifier = { factor = 1.4 diplomacy >= 15 }
							mult_modifier = { factor = 1.4 diplomacy >= 18 }
							mult_modifier = { factor = 1.5 has_pleasant_personality_trigger = yes }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = 1 }

								if = {
									limit = { the_hunt_for_an_artifact_has_made_enough_progress_trigger = yes }
									character_event = { id = MNM.9035 } # progress nearing end notification
								}
								else = { character_event = { id = MNM.9031 } }
							}
						}

						15 = { # Ask for help
							trigger = {
								event_target:relic_ruler = {
									NOR = {
										has_character_flag = they_asked_for_your_help
										has_character_modifier = treasure_hunting_diplomats
									}
								}
							}

							mult_modifier = { factor = 1.5 has_job_title = job_chancellor }
							mult_modifier = { factor = 1.4 diplomacy >= 12 }

							event_target:relic_ruler = { character_event = { id = MNM.9020 } }
						}

						1 = { # Setback
							mult_modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							mult_modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_chancellor } }
							mult_modifier = { factor = 1.5 is_dumb_trigger = yes }
							mult_modifier = { factor = 2.5 diplomacy < 8 }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = -1 }
								character_event = { id = MNM.9032 } # small setback event
							}
						}

						1 = { # Unfortunate accident
							trigger = { ai = yes }

							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_chancellor } }
							mult_modifier = { factor = 1.5 diplomacy < 8 }

							event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						}
					}
				}
				20 = { # Search through martial
					mult_modifier = { factor = 5 has_job_title = job_marshal }
					mult_modifier = { factor = 3 martial >= 10 }

					random_list = {
						15 = { # Passive points gain
							mult_modifier = { factor = 1.5 has_job_title = job_marshal }
							mult_modifier = { factor = 1.2 martial >= 8 }
							mult_modifier = { factor = 1.2 martial >= 10 }
							mult_modifier = { factor = 1.4 martial >= 12 }
							mult_modifier = { factor = 1.4 martial >= 15 }
							mult_modifier = { factor = 1.4 martial >= 18 }
							mult_modifier = { factor = 1.4 trait = brave }
							mult_modifier = { factor = 1.4 combat_rating >= 20 }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = 1 }

								if = {
									limit = { the_hunt_for_an_artifact_has_made_enough_progress_trigger = yes }
									character_event = { id = MNM.9035 }  # progress nearing end notification
								}
								else = { character_event = { id = MNM.9031 } }
							}
						}

						15 = { # Ask for help
							trigger = {
								event_target:relic_ruler = {
									NOR = {
										has_character_flag = they_asked_for_your_help
										has_character_modifier = treasure_hunting_soldiers
									}
								}
							}

							mult_modifier = { factor = 1.5 has_job_title = job_marshal }
							mult_modifier = { factor = 1.4 martial >= 12 }

							event_target:relic_ruler = { character_event = { id = MNM.9021 } }
						}

						1 = { # Setback
							mult_modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							mult_modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							mult_modifier = { factor = 1.5 is_dumb_trigger = yes }
							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_marshal } }
							mult_modifier = { factor = 2.5 martial < 8 }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = -1 }
								character_event = { id = MNM.9032 } # small setback event
							}
						}

						1 = { # Unfortunate accident
							trigger = { ai = yes }

							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_marshal } }
							mult_modifier = { factor = 1.5 martial < 8 }
							mult_modifier = { factor = 1.5 combat_rating < 0 }

							event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						}
					}
				}

				20 = { # Search through stewardship
					mult_modifier = { factor = 5 has_job_title = job_treasurer }
					mult_modifier = { factor = 3 stewardship >= 10 }

					random_list = {
						15 = { # Passive points gain
							mult_modifier = { factor = 1.5 has_job_title = job_treasurer }
							mult_modifier = { factor = 1.2 stewardship >= 10 }
							mult_modifier = { factor = 1.4 stewardship >= 12 }
							mult_modifier = { factor = 1.4 stewardship >= 15 }
							mult_modifier = { factor = 1.4 stewardship >= 18 }
							mult_modifier = { factor = 1.4 monthly_income >= 3 }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = 1 }

								if = {
									limit = { the_hunt_for_an_artifact_has_made_enough_progress_trigger = yes }
									character_event = { id = MNM.9035 } # progress nearing end notification
								}
								else = { character_event = { id = MNM.9031 } }
							}
						}

						15 = { # Ask for help
							trigger = {
								event_target:relic_ruler = {
									NOR = {
										has_character_flag = they_asked_for_your_help
										has_character_modifier = treasure_hunting_stewards
									}
								}
							}

							mult_modifier = { factor = 1.5 has_job_title = job_treasurer }
							mult_modifier = { factor = 1.4 stewardship >= 12 }

							event_target:relic_ruler = { character_event = { id = MNM.9022 } }
						}

						1 = { # Setback
							mult_modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							mult_modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							mult_modifier = { factor = 1.5 is_dumb_trigger = yes }
							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_treasurer } }
							mult_modifier = { factor = 2.5 stewardship < 8 }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = -1 }
								character_event = { id = MNM.9032 } # small setback event
							}
						}

						1 = { # Unfortunate accident
							trigger = { ai = yes }

							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_treasurer } }
							mult_modifier = { factor = 1.5 stewardship < 8 }

							event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						}
					}
				}

				20 = { # Search through intrigue
					mult_modifier = { factor = 5 has_job_title = job_spymaster }
					mult_modifier = { factor = 3 intrigue >= 10 }

					random_list = {
						15 = { # Passive points gain
							mult_modifier = { factor = 1.5 has_job_title = job_spymaster }
							mult_modifier = { factor = 1.2 intrigue >= 10 }
							mult_modifier = { factor = 1.4 intrigue >= 12 }
							mult_modifier = { factor = 1.4 intrigue >= 15 }
							mult_modifier = { factor = 1.4 intrigue >= 18 }
							mult_modifier = { factor = 1.4 has_unpleasant_personality_trigger = yes }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = 1 }

								if = {
									limit = { the_hunt_for_an_artifact_has_made_enough_progress_trigger = yes }
									character_event = { id = MNM.9035 } # progress nearing end notification
								}
								else = { character_event = { id = MNM.9031 } }
							}
						}

						15 = { # Ask for help
							trigger = {
								event_target:relic_ruler = {
									NOR = {
										has_character_flag = they_asked_for_your_help
										has_character_modifier = treasure_hunting_spies
									}
								}
							}

							mult_modifier = { factor = 1.5 has_job_title = job_spymaster }
							mult_modifier = { factor = 1.4 intrigue >= 12 }

							event_target:relic_ruler = { character_event = { id = MNM.9023 } }
						}

						1 = { # Setback
							mult_modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							mult_modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							mult_modifier = { factor = 1.5 is_dumb_trigger = yes }
							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_spymaster } }
							mult_modifier = { factor = 2.5 intrigue < 8 }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = -1 }
								character_event = { id = MNM.9032 } # small setback event
							}
						}

						1 = { # Unfortunate accident
							trigger = { ai = yes }

							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_spymaster } }
							mult_modifier = { factor = 1.5 intrigue < 8 }

							event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						}
					}
				}

				20 = { # Search through learning
					mult_modifier = { factor = 5 has_job_title = job_spiritual }
					mult_modifier = { factor = 3 learning >= 10 }

					random_list = {
						15 = { # Passive points gain
							mult_modifier = { factor = 1.5 has_job_title = job_spiritual }
							mult_modifier = { factor = 1.2 learning >= 10 }
							mult_modifier = { factor = 1.4 learning >= 12 }
							mult_modifier = { factor = 1.4 learning >= 15 }
							mult_modifier = { factor = 1.4 learning >= 18 }
							mult_modifier = { factor = 1.4 is_learned_trigger = yes }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = 1 }

								if = {
									limit = { the_hunt_for_an_artifact_has_made_enough_progress_trigger = yes }
									character_event = { id = MNM.9035 } # progress nearing end notification
								}
								else = { character_event = { id = MNM.9031 } }
							}
						}

						15 = { # Ask for help
							trigger = {
								event_target:relic_ruler = {
									NOR = {
										has_character_flag = they_asked_for_your_help
										has_character_modifier = treasure_hunting_scholars
									}
								}
							}

							mult_modifier = { factor = 1.5 has_job_title = job_spiritual }
							mult_modifier = { factor = 1.4 learning >= 12 }

							event_target:relic_ruler = { character_event = { id = MNM.9024 } }
						}

						1 = { # Setback
							mult_modifier = { factor = 1.25 event_target:relic_ruler = { has_character_modifier = relic_rumor_medium } }
							mult_modifier = { factor = 1.5 event_target:relic_ruler = { has_character_modifier = relic_rumor_major } }
							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_spiritual } }
							mult_modifier = { factor = 1.5 is_dumb_trigger = yes }
							mult_modifier = { factor = 2.5 learning < 8 }

							event_target:relic_ruler = {
								change_variable = { which = relic_score value = -1 }
								character_event = { id = MNM.9032 } # small setback event
							}
						}

						1 = { # Unfortunate accident
							trigger = { ai = yes }

							mult_modifier = { factor = 1.5 NOT = { has_job_title = job_spiritual } }
							mult_modifier = { factor = 1.5 learning < 8 }

							event_target:relic_ruler = { character_event = { id = MNM.9029 } }
						}
					}
				}

				5 = { # Ask for money
					mult_modifier = {
						factor = 2

						OR = {
							trait = greedy
							trait = deceitful
						}
					}
					mult_modifier = {
						factor = 2
						trait = slothful
					}
					mult_modifier = {
						factor = 2
						is_rival = event_target:relic_ruler
					}

					event_target:relic_ruler = {
						character_event = { id = MNM.9025 }
					}
				}

				15 = { # Mess up badly
					trigger = {
						event_target:relic_ruler = { check_variable = { which = relic_score value >= 0 } }
						NOT = { reverse_has_opinion_modifier = { who = event_target:relic_ruler name = opinion_useless_moron } }
					}

					mult_modifier = { factor = 0.5 is_smart_trigger = yes }
					mult_modifier = { factor = 1.5 is_dumb_trigger = yes }

					event_target:relic_ruler = { character_event = { id = MNM.9027 } }
				}

				5 = { # Encounter a better rumor
					trigger = {
						event_target:relic_ruler = {
							check_variable = { which = relic_score value < 5 }
							NOT = { has_character_modifier = relic_rumor_major }
						}
					}

					mult_modifier = { factor = 3 is_smart_trigger = yes }

					event_target:relic_ruler = { character_event = { id = MNM.9028 } }
				}

				10 = { } # Nothing happens
			}

			character_event = {
				id = MNM.9007
				days = 300
				random = 80
			}
		}
	}
}

# Artifact is found
character_event = {
	id = MNM.9008

	hide_window = yes
	is_triggered_only = yes

	has_dlc = "Mystics"

	immediate = {
		# Artifact tombola
		trigger_switch = {
			on_trigger = has_character_modifier

			relic_rumor_major = { # T5
				random_list = {
					# Christian artifacts
					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = bones_of_st_peter }
						}

						set_character_flag = bones_of_st_peter
					}

					# Jewish artifacts
					10 = {
						trigger = {
							NOT = { has_artifact = staff_of_moses }

							OR = {
								religion_group = jewish_group
								religion_group = christian
								religion_group = muslim
							}
						}

						mult_modifier = {
							factor = 0.5
							NOT = { religion_group = jewish_group }
						}

						set_character_flag = staff_of_moses
					}

					10 = {
						trigger = {
							NOT = { has_artifact = davids_harp }

							OR = {
								religion_group = jewish_group
								religion_group = christian
								religion_group = muslim
							}
						}

						mult_modifier = {
							factor = 0.5
							NOT = { religion_group = jewish_group }
						}

						set_character_flag = davids_harp
					}

					5 = {
						trigger = {
							NOT = { has_artifact = ark_of_the_covenant }

							OR = {
								religion_group = jewish_group
								religion_group = christian
							}
						}

						set_character_flag = ark_of_the_covenant
					}

					# Muslim artifacts
					10 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = seal_of_mohammad }
						}

						set_character_flag = seal_of_mohammad
					}

					10 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = holy_banner_of_mohammad }
						}

						set_character_flag = holy_banner_of_mohammad
					}

					10 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = blessed_mantle }
						}

						set_character_flag = blessed_mantle
					}

					# Zoroastrian artifacts
					10 = {
						trigger = {
							religion_group = zoroastrian_group
							NOT = { has_artifact = cup_of_jamshid }
						}

						set_character_flag = cup_of_jamshid
					}

					10 = {
						trigger = {
							NOT = { has_artifact = babr_e_bayan }

							OR = {
								religion_group = zoroastrian_group
								culture_group = iranian
							}
						}

						set_character_flag = babr_e_bayan
					}

					# Dharmic artifacts
					10 = {
						trigger = {
							religion = buddhist
							NOT = { has_artifact = buddhas_tooth }
						}

						set_character_flag = buddhas_tooth
					}

					10 = {
						trigger = {
							has_dharmic_religion_trigger = yes
							NOT = { has_artifact = mountain_of_light_diamond }
						}

						set_character_flag = mountain_of_light_diamond
					}

					## Pagan artifacts ##
					# Germanic artifacts
					10 = {
						trigger = {
							religion_openly_norse_or_reformed_trigger = yes
							NOT = { has_artifact = mjolnir }
						}

						set_character_flag = mjolnir
					}

					10 = {
						trigger = {
							religion_openly_norse_or_reformed_trigger = yes
							NOT = { has_artifact = andvaranaut }
						}

						set_character_flag = andvaranaut
					}

					# West African artifacts
					10 = {
						trigger = {
							religion_openly_west_african_or_reformed_trigger = yes
							NOT = { has_artifact = fetish_of_souls }
						}

						set_character_flag = fetish_of_souls
					}

					# Finnish artifacts
					10 = {
						trigger = {
							religion_openly_finnish_or_reformed_trigger = yes
							NOT = { has_artifact = sampo }
						}

						set_character_flag = sampo
					}

					# Slavic artifacts
					10 = {
						trigger = {
							religion_openly_slavic_or_reformed_trigger = yes
							NOT = { has_artifact = axe_of_perun }
						}

						set_character_flag = axe_of_perun
					}

					# Romuvan artifacts
					10 = {
						trigger = {
							religion_openly_baltic_or_reformed_trigger = yes
							NOT = { has_artifact = axe_of_perkunas }
						}

						set_character_flag = axe_of_perkunas
					}

					# Tengri artifacts
					10 = {
						trigger = {
							religion_openly_tengri_or_reformed_trigger = yes
							NOT = { has_artifact = yada_tashy }
						}

						set_character_flag = yada_tashy
					}
					
					# JD
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = jade_dragon
							}
						}
						
						set_character_flag = jade_dragon
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = art_of_war_exists
							NOT = {
								has_artifact = art_of_war
							}
						}
						
						set_character_flag = art_of_war
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = classic_of_poetry_exists
							NOT = {
								has_artifact = classic_of_poetry
							}
						}
						
						set_character_flag = classic_of_poetry
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = etiquette_and_ceremonial_exists
							NOT = {
								has_artifact = etiquette_and_ceremonial
							}
						}
						
						set_character_flag = etiquette_and_ceremonial
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = i_ching_exists
							NOT = {
								has_artifact = i_ching
							}
						}
						
						set_character_flag = i_ching
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = discourse_of_the_states_exists
							NOT = {
								has_artifact = discourse_of_the_states
							}
						}
						
						set_character_flag = discourse_of_the_states
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = spring_and_autumn_annals_exists
							NOT = {
								has_artifact = spring_and_autumn_annals
							}
						}
						
						set_character_flag = spring_and_autumn_annals
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = mozi_exists
							NOT = {
								has_artifact = mozi
							}
						}
						
						set_character_flag = mozi
					}
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = classic_of_filial_piety_exists
							NOT = {
								has_artifact = classic_of_filial_piety
							}
						}
						
						set_character_flag = classic_of_filial_piety
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = tao_te_ching_exists
							NOT = {
								has_artifact = tao_te_ching
							}
						}
						
						set_character_flag = tao_te_ching
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_rites_exists
							NOT = {
								has_artifact = book_of_rites
							}
						}
						
						set_character_flag = book_of_rites
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_documents_old_exists
							NOT = {
								has_artifact = book_of_documents_old
							}
						}
						
						set_character_flag = book_of_documents_old
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_documents_new_exists
							NOT = {
								has_artifact = book_of_documents_new
							}
						}
						
						set_character_flag = book_of_documents_new
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = zhuangzi_exists
							NOT = {
								has_artifact = zhuangzi
							}
						}
						
						set_character_flag = zhuangzi
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = records_of_the_grand_historian_exists
							NOT = {
								has_artifact = records_of_the_grand_historian
							}
						}
						
						set_character_flag = records_of_the_grand_historian
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = classic_of_mountains_and_seas_exists
							NOT = {
								has_artifact = classic_of_mountains_and_seas
							}
						}
						
						set_character_flag = classic_of_mountains_and_seas
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = records_of_the_three_kingdoms_exists
							NOT = {
								has_artifact = records_of_the_three_kingdoms
							}
						}
						
						set_character_flag = records_of_the_three_kingdoms
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = old_history_of_the_five_dynasties_exists
							NOT = {
								has_artifact = old_history_of_the_five_dynasties
							}
						}
						
						set_character_flag = old_history_of_the_five_dynasties
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = new_history_of_the_five_dynasties_exists
							NOT = {
								has_artifact = new_history_of_the_five_dynasties
							}
						}
						
						set_character_flag = new_history_of_the_five_dynasties
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = lessons_for_women_exists
							NOT = {
								has_artifact = lessons_for_women
							}
						}
						
						set_character_flag = lessons_for_women
					}
					
					# Chinese - general
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = sword_of_goujian
							}
						}
						
						set_character_flag = sword_of_goujian
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = spear_of_fuchai
							}
						}
						
						set_character_flag = spear_of_fuchai
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = green_dragon_crescent_blade
							}
						}
						
						set_character_flag = green_dragon_crescent_blade
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = dragon_phoenix_sword
							}
						}
						
						set_character_flag = dragon_phoenix_sword
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = zhanlu
							}
						}
						
						set_character_flag = zhanlu
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = juque
							}
						}
						
						set_character_flag = juque
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_character_flag = shengxie
							}
						}
						
						set_character_flag = shengxie
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_character_flag = yuchang
							}
						}
						
						set_character_flag = yuchang
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = chunjun
							}
						}
						
						set_character_flag = chunjun
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = longyuan
							}
						}
						
						set_character_flag = longyuan
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = taie
							}
						}
						
						set_character_flag = taie
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = gongbu
							}
						}
						
						set_character_flag = gongbu
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = nine_tripod_cauldrons
							}
						}
						
						set_character_flag = nine_tripod_cauldrons
					}
					
					10 = {
						trigger = {
							religion_openly_chinese_or_reformed_trigger = yes
							NOT = {
								has_artifact = bamboo_annals
							}
						}
						
						set_character_flag = bamboo_annals
					}
					
					# Japanese - general
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							NOT = {
								has_artifact = kogarasu_maru
							}
						}
						
						set_character_flag = kogarasu_maru
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							NOT = {
								has_artifact = dojigiri
							}
						}
						
						set_character_flag = dojigiri
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							NOT = {
								has_artifact = onimaru
							}
						}
						
						set_character_flag = onimaru
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							NOT = {
								has_artifact = mikazuki
							}
						}
						
						set_character_flag = mikazuki
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							NOT = {
								has_artifact = odenta
							}
						}
						
						set_character_flag = odenta
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							NOT = {
								has_artifact = juzumaru
							}
						}
						
						set_character_flag = juzumaru
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							has_global_flag = tale_of_genji_exists
							NOT = {
								has_artifact = tale_of_genji
							}
						}
						
						set_character_flag = tale_of_genji
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							has_global_flag = the_pillow_book_exists
							NOT = {
								has_artifact = the_pillow_book
							}
						}
						
						set_character_flag = the_pillow_book
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							has_global_flag = tale_of_the_heike_exists
							NOT = {
								has_artifact = tale_of_the_heike
							}
						}
						
						set_character_flag = tale_of_the_heike
					}
				}
			}

			relic_rumor_medium = { # T3 and T4
				random_list = {
					# Christian artifacts
					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = seamless_robe_of_jesus }
						}

						set_character_flag = seamless_robe_of_jesus
					}

					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = crown_of_thorns }
						}

						set_character_flag = crown_of_thorns
					}

					20 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = fragment_of_true_cross }
						}

						set_character_flag = fragment_of_true_cross
					}

					20 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = holy_foreskin }
						}

						set_character_flag = holy_foreskin
					}

					20 = {
						trigger = {
							religion_group = christian
							NOR = {
								has_artifact = image_of_edessa
								religion = iconoclast
							}
						}

						set_character_flag = image_of_edessa
					}

					# Jewish artifacts
					10 = {
						trigger = {
							NOT = { has_artifact = seal_of_solomon }

							OR = {
								religion_group = jewish_group
								religion_group = christian
								religion_group = muslim
							}
						}

						mult_modifier = {
							factor = 0.5
							NOT = { religion_group = jewish_group }
						}

						set_character_flag = seal_of_solomon
					}

					20 = {
						trigger = {
							religion_group = jewish_group
							NOT = { has_artifact = tabernacle }
						}

						set_character_flag = tabernacle
					}

					# Muslim artifacts
					10 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = sword_of_mohammad }
						}

						set_character_flag = sword_of_mohammad
					}

					20 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = letter_of_mohammad }
						}

						set_character_flag = letter_of_mohammad
					}

					20 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = cloak_of_mohammad }
						}

						set_character_flag = cloak_of_mohammad
					}

					20 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = blessed_sandals }
						}

						set_character_flag = blessed_sandals
					}

					# Zoroastrian artifacts
					10 = {
						trigger = {
							NOT = { has_artifact = derafsh_kaviani }

							OR = {
								religion_group = zoroastrian_group
								culture_group = iranian
								has_landed_title = e_persia
								has_landed_title = k_persia
							}
						}

						set_character_flag = derafsh_kaviani
					}

					20 = {
						trigger = {
							NOT = { has_artifact = cyrus_cylinder }

							OR = {
								religion_group = zoroastrian_group
								culture_group = iranian
							}
						}

						set_character_flag = cyrus_cylinder
					}

					# Dharmic artifacts
					20 = {
						trigger = {
							OR = {
								religion = hindu
								religion = kejawen
							}
							NOT = { has_artifact = elaborate_danda }
						}

						set_character_flag = elaborate_danda
					}

					20 = {
						trigger = {
							has_dharmic_religion_trigger = yes
							NOT = { has_artifact = sariraka_actual_body_part }
						}

						mult_modifier = {
							factor = 0.5
							NOT = { religion = buddhist }
						}

						set_character_flag = sariraka_actual_body_part
					}

					# Germanic artifacts
					20 = {
						trigger = {
							religion_openly_norse_or_reformed_trigger = yes
							NOT = { has_artifact = gjallarhorn }
						}

						set_character_flag = gjallarhorn
					}
					
					# JD
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_dragon_amulet
							}
						}
						
						set_character_flag = chinese_dragon_amulet
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = water_clock
							}
						}
						
						set_character_flag = water_clock
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = jian_sword
							}
						}
						
						set_character_flag = jian_sword
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = wuzi_exists
							NOT = {
								has_artifact = wuzi
							}
						}
						
						set_character_flag = wuzi
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = thirty_six_stratagems_exists
							NOT = {
								has_artifact = thirty_six_stratagems
							}
						}
						
						set_character_flag = thirty_six_stratagems
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = methods_of_the_sima_exists
							NOT = {
								has_artifact = methods_of_the_sima
							}
						}
						
						set_character_flag = methods_of_the_sima
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_lord_shang_exists
							NOT = {
								has_artifact = book_of_lord_shang
							}
						}
						
						set_character_flag = book_of_lord_shang
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = wei_liaozi_exists
							NOT = {
								has_artifact = wei_liaozi
							}
						}
						
						set_character_flag = wei_liaozi
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = sun_bins_art_of_war_exists
							NOT = {
								has_artifact = sun_bins_art_of_war
							}
						}
						
						set_character_flag = sun_bins_art_of_war
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = mencius_exists
							NOT = {
								has_artifact = mencius
							}
						}
						
						set_character_flag = mencius
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = verses_of_chu_exists
							NOT = {
								has_artifact = verses_of_chu
							}
						}
						
						set_character_flag = verses_of_chu
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = master_lus_spring_and_autumn_annals_exists
							NOT = {
								has_artifact = master_lus_spring_and_autumn_annals
							}
						}
						
						set_character_flag = master_lus_spring_and_autumn_annals
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = xunzi_exists
							NOT = {
								has_artifact = xunzi
							}
						}
						
						set_character_flag = xunzi
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = han_feizi_exists
							NOT = {
								has_artifact = han_feizi
							}
						}
						
						set_character_flag = han_feizi
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = analects_exists
							NOT = {
								has_artifact = analects
							}
						}
						
						set_character_flag = analects
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = complete_essentials_for_military_classics_exists
							NOT = {
								has_artifact = complete_essentials_for_military_classics
							}
						}
						
						set_character_flag = complete_essentials_for_military_classics
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = womens_analects_exists
							NOT = {
								has_artifact = womens_analects
							}
						}
						
						set_character_flag = womens_analects
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = eighteen_songs_of_a_nomad_flute_exists
							NOT = {
								has_artifact = eighteen_songs_of_a_nomad_flute
							}
						}
						
						set_character_flag = eighteen_songs_of_a_nomad_flute
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_ceremonial_robes
							}
						}
						
						set_character_flag = chinese_ceremonial_robes
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = silk_shroud
							}
						}
						
						set_character_flag = silk_shroud
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_ji
							}
						}
						
						set_character_flag = chinese_ji
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_crossbow
							}
						}
						
						set_character_flag = chinese_crossbow
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_bronze_sculpture
							}
						}
						
						set_character_flag = chinese_bronze_sculpture
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_tapestry_grand
							}
						}
						
						set_character_flag = chinese_tapestry_grand
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_book_health
							}
						}
						
						set_character_flag = chinese_book_health
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_book_law
							}
						}
						
						set_character_flag = chinese_book_law
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_book_economy
							}
						}
						
						set_character_flag = chinese_book_economy
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = the_commentary_of_zuo_exists
							NOT = {
								has_artifact = the_commentary_of_zuo
							}
						}
						
						set_character_flag = the_commentary_of_zuo
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_origins_exists
							NOT = {
								has_artifact = book_of_origins
							}
						}
						
						set_character_flag = book_of_origins
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = rites_of_zhou_exists
							NOT = {
								has_artifact = rites_of_zhou
							}
						}
						
						set_character_flag = rites_of_zhou
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = erya_exists
							NOT = {
								has_artifact = erya
							}
						}
						
						set_character_flag = erya
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = spring_and_autumn_annals_of_the_sixteen_kingdoms_exists
							NOT = {
								has_artifact = spring_and_autumn_annals_of_the_sixteen_kingdoms
							}
						}
						
						set_character_flag = spring_and_autumn_annals_of_the_sixteen_kingdoms
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = classic_of_tea_exists
							NOT = {
								has_artifact = classic_of_tea
							}
						}
						
						set_character_flag = classic_of_tea
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = tongdian_exists
							NOT = {
								has_artifact = tongdian
							}
						}
						
						set_character_flag = tongdian
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = records_of_the_nine_kingdoms_exists
							NOT = {
								has_artifact = records_of_the_nine_kingdoms
							}
						}
						
						set_character_flag = records_of_the_nine_kingdoms
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = comprehensive_mirror_in_aid_of_governance_exists
							NOT = {
								has_artifact = comprehensive_mirror_in_aid_of_governance
							}
						}
						
						set_character_flag = comprehensive_mirror_in_aid_of_governance
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = dream_pool_essays_exists
							NOT = {
								has_artifact = dream_pool_essays
							}
						}
						
						set_character_flag = dream_pool_essays
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = treatise_of_tea_exists
							NOT = {
								has_artifact = treatise_of_tea
							}
						}
						
						set_character_flag = treatise_of_tea
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = daozang_exists
							NOT = {
								has_artifact = daozang
							}
						}
						
						set_character_flag = daozang
					}
					
					# Chinese - general
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = houmuwu_ding
							}
						}
						
						set_character_flag = houmuwu_ding
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = ganjiang
							}
						}
						
						set_character_flag = ganjiang
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = moye
							}
						}
						
						set_character_flag = moye
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = annals_of_the_warring_states_exists
							NOT = {
								has_artifact = annals_of_the_warring_states
							}
						}
						
						set_character_flag = annals_of_the_warring_states
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = six_secret_teachings_exists
							NOT = {
								has_artifact = six_secret_teachings
							}
						}
						
						set_character_flag = six_secret_teachings
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = three_strategies_of_huang_shigong_exists
							NOT = {
								has_artifact = three_strategies_of_huang_shigong
							}
						}
						
						set_character_flag = three_strategies_of_huang_shigong
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = collection_of_new_songs_from_the_jade_lake_exists
							NOT = {
								has_artifact = collection_of_new_songs_from_the_jade_lake
							}
						}
						
						set_character_flag = collection_of_new_songs_from_the_jade_lake
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = chronicles_of_huayang_exists
							NOT = {
								has_artifact = chronicles_of_huayang
							}
						}
						
						set_character_flag = chronicles_of_huayang
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = a_new_account_of_the_tales_of_the_world_exists
							NOT = {
								has_artifact = a_new_account_of_the_tales_of_the_world
							}
						}
						
						set_character_flag = a_new_account_of_the_tales_of_the_world
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = questions_and_replies_between_tang_taizong_and_li_weigong_exists
							NOT = {
								has_artifact = questions_and_replies_between_tang_taizong_and_li_weigong
							}
						}
						
						set_character_flag = questions_and_replies_between_tang_taizong_and_li_weigong
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = shitong_exists
							NOT = {
								has_artifact = shitong
							}
						}
						
						set_character_flag = shitong
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = extensive_records_of_the_taiping_era_exists
							NOT = {
								has_artifact = extensive_records_of_the_taiping_era
							}
						}
						
						set_character_flag = extensive_records_of_the_taiping_era
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = institutions_of_the_five_dynasties_period_exists
							NOT = {
								has_artifact = institutions_of_the_five_dynasties_period
							}
						}
						
						set_character_flag = institutions_of_the_five_dynasties_period
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = readings_of_the_taiping_era_exists
							NOT = {
								has_artifact = readings_of_the_taiping_era
							}
						}
						
						set_character_flag = readings_of_the_taiping_era
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = finest_blossoms_in_the_garden_of_literature_exists
							NOT = {
								has_artifact = finest_blossoms_in_the_garden_of_literature
							}
						}
						
						set_character_flag = finest_blossoms_in_the_garden_of_literature
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = universal_geography_of_the_taiping_era_exists
							NOT = {
								has_artifact = universal_geography_of_the_taiping_era
							}
						}
						
						set_character_flag = universal_geography_of_the_taiping_era
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = models_from_the_archives_exists
							NOT = {
								has_artifact = models_from_the_archives
							}
						}
						
						set_character_flag = models_from_the_archives
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = a_description_of_barbarian_nations_exists
							NOT = {
								has_artifact = a_description_of_barbarian_nations
							}
							NOR = {
								culture_group = mon_khmer_group
								culture_group = mekong_group
								culture_group = malay_group
								culture_group = javanese_group
								culture_group = burmese_group
								culture_group = chamic
								culture_group = koreanic
								culture_group = japonic
								culture_group = indo_aryan_group
								culture_group = dravidian_group
								culture = coptic
								culture = bedouin_arabic
								culture = levantine_arabic
								culture = egyptian_arabic
								culture_group = east_african
							}
						}
						
						set_character_flag = a_description_of_barbarian_nations
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = huangdi_neijing_exists
							NOT = {
								has_artifact = huangdi_neijing
							}
						}
						
						set_character_flag = huangdi_neijing
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = wushier_bingfang_exists
							NOT = {
								has_artifact = wushier_bingfang
							}
						}
						
						set_character_flag = wushier_bingfang
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = zhouyi_cantong_qi_exists
							NOT = {
								has_artifact = zhouyi_cantong_qi
							}
						}
						
						set_character_flag = zhouyi_cantong_qi
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = baopuzi_exists
							NOT = {
								has_artifact = baopuzi
							}
						}
						
						set_character_flag = baopuzi
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = danjing_yaoyue_exists
							NOT = {
								has_artifact = danjing_yaoyue
							}
						}
						
						set_character_flag = danjing_yaoyue
					}
						
					# Shennong Bencaojing
					10 = {
						trigger = {
							religion_openly_chinese_or_reformed_trigger = yes
							has_global_flag = shennong_bencaojing_exists
							NOT = {
								has_artifact = shennong_bencaojing
							}
						}
						
						set_character_flag = shennong_bencaojing
					}
						
					# Zhong he ji
					10 = {
						trigger = {
							religion = taoist
							has_global_flag = zhong_he_ji_exists
							NOT = {
								has_artifact = zhong_he_ji
							}
						}
						
						set_character_flag = zhong_he_ji
					}
					
					# Japanese - general
					10 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							NOT = {
								has_artifact = totsuka_no_tsurugi
							}
						}
						
						set_character_flag = totsuka_no_tsurugi
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							has_global_flag = kojiki_exists
							NOT = {
								has_artifact = kojiki
							}
						}
						
						set_character_flag = kojiki
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							has_global_flag = nihon_shoki_exists
							NOT = {
								has_artifact = nihon_shoki
							}
						}
						
						set_character_flag = nihon_shoki
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_japan
							}
							has_global_flag = ishinpo_exists
							NOT = {
								has_artifact = ishinpo
							}
						}
						
						set_character_flag = ishinpo
					}
					
					# Hwarang Segi
					10 = {
						trigger = {
							OR = {
								religion_openly_korean_or_reformed_trigger = yes
								AND = {
									culture_group = koreanic
									OR = {
										religion = buddhist
										has_chinese_eastern_religion_trigger = yes
									}
								}
							}
							NOT = {
								has_artifact = hwarang_segi
							}
						}
						
						set_character_flag = hwarang_segi
					}
					
					# Works of Shan Yu
					10 = {
						trigger = {
							has_chinese_government_trigger = yes
							NOT = {
								has_artifact = works_of_shan_yu
							}
						}
						
						set_character_flag = works_of_shan_yu
					}
				}
			}

			relic_rumor_minor = { # T1 and T2
				random_list = {
					# Generic artifacts
					10 = { # Famous Head
						trigger = {
							religion_group = christian
							NOT = {
								has_artifact = famous_head
							}
						}

						set_character_flag = famous_head
					}

					10 = { # Famous Tongue
						trigger = {
							religion_group = christian
							NOT = {
								has_artifact = famous_tongue
							}
						}

						set_character_flag = famous_tongue
					}

					#10 = { # Infamous Tongue
					#	trigger = {
					#		always = no
					#		NOT = { has_artifact = infamous_tongue }
					#	}
					#
					#	set_character_flag = infamous_tongue
					#}

					10 = { # Famous Hand
						trigger = {
							religion_group = christian
							NOT = {
								has_artifact = famous_hand
							}
						}

						set_character_flag = famous_hand
					}

					10 = { # Famous Arm
						trigger = {
							religion_group = christian
							NOT = {
								has_artifact = famous_arm
							}
						}

						set_character_flag = famous_arm
					}

					10 = { # Famous Foot
						trigger = {
							religion_group = christian
							NOT = {
								has_artifact = famous_foot
							}
						}

						set_character_flag = famous_foot
					}

					10 = { # Famous Ancient Rusty Weapon
						trigger = {
							NOT = { has_artifact = famous_ancient_weapon }
						}

						set_character_flag = famous_ancient_weapon
					}

					# Christian artifacts
					20 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = fingerbone_of_saint }
						}

						set_character_flag = fingerbone_of_saint
					}

					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = chains_of_st_peter }
						}

						set_character_flag = chains_of_st_peter
					}

					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = right_hand_st_demetrius }
						}

						set_character_flag = right_hand_st_demetrius
					}

					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = veil_of_veronica }
						}

						set_character_flag = veil_of_veronica
					}

					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = remains_of_st_cessianus }
						}

						set_character_flag = remains_of_st_cessianus
					}

					10 = {
						trigger = {
							religion_group = christian
							NOT = { has_artifact = weeping_statue }
						}

						set_character_flag = weeping_statue
					}

					# Jewish artifacts
					10 = {
						trigger = {
							religion_group = jewish_group
							NOT = { has_artifact = davids_sling }
						}

						set_character_flag = davids_sling
					}

					# Muslim artifacts
					10 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = mohammads_beard }
						}

						set_character_flag = mohammads_beard
					}

					20 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = water_of_blessed_mantle }
						}

						set_character_flag = water_of_blessed_mantle
					}

					10 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = tooth_of_mohammad }
						}

						set_character_flag = tooth_of_mohammad
					}

					10 = {
						trigger = {
							religion_group = muslim
							NOT = { has_artifact = mohammads_bowl }
						}

						set_character_flag = mohammads_bowl
					}

					# Zoroastrian artifacts
					10 = {
						trigger = {
							religion_group = zoroastrian_group
							NOT = { has_artifact = haoma_sapling }
						}

						set_character_flag = haoma_sapling
					}

					20 = {
						trigger = {
							religion_group = zoroastrian_group
							NOT = { has_artifact = keshmar_cypress_branch }
						}

						set_character_flag = keshmar_cypress_branch
					}

					# Dharmic artifacts
					10 = {
						trigger = {
							religion = buddhist
							NOT = { has_artifact = sarira }
						}

						set_character_flag = sarira
					}
					
					# JD
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_artwork
							}
						}
						
						set_character_flag = chinese_artwork
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_calligraphy
							}
						}
						
						set_character_flag = chinese_calligraphy
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_sculpture
							}
						}
						
						set_character_flag = chinese_sculpture
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_arm_protector
							}
						}
						
						set_character_flag = chinese_arm_protector
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_serpent_spear
							}
						}
						
						set_character_flag = chinese_serpent_spear
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_tapestry
							}
						}
						
						set_character_flag = chinese_tapestry
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = history_of_the_southern_dynasties_exists
							NOT = {
								has_artifact = history_of_the_southern_dynasties
							}
						}
						
						set_character_flag = history_of_the_southern_dynasties
					}
					
					10 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = history_of_the_northern_dynasties_exists
							NOT = {
								has_artifact = history_of_the_northern_dynasties
							}
						}
						
						set_character_flag = history_of_the_northern_dynasties
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							NOT = {
								has_artifact = chinese_painting_of_glitterhoof
							}
						}
						
						set_character_flag = chinese_painting_of_glitterhoof
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_han_exists
							NOT = {
								has_artifact = book_of_han
							}
						}
						
						set_character_flag = book_of_han
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = weilue_exists
							NOT = {
								has_artifact = weilue
							}
						}
						
						set_character_flag = weilue
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_the_later_han_exists
							NOT = {
								has_artifact = book_of_the_later_han
							}
						}
						
						set_character_flag = book_of_the_later_han
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_song_exists
							NOT = {
								has_artifact = book_of_song
							}
						}
						
						set_character_flag = book_of_song
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_qi_exists
							NOT = {
								has_artifact = book_of_qi
							}
						}
						
						set_character_flag = book_of_qi
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_wei_exists
							NOT = {
								has_artifact = book_of_wei
							}
						}
						
						set_character_flag = book_of_wei
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_liang_exists
							NOT = {
								has_artifact = book_of_liang
							}
						}
						
						set_character_flag = book_of_liang
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_chen_exists
							NOT = {
								has_artifact = book_of_chen
							}
						}
						
						set_character_flag = book_of_chen
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_northern_qi_exists
							NOT = {
								has_artifact = book_of_northern_qi
							}
						}
						
						set_character_flag = book_of_northern_qi
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_zhou_exists
							NOT = {
								has_artifact = book_of_zhou
							}
						}
						
						set_character_flag = book_of_zhou
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_jin_exists
							NOT = {
								has_artifact = book_of_jin
							}
						}
						
						set_character_flag = book_of_jin
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = book_of_sui_exists
							NOT = {
								has_artifact = book_of_sui
							}
						}
						
						set_character_flag = book_of_sui
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = old_book_of_tang_exists
							NOT = {
								has_artifact = old_book_of_tang
							}
						}
						
						set_character_flag = old_book_of_tang
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = new_book_of_tang_exists
							NOT = {
								has_artifact = new_book_of_tang
							}
						}
						
						set_character_flag = new_book_of_tang
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = records_of_rumors_from_sushui_exists
							NOT = {
								has_artifact = records_of_rumors_from_sushui
							}
						}
						
						set_character_flag = records_of_rumors_from_sushui
					}
					
					20 = {
						trigger = {
							has_dlc = "Jade Dragon"
							JD_artifact_discovery_possible_trigger = yes
							has_global_flag = huang_song_shichao_gangyao_exists
							NOT = {
								has_artifact = huang_song_shichao_gangyao
							}
						}
						
						set_character_flag = huang_song_shichao_gangyao
					}
					
					# Chinese - general
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = five_stars_rise_in_the_east_arm_protector
							}
						}
						
						set_character_flag = five_stars_rise_in_the_east_arm_protector
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = put_down_south_qiang_arm_protector
							}
						}
						
						set_character_flag = put_down_south_qiang_arm_protector
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = silk_painting_depicting_a_man_riding_a_dragon
							}
						}
						
						set_character_flag = silk_painting_depicting_a_man_riding_a_dragon
					}
					
					10 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = great_tang_treatise_on_astrology_of_the_kaiyuan_era_exists
							NOT = {
								has_artifact = great_tang_treatise_on_astrology_of_the_kaiyuan_era
							}
						}
						
						set_character_flag = great_tang_treatise_on_astrology_of_the_kaiyuan_era
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = lost_book_of_zhou
							}
						}
						
						set_character_flag = lost_book_of_zhou
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							NOT = {
								has_artifact = jingchu_suishiji
							}
						}
						
						set_character_flag = jingchu_suishiji
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = sunzi_suanjing_exists
							NOT = {
								has_artifact = sunzi_suanjing
							}
						}
						
						set_character_flag = sunzi_suanjing
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = classic_of_go_exists
							NOT = {
								has_artifact = classic_of_go
							}
						}
						
						set_character_flag = classic_of_go
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = summary_of_events_in_the_eastern_capital_exists
							NOT = {
								has_artifact = summary_of_events_in_the_eastern_capital
							}
						}
						
						set_character_flag = summary_of_events_in_the_eastern_capital
					}
					
					20 = {
						trigger = {
							any_realm_province = {
								region = world_china
							}
							has_global_flag = records_of_the_khitan_stele_exists
							NOT = {
								has_artifact = records_of_the_khitan_stele
							}
							NOT = {
								culture = khitan
							}
						}
						
						set_character_flag = records_of_the_khitan_stele
					}
					
					# Art of War page
					20 = {
						trigger = {
							OR = {
								is_close_to_china_or_along_the_silk_road_trigger = yes
								region = world_china
								region = world_korea
								region = world_vietnam
								region = world_balhae
								region = world_japan
								region = world_ryukyu
							}
							has_global_flag = art_of_war_exists
							NOT = {
								has_artifact = art_of_war_page
							}
						}
						
						set_character_flag = art_of_war_page
					}
				}
			}
		}

		if = {
			limit = {
				OR = {
					# T5
					has_character_flag = bones_of_st_peter
					has_character_flag = staff_of_moses
					has_character_flag = davids_harp
					has_character_flag = ark_of_the_covenant
					has_character_flag = seal_of_mohammad
					has_character_flag = holy_banner_of_mohammad
					has_character_flag = blessed_mantle
					has_character_flag = cup_of_jamshid
					has_character_flag = babr_e_bayan
					has_character_flag = buddhas_tooth
					has_character_flag = mountain_of_light_diamond
					has_character_flag = andvaranaut
					has_character_flag = mjolnir
					has_character_flag = fetish_of_souls
					has_character_flag = sampo
					has_character_flag = axe_of_perun
					has_character_flag = axe_of_perkunas
					has_character_flag = yada_tashy
					has_character_flag = jade_dragon
					has_character_flag = art_of_war
					has_character_flag = classic_of_poetry
					has_character_flag = etiquette_and_ceremonial
					has_character_flag = i_ching
					has_character_flag = discourse_of_the_states
					has_character_flag = spring_and_autumn_annals
					has_character_flag = mozi
					has_character_flag = classic_of_filial_piety
					has_character_flag = tao_te_ching
					has_character_flag = book_of_rites
					has_character_flag = book_of_documents_old
					has_character_flag = book_of_documents_new
					has_character_flag = zhuangzi
					has_character_flag = records_of_the_grand_historian
					has_character_flag = classic_of_mountains_and_seas
					has_character_flag = records_of_the_three_kingdoms
					has_character_flag = old_history_of_the_five_dynasties
					has_character_flag = new_history_of_the_five_dynasties
					has_character_flag = lessons_for_women
					has_character_flag = sword_of_goujian
					has_character_flag = spear_of_fuchai
					has_character_flag = green_dragon_crescent_blade
					has_character_flag = dragon_phoenix_sword
					has_character_flag = zhanlu
					has_character_flag = juque
					has_character_flag = shengxie
					has_character_flag = yuchang
					has_character_flag = chunjun
					has_character_flag = longyuan
					has_character_flag = taie
					has_character_flag = gongbu
					has_character_flag = nine_tripod_cauldrons
					has_character_flag = kogarasu_maru
					has_character_flag = dojigiri
					has_character_flag = onimaru
					has_character_flag = mikazuki
					has_character_flag = odenta
					has_character_flag = juzumaru
					has_character_flag = tale_of_genji
					has_character_flag = the_pillow_book
					has_character_flag = tale_of_the_heike
				}
			}

			narrative_event = { id = MNM.9800 } # Quality 5 artifact
		}
		else = {
			character_event = { id = MNM.9801 } # Lower quality artifact
		}
	}
}

# If the searcher can no longer fulfill their duties
character_event = {
	id = MNM.9009
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_MNM_9009_A
		trigger = {
			NOR = {
				has_character_modifier = relic_rumor_minor
				has_character_modifier = relic_rumor_medium
				has_character_modifier = relic_rumor_major
			}
		}
	}
	desc = {
		text = EVTDESC_MNM_9009_B
		trigger = {
			OR = {
				has_character_modifier = relic_rumor_minor
				has_character_modifier = relic_rumor_medium
				has_character_modifier = relic_rumor_major
			}
		}
	}

	is_triggered_only = yes

	has_dlc = "Mystics"

	trigger = {
		NOT = { has_character_flag = show_this_event } # fix to deal with duplicate event
	}

	immediate = {
		set_character_flag = show_this_event
	}

	option = {
		name = ALAS

		if = {
			limit = {
				OR = {
					has_character_modifier = relic_rumor_minor
					has_character_modifier = relic_rumor_medium
					has_character_modifier = relic_rumor_major
				}
			}

			clr_artifact_searcher_effect = yes
			custom_tooltip = { text = EVTOPTB_MNM_9006_TT } # an attempt at more clarity
		}
		else = {
			clr_artifact_flagsmodifiers_effect = yes
		}

		hidden_effect = { # If your previous searcher was shit, you don't have to start below zero progress
			if = {
				limit = {
					check_variable = {
						which = relic_score
						value < 0
					}
				}

				set_variable = {
					which = relic_score
					value = 0
				}
			}
		}

		clr_character_flag = show_this_event
	}
}

# Asking for help, diplomacy
character_event = {
	id = MNM.9020
	desc = EVTDESC_MNM_9020
	picture = GFX_evt_state_diplomacy
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9020

		custom_tooltip = { text = EVTOPTA_MNM_9020_TT }

		add_character_modifier = {
			name = treasure_hunting_diplomats
			years = 5
		}

		hidden_effect = { change_variable = { which = relic_score value = 5 } }
	}

	option = {
		name = EVTOPTB_MNM_9020

		custom_tooltip = { text = EVTOPTB_MNM_9020_TT }

		hidden_effect = { change_variable = { which = relic_score value = -1 } }
	}
}

# Asking for help, martial
character_event = {
	id = MNM.9021
	desc = EVTDESC_MNM_9021
	picture = GFX_evt_bandits
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9021

		custom_tooltip = { text = EVTOPTA_MNM_9020_TT }

		add_character_modifier = {
			name = treasure_hunting_soldiers
			years = 5
		}

		hidden_effect = { change_variable = { which = relic_score value = 5 } }
	}

	option = {
		name = EVTOPTB_MNM_9020

		custom_tooltip = { text = EVTOPTB_MNM_9020_TT }

		hidden_effect = { change_variable = { which = relic_score value = -1 } }
	}
}

# Asking for help, stewardship
character_event = {
	id = MNM.9022
	desc = EVTDESC_MNM_9022
	picture = GFX_evt_merchant_caravan
	border = GFX_event_normal_frame_economy

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9022

		custom_tooltip = { text = EVTOPTA_MNM_9020_TT }

		add_character_modifier = {
			name = treasure_hunting_stewards
			years = 5
		}

		hidden_effect = { change_variable = { which = relic_score value = 5 } }
	}

	option = {
		name = EVTOPTB_MNM_9022

		custom_tooltip = { text = EVTOPTB_MNM_9020_TT }

		hidden_effect = { change_variable = { which = relic_score value = -1 } }
	}
}

# Asking for help, intrigue
character_event = {
	id = MNM.9023
	desc = EVTDESC_MNM_9023
	picture = GFX_evt_shady_meeting
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	has_dlc = "Mystics"

	immediate = { # For loc
		random_independent_ruler = {
			limit = {
				is_within_diplo_range = ROOT
				NOT = { character = ROOT }
			}

			save_event_target_as = spy_target

			random_vassal = {
				limit = {
					higher_tier_than = BARON
					NOT = { character = ROOT }
				}

				save_event_target_as = spy_target
			}
		}

		event_target:spy_target = {
			primary_title = { save_event_target_as = spy_title }
		}
	}

	option = {
		name = EVTOPTA_MNM_9023

		custom_tooltip = { text = EVTOPTA_MNM_9020_TT }

		add_character_modifier = {
			name = treasure_hunting_spies
			years = 5
		}

		hidden_effect = { change_variable = { which = relic_score value = 5 } }
	}

	option = {
		name = EVTOPTB_MNM_9020

		custom_tooltip = { text = EVTOPTB_MNM_9020_TT }

		hidden_effect = { change_variable = { which = relic_score value = -1 } }
	}
}

# Asking for help, learning
character_event = {
	id = MNM.9024
	desc = EVTDESC_MNM_9024
	picture = GFX_evt_gathering_of_minds
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	has_dlc = "Mystics"

	immediate = { # for loc
		primary_title = { save_event_target_as = primary_title }
	}

	option = {
		name = EVTOPTA_MNM_9024

		custom_tooltip = { text = EVTOPTA_MNM_9020_TT }

		add_character_modifier = {
			name = treasure_hunting_scholars
			years = 5
		}

		hidden_effect = { change_variable = { which = relic_score value = 5 } }
	}

	option = {
		name = EVTOPTB_MNM_9020

		custom_tooltip = { text = EVTOPTB_MNM_9020_TT }

		hidden_effect = { change_variable = { which = relic_score value = -1 } }
	}
}

# Ask for money
character_event = {
	id = MNM.9025
	desc = EVTDESC_MNM_9025
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_economy

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9025

		custom_tooltip = { text = EVTOPTA_MNM_9020_TT }

		scaled_wealth = { value = -0.5 min = -30 }

		hidden_effect = {
			random_list = {
				80 = {
					change_variable = {
						which = relic_score
						value = 3
					}
				}

				10 = { # You discover that they pocketed the money
					trigger = {
						event_target:relic_hunter = {
							ai = yes
							NOR = {
								trait = honest
								is_lover = ROOT
							}
						}
					}

					mult_modifier = {
						factor = 1.5

						event_target:relic_hunter = {
							OR = {
								trait = greedy
								trait = deceitful
								is_rival = ROOT
							}
						}
					}

					character_event = {
						id = MNM.9026
						days = 14
						random = 14
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_9024

		custom_tooltip = { text = EVTOPTB_MNM_9025_TT }
	}
}

# Stealing discovered
character_event = {
	id = MNM.9026
	desc = EVTDESC_MNM_9026
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_economy

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9026

		custom_tooltip = { text = EVTOPTA_MNM_9026_TT }

		opinion = {
			name = opinion_thief
			who = event_target:relic_hunter
			years = 10
		}
	}

	option = {
		name = EVTOPTB_MNM_9026

		custom_tooltip = { text = EVTOPTB_MNM_9026_TT }

		hidden_effect = { change_variable = { which = relic_score value = 3 } }
	}
}

# Messed up big
character_event = {
	id = MNM.9027
	desc = EVTDESC_MNM_9027
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9027

		custom_tooltip = { text = EVTOPTA_MNM_9027_TT }

		opinion = {
			name = opinion_useless_moron
			who = event_target:relic_hunter
			years = 10
		}

		hidden_effect = { change_variable = { which = relic_score value = -3 } }
	}
}

# Upgrade to bigger rumor
character_event = {
	id = MNM.9028
	desc = EVTDESC_MNM_9028
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9028

		custom_tooltip = { text = EVTOPTA_MNM_9028_TT }

		random = {
			chance = 20
			add_trait_stressed_effect = yes
		}

		if = {
			limit = { has_character_modifier = relic_rumor_medium }

			remove_character_modifier = relic_rumor_medium

			add_character_modifier = {
				name = relic_rumor_major
				years = 15
			}
		}
		else_if = {
			limit = { has_character_modifier = relic_rumor_minor }

			remove_character_modifier = relic_rumor_minor

			add_character_modifier = {
				name = relic_rumor_medium
				years = 10
			}
		}

		hidden_effect = { multiply_variable = { which = relic_score value = 0.5 } }
	}

	option = {
		name = EVTOPTB_MNM_9028
	}
}

# Terrible accident
character_event = {
	id = MNM.9029
	desc = EVTDESC_MNM_9029
	picture = GFX_evt_burning_house
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = {
		name = EVTOPTA_MNM_9029

		event_target:relic_hunter = {
			random_accident_death_effect = yes
		}
	}
}

# Dead artifact hunter ping
character_event = {
	id = MNM.9030

	hide_window = yes
	is_triggered_only = yes # on_death

	has_dlc = "Mystics"
	has_character_flag = relic_hunter

	immediate = {
		save_event_target_as = relic_hunter

		liege = {
			character_event = { id = MNM.9009 }
		}
	}
}

# Artifact search update event - progress
character_event = {
	id = MNM.9031
	desc = EVTDESC_MNM_9031_B
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_religion

	notification = yes
	is_triggered_only = yes

	has_dlc = "Mystics"
	ai = no

	option = {
		name = EXCELLENT
	}
}

# Artifact search update event - setback
character_event = {
	id = MNM.9032
	desc = EVTDESC_MNM_9032
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	has_dlc = "Mystics"
	ai = no

	option = {
		name = UNFORTUNATE
	}
}

# Imprisoned artifact hunter ping
character_event = {
	id = MNM.9033

	hide_window = yes
	is_triggered_only = yes # on_become_imprisoned_any_reason

	has_dlc = "Mystics"
	has_character_flag = relic_hunter

	immediate = {
		save_event_target_as = relic_hunter

		liege = {
			character_event = { id = MNM.9009 }
		}
	}
}

# Artifact hunter councillor fired/retires ping
character_event = {
	id = MNM.9034

	hide_window = yes
	is_triggered_only = yes # title lose_effect/retire_effect

	has_dlc = "Mystics"
	has_character_flag = relic_hunter

	immediate = {
		save_event_target_as = relic_hunter

		liege = {
			character_event = { id = MNM.9009 }
		}
	}
}

# Artifact search update event - progress nearing end
character_event = {
	id = MNM.9035
	desc = EVTDESC_MNM_9031_A
	picture = GFX_evt_recieve_letter
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	has_dlc = "Mystics"
	ai = no

	option = {
		name = EXCELLENT
	}
}

### Return Event ###

## Quality 5 ##
narrative_event = {
	id = MNM.9800
	border = GFX_event_narrative_frame_religion

	title = {
		text = EVTNAME_MNM_9804
		trigger = { has_character_flag = bones_of_st_peter }
	}
	title = {
		text = EVTNAME_MNM_9810
		trigger = { has_character_flag = staff_of_moses }
	}
	title = {
		text = EVTNAME_MNM_9811
		trigger = { has_character_flag = davids_harp }
	}
	title = {
		text = EVTTITLE_MNM_9890
		trigger = { has_character_flag = ark_of_the_covenant }
	}
	title = {
		text = EVTNAME_MNM_9820
		trigger = { has_character_flag = seal_of_mohammad }
	}
	title = {
		text = EVTNAME_MNM_9821
		trigger = { has_character_flag = holy_banner_of_mohammad }
	}
	title = {
		text = EVTNAME_MNM_9822
		trigger = { has_character_flag = blessed_mantle }
	}
	title = {
		text = EVTNAME_MNM_9830
		trigger = { has_character_flag = cup_of_jamshid }
	}
	title = {
		text = EVTNAME_MNM_9831
		trigger = { has_character_flag = babr_e_bayan }
	}
	title = {
		text = EVTNAME_MNM_9200
		trigger = { has_character_flag = buddhas_tooth }
	}
	title = {
		text = EVTNAME_MNM_9201
		trigger = { has_character_flag = mountain_of_light_diamond }
	}
	title = {
		text = EVTNAME_MNM_9601
		trigger = { has_character_flag = andvaranaut }
	}
	title = {
		text = EVTNAME_MNM_9602
		trigger = { has_character_flag = mjolnir }
	}
	title = {
		text = EVTNAME_MNM_9603
		trigger = { has_character_flag = fetish_of_souls }
	}
	title = {
		text = EVTNAME_MNM_9604
		trigger = { has_character_flag = sampo }
	}
	title = {
		text = EVTNAME_MNM_9605
		trigger = { has_character_flag = axe_of_perun }
	}
	title = {
		text = EVTNAME_MNM_9606
		trigger = { has_character_flag = axe_of_perkunas }
	}
	title = {
		text = EVTNAME_MNM_9607
		trigger = { has_character_flag = yada_tashy }
	}

	desc = {
		text = EVTDESC_MNM_9804
		trigger = { has_character_flag = bones_of_st_peter }
	}
	desc = {
		text = EVTDESC_MNM_9810
		trigger = { has_character_flag = staff_of_moses }
	}
	desc = {
		text = EVTDESC_MNM_9811
		trigger = { has_character_flag = davids_harp }
	}
	desc = {
		text = EVTDESC_MNM_9890
		trigger = { has_character_flag = ark_of_the_covenant }
	}
	desc = {
		text = EVTDESC_MNM_9820
		trigger = { has_character_flag = seal_of_mohammad }
	}
	desc = {
		text = EVTDESC_MNM_9821
		trigger = { has_character_flag = holy_banner_of_mohammad }
	}
	desc = {
		text = EVTDESC_MNM_9822
		trigger = { has_character_flag = blessed_mantle }
	}
	desc = {
		text = EVTDESC_MNM_9830
		trigger = { has_character_flag = cup_of_jamshid }
	}
	desc = {
		text = EVTDESC_MNM_9831
		trigger = { has_character_flag = babr_e_bayan }
	}
	desc = {
		text = EVTDESC_MNM_9200
		trigger = { has_character_flag = buddhas_tooth }
	}
	desc = {
		text = EVTDESC_MNM_9201
		trigger = { has_character_flag = mountain_of_light_diamond }
	}
	desc = {
		text = EVTDESC_MNM_9601
		trigger = { has_character_flag = andvaranaut }
	}
	desc = {
		text = EVTDESC_MNM_9602
		trigger = { has_character_flag = mjolnir }
	}
	desc = {
		text = EVTDESC_MNM_9603
		trigger = { has_character_flag = fetish_of_souls }
	}
	desc = {
		text = EVTDESC_MNM_9604
		trigger = { has_character_flag = sampo }
	}
	desc = {
		text = EVTDESC_MNM_9605
		trigger = { has_character_flag = axe_of_perun }
	}
	desc = {
		text = EVTDESC_MNM_9606
		trigger = { has_character_flag = axe_of_perkunas }
	}
	desc = {
		text = EVTDESC_MNM_9607
		trigger = { has_character_flag = yada_tashy }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_1
		trigger = { has_character_flag = jade_dragon }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_2
		trigger = { has_character_flag = art_of_war }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_3
		trigger = { has_character_flag = classic_of_poetry }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_4
		trigger = { has_character_flag = etiquette_and_ceremonial }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_5
		trigger = { has_character_flag = i_ching }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_6
		trigger = { has_character_flag = discourse_of_the_states }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_7
		trigger = { has_character_flag = spring_and_autumn_annals }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_8
		trigger = { has_character_flag = mozi }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_9
		trigger = { has_character_flag = classic_of_filial_piety }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_10
		trigger = { has_character_flag = tao_te_ching }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_11
		trigger = { has_character_flag = book_of_rites }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_12
		trigger = { has_character_flag = book_of_documents_old }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_13
		trigger = { has_character_flag = book_of_documents_new }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_14
		trigger = { has_character_flag = zhuangzi }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_15
		trigger = { has_character_flag = records_of_the_grand_historian }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_16
		trigger = { has_character_flag = classic_of_mountains_and_seas }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_17
		trigger = { has_character_flag = records_of_the_three_kingdoms }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_18
		trigger = { has_character_flag = old_history_of_the_five_dynasties }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_19
		trigger = { has_character_flag = new_history_of_the_five_dynasties }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_20
		trigger = { has_character_flag = lessons_for_women }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_21
		trigger = { has_character_flag = sword_of_goujian }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_22
		trigger = { has_character_flag = spear_of_fuchai }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_23
		trigger = { has_character_flag = green_dragon_crescent_blade }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_24
		trigger = { has_character_flag = dragon_phoenix_sword }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_25
		trigger = { has_character_flag = zhanlu }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_26
		trigger = { has_character_flag = juque }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_27
		trigger = { has_character_flag = shengxie }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_28
		trigger = { has_character_flag = yuchang }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_29
		trigger = { has_character_flag = chunjun }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_30
		trigger = { has_character_flag = longyuan }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_31
		trigger = { has_character_flag = taie }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_32
		trigger = { has_character_flag = gongbu }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_33
		trigger = { has_character_flag = nine_tripod_cauldrons }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_34
		trigger = { has_character_flag = kogarasu_maru }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_35
		trigger = { has_character_flag = dojigiri }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_36
		trigger = { has_character_flag = onimaru }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_37
		trigger = { has_character_flag = mikazuki }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_38
		trigger = { has_character_flag = odenta }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_39
		trigger = { has_character_flag = juzumaru }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_40
		trigger = { has_character_flag = tale_of_genji }
	}
	desc = {
		text = EVTDESC_MNM_9800_TIANXIA_41
		trigger = { has_character_flag = the_pillow_book }
	}

	picture = {
		picture = GFX_evt_relic_box
		trigger = {
			trigger_if = {
				limit = {
					could_have_chinese_government_trigger = yes
					could_have_japanese_government_trigger = yes
				}
				is_nomadic = yes
			}
			NOT = { religion_group = pagan_group }
		}
	}
	picture = {
		picture = GFX_evt_pagan_artifacts
		trigger = {
			religion_group = pagan_group
			trigger_if = {
				limit = {
					could_have_chinese_government_trigger = yes
					could_have_japanese_government_trigger = yes
				}
				is_nomadic = yes
			}
		}
	}
	picture = {
		picture = GFX_evt_china_diplomatic_success
		trigger = {
			OR = {
				could_have_chinese_government_trigger = yes
				could_have_japanese_government_trigger = yes
			}
			is_nomadic = no
		}
	}

	is_triggered_only = yes

	has_dlc = "Mystics"

	option = { # It's their duty
		name = EVTOPT_MAJOR_ARTIFACT_DUTY

		prestige = 10

		reverse_opinion = {
			name = opinion_extremely_disappointed
			who = event_target:relic_hunter
			years = 20
		}
	}

	option = { # Monetary reward
		name = EVTOPT_MAJOR_ARTIFACT_MONEY

		reverse_opinion = {
			name = opinion_was_rewarded
			who = event_target:relic_hunter
			years = 15
		}

		opinion = {
			name = opinion_found_major_artifact
			who = event_target:relic_hunter
			years = 15
		}

		transfer_scaled_wealth = {
			to = event_target:relic_hunter
			value = 1
			min = 50
		}
	}

	option = { # Reward them with a favor
		name = EVTOPT_MAJOR_ARTIFACT_FAVOR

		trigger = {
			NOT = { owes_favor_to = event_target:relic_hunter }
		}

		reverse_opinion = {
			name = opinion_was_rewarded
			who = event_target:relic_hunter
			years = 15
		}

		opinion = {
			name = opinion_found_major_artifact
			who = event_target:relic_hunter
			years = 15
		}

		reverse_add_favor = event_target:relic_hunter
	}

	option = { # Praise them (prestige reward)
		trigger = { diplomacy >= 15 }

		name = EVTOPT_MAJOR_ARTIFACT_PRESTIGE

		reverse_opinion = {
			name = opinion_was_praised
			who = event_target:relic_hunter
			years = 15
		}

		opinion = {
			name = opinion_found_major_artifact
			who = event_target:relic_hunter
			years = 5
		}

		event_target:relic_hunter = {
			show_scope_change = no

			prestige = 100
		}

		random = {
			chance = 20
			add_friend = event_target:relic_hunter
		}
	}

	after = {
		trigger_switch = {
			on_trigger = has_character_flag

			bones_of_st_peter                 = { add_artifact = bones_of_st_peter }
			staff_of_moses                    = { add_artifact = staff_of_moses }
			davids_harp                       = { add_artifact = davids_harp }
			ark_of_the_covenant               = { add_artifact = ark_of_the_covenant }
			seal_of_mohammad                  = { add_artifact = seal_of_mohammad }
			holy_banner_of_mohammad           = { add_artifact = holy_banner_of_mohammad }
			blessed_mantle                    = { add_artifact = blessed_mantle }
			cup_of_jamshid                    = { add_artifact = cup_of_jamshid }
			babr_e_bayan                      = { add_artifact = babr_e_bayan }
			buddhas_tooth                     = { add_artifact = buddhas_tooth }
			mountain_of_light_diamond         = { add_artifact = mountain_of_light_diamond }
			andvaranaut                       = { add_artifact = andvaranaut }
			mjolnir                           = { add_artifact = mjolnir }
			fetish_of_souls                   = { add_artifact = fetish_of_souls }
			sampo                             = { add_artifact = sampo }
			axe_of_perun                      = { add_artifact = axe_of_perun }
			axe_of_perkunas                   = { add_artifact = axe_of_perkunas }
			yada_tashy                        = { add_artifact = yada_tashy }
			jade_dragon                       = { add_artifact = jade_dragon }
			art_of_war                        = { add_artifact = art_of_war }
			classic_of_poetry                 = { add_artifact = classic_of_poetry }
			etiquette_and_ceremonial          = { add_artifact = etiquette_and_ceremonial }
			i_ching                           = { add_artifact = i_ching }
			discourse_of_the_states           = { add_artifact = discourse_of_the_states }
			spring_and_autumn_annals          = { add_artifact = spring_and_autumn_annals }
			mozi                              = { add_artifact = mozi }
			classic_of_filial_piety           = { add_artifact = classic_of_filial_piety }
			tao_te_ching                      = { add_artifact = tao_te_ching }
			book_of_rites                     = { add_artifact = book_of_rites }
			book_of_documents_old             = { add_artifact = book_of_documents_old }
			book_of_documents_new             = { add_artifact = book_of_documents_new }
			zhuangzi                          = { add_artifact = zhuangzi }
			records_of_the_grand_historian    = { add_artifact = records_of_the_grand_historian }
			classic_of_mountains_and_seas     = { add_artifact = classic_of_mountains_and_seas }
			records_of_the_three_kingdoms     = { add_artifact = records_of_the_three_kingdoms }
			old_history_of_the_five_dynasties = { add_artifact = old_history_of_the_five_dynasties }
			new_history_of_the_five_dynasties = { add_artifact = new_history_of_the_five_dynasties }
			lessons_for_women                 = { add_artifact = lessons_for_women }
			sword_of_goujian                  = { add_artifact = sword_of_goujian }
			spear_of_fuchai                   = { add_artifact = spear_of_fuchai }
			green_dragon_crescent_blade       = { add_artifact = green_dragon_crescent_blade }
			dragon_phoenix_sword              = { add_artifact = dragon_phoenix_sword }
			zhanlu                            = { add_artifact = zhanlu }
			juque                             = { add_artifact = juque }
			shengxie                          = { add_artifact = shengxie }
			yuchang                           = { add_artifact = yuchang }
			chunjun                           = { add_artifact = chunjun }
			longyuan                          = { add_artifact = longyuan }
			taie                              = { add_artifact = taie }
			gongbu                            = { add_artifact = gongbu }
			nine_tripod_cauldrons             = { add_artifact = nine_tripod_cauldrons }
			bamboo_annals                     = { add_artifact = bamboo_annals }
			kogarasu_maru                     = { add_artifact = kogarasu_maru }
			dojigiri                          = { add_artifact = dojigiri }
			onimaru                           = { add_artifact = onimaru }
			mikazuki                          = { add_artifact = mikazuki }
			odenta                            = { add_artifact = odenta }
			juzumaru                          = { add_artifact = juzumaru }
			tale_of_genji                     = { add_artifact = tale_of_genji }
			the_pillow_book                   = { add_artifact = the_pillow_book }
			tale_of_the_heike                 = { add_artifact = tale_of_the_heike }
		}

		new_artifact = { set_creation_date = 1.1.1 }
		clr_artifact_flagsmodifiers_effect = yes

		clr_character_flag = bones_of_st_peter
		clr_character_flag = staff_of_moses
		clr_character_flag = davids_harp
		clr_character_flag = ark_of_the_covenant
		clr_character_flag = seal_of_mohammad
		clr_character_flag = holy_banner_of_mohammad
		clr_character_flag = blessed_mantle
		clr_character_flag = cup_of_jamshid
		clr_character_flag = babr_e_bayan
		clr_character_flag = buddhas_tooth
		clr_character_flag = mountain_of_light_diamond
		clr_character_flag = andvaranaut
		clr_character_flag = mjolnir
		clr_character_flag = fetish_of_souls
		clr_character_flag = sampo
		clr_character_flag = axe_of_perun
		clr_character_flag = axe_of_perkunas
		clr_character_flag = yada_tashy
		clr_character_flag = jade_dragon
		clr_character_flag = art_of_war
		clr_character_flag = classic_of_poetry
		clr_character_flag = etiquette_and_ceremonial
		clr_character_flag = i_ching
		clr_character_flag = discourse_of_the_states
		clr_character_flag = spring_and_autumn_annals
		clr_character_flag = mozi
		clr_character_flag = classic_of_filial_piety
		clr_character_flag = tao_te_ching
		clr_character_flag = book_of_rites
		clr_character_flag = book_of_documents_old
		clr_character_flag = book_of_documents_new
		clr_character_flag = zhuangzi
		clr_character_flag = records_of_the_grand_historian
		clr_character_flag = classic_of_mountains_and_seas
		clr_character_flag = records_of_the_three_kingdoms
		clr_character_flag = old_history_of_the_five_dynasties
		clr_character_flag = new_history_of_the_five_dynasties
		clr_character_flag = lessons_for_women
		clr_character_flag = sword_of_goujian
		clr_character_flag = spear_of_fuchai
		clr_character_flag = green_dragon_crescent_blade
		clr_character_flag = dragon_phoenix_sword
		clr_character_flag = zhanlu
		clr_character_flag = juque
		clr_character_flag = shengxie
		clr_character_flag = yuchang
		clr_character_flag = chunjun
		clr_character_flag = longyuan
		clr_character_flag = taie
		clr_character_flag = gongbu
		clr_character_flag = nine_tripod_cauldrons
		clr_character_flag = bamboo_annals
		clr_character_flag = kogarasu_maru
		clr_character_flag = dojigiri
		clr_character_flag = onimaru
		clr_character_flag = mikazuki
		clr_character_flag = odenta
		clr_character_flag = juzumaru
		clr_character_flag = tale_of_genji
		clr_character_flag = the_pillow_book
		clr_character_flag = tale_of_the_heike
	}
}

# Lower quality
character_event = {
	id = MNM.9801
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_MNM_9835
		trigger = { has_character_flag = famous_head }
	}
	desc = {
		text = EVTDESC_MNM_9836
		trigger = { has_character_flag = famous_tongue }
	}
	#desc = {
	#	text = EVTDESC_MNM_9837
	#	trigger = { has_character_flag = infamous_tongue }
	#}
	desc = {
		text = EVTDESC_MNM_9838
		trigger = { has_character_flag = famous_hand }
	}
	desc = {
		text = EVTDESC_MNM_9839
		trigger = { has_character_flag = famous_arm }
	}
	desc = {
		text = EVTDESC_MNM_9840
		trigger = { has_character_flag = famous_foot }
	}
	desc = {
		text = EVTDESC_MNM_9841
		trigger = { has_character_flag = famous_ancient_weapon }
	}
	desc = {
		text = EVTDESC_MNM_9805
		trigger = { has_character_flag = seamless_robe_of_jesus }
	}
	desc = {
		text = EVTDESC_MNM_9806
		trigger = { has_character_flag = crown_of_thorns }
	}
	desc = {
		text = EVTDESC_MNM_9807
		trigger = { has_character_flag = fragment_of_true_cross }
	}
	desc = {
		text = EVTDESC_MNM_9808
		trigger = { has_character_flag = holy_foreskin }
	}
	desc = {
		text = EVTDESC_MNM_9809
		trigger = { has_character_flag = fingerbone_of_saint }
	}
	desc = {
		text = EVTDESC_MNM_9842
		trigger = { has_character_flag = chains_of_st_peter }
	}
	desc = {
		text = EVTDESC_MNM_9843
		trigger = { has_character_flag = right_hand_st_demetrius }
	}
	desc = {
		text = EVTDESC_MNM_9844
		trigger = { has_character_flag = veil_of_veronica }
	}
	desc = {
		text = EVTDESC_MNM_9845
		trigger = { has_character_flag = remains_of_st_cessanius }
	}
	desc = {
		text = EVTDESC_MNM_9846
		trigger = { has_character_flag = weeping_statue }
	}
	desc = {
		text = EVTDESC_MNM_9847
		trigger = { has_character_flag = image_of_edessa }
	}
	desc = {
		text = EVTDESC_MNM_9814
		trigger = { has_character_flag = seal_of_solomon }
	}
	desc = {
		text = EVTDESC_MNM_9853
		trigger = { has_character_flag = tabernacle }
	}
	desc = {
		text = EVTDESC_MNM_9854
		trigger = { has_character_flag = davids_sling }
	}
	desc = {
		text = EVTDESC_MNM_9823
		trigger = { has_character_flag = sword_of_mohammad }
	}
	desc = {
		text = EVTDESC_MNM_9824
		trigger = { has_character_flag = letter_of_mohammad }
	}
	desc = {
		text = EVTDESC_MNM_9848
		trigger = { has_character_flag = cloak_of_mohammad }
	}
	desc = {
		text = EVTDESC_MNM_9825
		trigger = { has_character_flag = mohammads_beard }
	}
	desc = {
		text = EVTDESC_MNM_9849
		trigger = { has_character_flag = tooth_of_mohammad }
	}
	desc = {
		text = EVTDESC_MNM_9826
		trigger = { has_character_flag = water_of_blessed_mantle }
	}
	desc = {
		text = EVTDESC_MNM_9850
		trigger = { has_character_flag = mohammads_bowl }
	}
	desc = {
		text = EVTDESC_MNM_9851
		trigger = { has_character_flag = blessed_sandals }
	}
	desc = {
		text = EVTDESC_MNM_9832
		trigger = { has_character_flag = derafsh_kaviani }
	}
	desc = {
		text = EVTDESC_MNM_9833
		trigger = { has_character_flag = haoma_sapling }
	}
	desc = {
		text = EVTDESC_MNM_9834
		trigger = { has_character_flag = keshmar_cypress_branch }
	}
	desc = {
		text = EVTDESC_MNM_9852
		trigger = { has_character_flag = cyrus_cilinder }
	}
	desc = {
		text = EVTDESC_MNM_9202
		trigger = { has_character_flag = elaborate_danda }
	}
	desc = {
		text = EVTDESC_MNM_9203
		trigger = { has_character_flag = sarira }
	}
	desc = {
		text = EVTDESC_MNM_9204
		trigger = { has_character_flag = sariraka_actual_body_part }
	}
	desc = {
		text = EVTDESC_MNM_9600
		trigger = { has_character_flag = gjallarhorn }
	}
	# TIANXIATODO: JD and Tianxia loc
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_1
		trigger = { has_character_flag = chinese_dragon_amulet }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_2
		trigger = { has_character_flag = chinese_artwork }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_3
		trigger = { has_character_flag = chinese_calligraphy }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_4
		trigger = { has_character_flag = chinese_sculpture }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_5
		trigger = { has_character_flag = chinese_ceremonial_robes }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_6
		trigger = { has_character_flag = silk_shroud }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_7
		trigger = { has_character_flag = water_clock }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_8
		trigger = { has_character_flag = jian_sword }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_9
		trigger = { has_character_flag = chinese_arm_protector }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_10
		trigger = { has_character_flag = chinese_serpent_spear }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_11
		trigger = { has_character_flag = chinese_ji }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_12
		trigger = { has_character_flag = chinese_crossbow }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_13
		trigger = { has_character_flag = chinese_bronze_sculpture }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_14
		trigger = { has_character_flag = chinese_painting_of_glitterhoof }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_15
		trigger = { has_character_flag = chinese_tapestry }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_16
		trigger = { has_character_flag = chinese_tapestry_grand }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_17
		trigger = { has_character_flag = chinese_book_health }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_18
		trigger = { has_character_flag = chinese_book_law }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_19
		trigger = { has_character_flag = chinese_book_economy }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_20
		trigger = { has_character_flag = wuzi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_21
		trigger = { has_character_flag = thirty_six_stratagems }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_22
		trigger = { has_character_flag = methods_of_the_sima }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_23
		trigger = { has_character_flag = book_of_lord_shang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_24
		trigger = { has_character_flag = wei_liaozi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_25
		trigger = { has_character_flag = sun_bins_art_of_war }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_26
		trigger = { has_character_flag = the_commentary_of_zuo }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_27
		trigger = { has_character_flag = mencius }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_28
		trigger = { has_character_flag = verses_of_chu }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_29
		trigger = { has_character_flag = master_lus_spring_and_autumn_annals }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_30
		trigger = { has_character_flag = xunzi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_31
		trigger = { has_character_flag = han_feizi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_32
		trigger = { has_character_flag = book_of_origins }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_33
		trigger = { has_character_flag = rites_of_zhou }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_34
		trigger = { has_character_flag = analects }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_35
		trigger = { has_character_flag = erya }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_36
		trigger = { has_character_flag = book_of_han }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_37
		trigger = { has_character_flag = weilue }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_38
		trigger = { has_character_flag = book_of_the_later_han }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_39
		trigger = { has_character_flag = book_of_song }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_40
		trigger = { has_character_flag = book_of_qi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_41
		trigger = { has_character_flag = spring_and_autumn_annals_of_the_sixteen_kingdoms }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_42
		trigger = { has_character_flag = book_of_wei }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_43
		trigger = { has_character_flag = book_of_liang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_44
		trigger = { has_character_flag = book_of_chen }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_45
		trigger = { has_character_flag = book_of_northern_qi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_46
		trigger = { has_character_flag = book_of_zhou }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_47
		trigger = { has_character_flag = book_of_jin }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_48
		trigger = { has_character_flag = book_of_sui }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_49
		trigger = { has_character_flag = history_of_the_southern_dynasties }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_50
		trigger = { has_character_flag = history_of_the_northern_dynasties }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_51
		trigger = { has_character_flag = classic_of_tea }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_52
		trigger = { has_character_flag = tongdian }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_53
		trigger = { has_character_flag = old_book_of_tang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_54
		trigger = { has_character_flag = records_of_the_nine_kingdoms }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_55
		trigger = { has_character_flag = complete_essentials_for_military_classics }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_56
		trigger = { has_character_flag = new_book_of_tang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_57
		trigger = { has_character_flag = comprehensive_mirror_in_aid_of_governance }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_58
		trigger = { has_character_flag = dream_pool_essays }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_59
		trigger = { has_character_flag = treatise_of_tea }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_60
		trigger = { has_character_flag = records_of_rumors_from_sushui }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_61
		trigger = { has_character_flag = huang_song_shichao_gangyao }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_62
		trigger = { has_character_flag = womens_analects }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_63
		trigger = { has_character_flag = eighteen_songs_of_a_nomad_flute }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_64
		trigger = { has_character_flag = daozang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_65
		trigger = { has_character_flag = five_stars_rise_in_the_east_arm_protector }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_66
		trigger = { has_character_flag = put_down_south_qiang_arm_protector }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_67
		trigger = { has_character_flag = silk_painting_depicting_a_man_riding_a_dragon }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_68
		trigger = { has_character_flag = nine_tripod_cauldrons }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_69
		trigger = { has_character_flag = houmuwu_ding }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_70
		trigger = { has_character_flag = ganjiang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_71
		trigger = { has_character_flag = moye }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_72
		trigger = { has_character_flag = hwarang_segi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_73
		trigger = { has_character_flag = works_of_shan_yu }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_74
		trigger = { has_character_flag = totsuka_no_tsurugi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_75
		trigger = { has_character_flag = lost_book_of_zhou }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_76
		trigger = { has_character_flag = annals_of_the_warring_states }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_77
		trigger = { has_character_flag = six_secret_teachings }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_78
		trigger = { has_character_flag = three_strategies_of_huang_shigong }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_79
		trigger = { has_character_flag = chronicles_of_huayang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_80
		trigger = { has_character_flag = a_new_account_of_the_tales_of_the_world }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_81
		trigger = { has_character_flag = sunzi_suanjing }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_82
		trigger = { has_character_flag = classic_of_go }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_83
		trigger = { has_character_flag = jingchu_suishiji }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_84
		trigger = { has_character_flag = questions_and_replies_between_tang_taizong_and_li_weigong }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_85
		trigger = { has_character_flag = shitong }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_86
		trigger = { has_character_flag = great_tang_treatise_on_astrology_of_the_kaiyuan_era }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_87
		trigger = { has_character_flag = extensive_records_of_the_taiping_era }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_88
		trigger = { has_character_flag = institutions_of_the_five_dynasties_period }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_89
		trigger = { has_character_flag = readings_of_the_taiping_era }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_90
		trigger = { has_character_flag = finest_blossoms_in_the_garden_of_literature }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_91
		trigger = { has_character_flag = universal_geography_of_the_taiping_era }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_92
		trigger = { has_character_flag = models_from_the_archives }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_93
		trigger = { has_character_flag = summary_of_events_in_the_eastern_capital }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_94
		trigger = { has_character_flag = a_description_of_barbarian_nations }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_95
		trigger = { has_character_flag = records_of_the_khitan_stele }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_96
		trigger = { has_character_flag = collection_of_new_songs_from_the_jade_lake }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_97
		trigger = { has_character_flag = zhong_he_ji }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_98
		trigger = { has_character_flag = huangdi_neijing }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_99
		trigger = { has_character_flag = shennong_bencaojing }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_100
		trigger = { has_character_flag = wushier_bingfang }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_101
		trigger = { has_character_flag = zhouyi_cantong_qi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_102
		trigger = { has_character_flag = baopuzi }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_103
		trigger = { has_character_flag = danjing_yaoyue }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_104
		trigger = { has_character_flag = kojiki }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_105
		trigger = { has_character_flag = nihon_shoki }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_106
		trigger = { has_character_flag = ishinpo }
	}
	desc = {
		text = EVTDESC_MNM_9801_TIANXIA_107
		trigger = { has_character_flag = art_of_war_page }
	}

	picture = {
		picture = GFX_evt_relic_box
		trigger = {
			trigger_if = {
				limit = {
					could_have_chinese_government_trigger = yes
					could_have_japanese_government_trigger = yes
				}
				is_nomadic = yes
			}
			NOT = { religion_group = pagan_group }
		}
	}
	picture = {
		picture = GFX_evt_pagan_artifacts
		trigger = {
			religion_group = pagan_group
			trigger_if = {
				limit = {
					could_have_chinese_government_trigger = yes
					could_have_japanese_government_trigger = yes
				}
				is_nomadic = yes
			}
		}
	}
	picture = {
		picture = GFX_evt_china_diplomatic_success
		trigger = {
			OR = {
				could_have_chinese_government_trigger = yes
				could_have_japanese_government_trigger = yes
			}
			is_nomadic = no
		}
	}

	is_triggered_only = yes

	has_dlc = "Mystics"

	immediate = {
		trigger_switch = {
			on_trigger = has_character_flag

			famous_head                                               = { add_artifact = famous_head }
			famous_tongue                                             = { add_artifact = famous_tongue }
			#infamous_tongue                                           = { add_artifact = infamous_tongue }
			famous_hand                                               = { add_artifact = famous_hand }
			famous_arm                                                = { add_artifact = famous_arm }
			famous_foot                                               = { add_artifact = famous_foot }
			famous_ancient_weapon                                     = { add_artifact = famous_ancient_weapon }
			seamless_robe_of_jesus                                    = { add_artifact = seamless_robe_of_jesus }
			crown_of_thorns                                           = { add_artifact = crown_of_thorns }
			fragment_of_true_cross                                    = { add_artifact = fragment_of_true_cross }
			holy_foreskin                                             = { add_artifact = holy_foreskin }
			fingerbone_of_saint                                       = { add_artifact = fingerbone_of_saint }
			chains_of_st_peter                                        = { add_artifact = chains_of_st_peter }
			right_hand_st_demetrius                                   = { add_artifact = right_hand_st_demetrius }
			veil_of_veronica                                          = { add_artifact = veil_of_veronica }
			remains_of_st_cessanius                                   = { add_artifact = remains_of_st_cessianus }
			weeping_statue                                            = { add_artifact = weeping_statue }
			image_of_edessa                                           = { add_artifact = image_of_edessa }
			seal_of_solomon                                           = { add_artifact = seal_of_solomon }
			tabernacle                                                = { add_artifact = tabernacle }
			davids_sling                                              = { add_artifact = davids_sling }
			sword_of_mohammad                                         = { add_artifact = sword_of_mohammad }
			letter_of_mohammad                                        = { add_artifact = letter_of_mohammad }
			cloak_of_mohammad                                         = { add_artifact = cloak_of_mohammad }
			mohammads_beard                                           = { add_artifact = mohammads_beard }
			tooth_of_mohammad                                         = { add_artifact = tooth_of_mohammad }
			water_of_blessed_mantle                                   = { add_artifact = water_of_blessed_mantle }
			mohammads_bowl                                            = { add_artifact = mohammads_bowl }
			blessed_sandals                                           = { add_artifact = blessed_sandals }
			derafsh_kaviani                                           = { add_artifact = derafsh_kaviani }
			haoma_sapling                                             = { add_artifact = haoma_sapling }
			keshmar_cypress_branch                                    = { add_artifact = keshmar_cypress_branch }
			cyrus_cylinder                                            = { add_artifact = cyrus_cylinder }
			elaborate_danda                                           = { add_artifact = elaborate_danda }
			sarira                                                    = { add_artifact = sarira }
			sariraka_actual_body_part                                 = { add_artifact = sariraka_actual_body_part }
			gjallarhorn                                               = { add_artifact = gjallarhorn }
			chinese_dragon_amulet                                     = { add_artifact = chinese_dragon_amulet }
			chinese_artwork                                           = { add_artifact = chinese_artwork }
			chinese_calligraphy                                       = { add_artifact = chinese_calligraphy }
			chinese_sculpture                                         = { add_artifact = chinese_sculpture }
			chinese_ceremonial_robes                                  = { add_artifact = chinese_ceremonial_robes }
			silk_shroud                                               = { add_artifact = silk_shroud }
			water_clock                                               = { add_artifact = water_clock }
			jian_sword                                                = { add_artifact = jian_sword }
			chinese_arm_protector                                     = { add_artifact = chinese_arm_protector }
			chinese_serpent_spear                                     = { add_artifact = chinese_serpent_spear }
			chinese_ji                                                = { add_artifact = chinese_ji }
			chinese_crossbow                                          = { add_artifact = chinese_crossbow }
			chinese_bronze_sculpture                                  = { add_artifact = chinese_bronze_sculpture }
			chinese_painting_of_glitterhoof                           = { add_artifact = chinese_painting_of_glitterhoof }
			chinese_tapestry                                          = { add_artifact = chinese_tapestry }
			chinese_tapestry_grand                                    = { add_artifact = chinese_tapestry_grand }
			chinese_book_health                                       = { add_artifact = chinese_book_health }
			chinese_book_law                                          = { add_artifact = chinese_book_law }
			chinese_book_economy                                      = { add_artifact = chinese_book_economy }
			wuzi                                                      = { add_artifact = wuzi }
			thirty_six_stratagems                                     = { add_artifact = thirty_six_stratagems }
			methods_of_the_sima                                       = { add_artifact = methods_of_the_sima }
			book_of_lord_shang                                        = { add_artifact = book_of_lord_shang }
			wei_liaozi                                                = { add_artifact = wei_liaozi }
			sun_bins_art_of_war                                       = { add_artifact = sun_bins_art_of_war }
			the_commentary_of_zuo                                     = { add_artifact = the_commentary_of_zuo }
			mencius                                                   = { add_artifact = mencius }
			verses_of_chu                                             = { add_artifact = verses_of_chu }
			master_lus_spring_and_autumn_annals                       = { add_artifact = master_lus_spring_and_autumn_annals }
			xunzi                                                     = { add_artifact = xunzi }
			han_feizi                                                 = { add_artifact = han_feizi }
			book_of_origins                                           = { add_artifact = book_of_origins }
			rites_of_zhou                                             = { add_artifact = rites_of_zhou }
			analects                                                  = { add_artifact = analects }
			erya                                                      = { add_artifact = erya }
			book_of_han                                               = { add_artifact = book_of_han }
			weilue                                                    = { add_artifact = weilue }
			book_of_the_later_han                                     = { add_artifact = book_of_the_later_han }
			book_of_song                                              = { add_artifact = book_of_song }
			book_of_qi                                                = { add_artifact = book_of_qi }
			spring_and_autumn_annals_of_the_sixteen_kingdoms          = { add_artifact = spring_and_autumn_annals_of_the_sixteen_kingdoms }
			book_of_wei                                               = { add_artifact = book_of_wei }
			book_of_liang                                             = { add_artifact = book_of_liang }
			book_of_chen                                              = { add_artifact = book_of_chen }
			book_of_northern_qi                                       = { add_artifact = book_of_northern_qi }
			book_of_zhou                                              = { add_artifact = book_of_zhou }
			book_of_jin                                               = { add_artifact = book_of_jin }
			book_of_sui                                               = { add_artifact = book_of_sui }
			history_of_the_southern_dynasties                         = { add_artifact = history_of_the_southern_dynasties }
			history_of_the_northern_dynasties                         = { add_artifact = history_of_the_northern_dynasties }
			classic_of_tea                                            = { add_artifact = classic_of_tea }
			tongdian                                                  = { add_artifact = tongdian }
			old_book_of_tang                                          = { add_artifact = old_book_of_tang }
			records_of_the_nine_kingdoms                              = { add_artifact = records_of_the_nine_kingdoms }
			complete_essentials_for_military_classics                 = { add_artifact = complete_essentials_for_military_classics }
			new_book_of_tang                                          = { add_artifact = new_book_of_tang }
			comprehensive_mirror_in_aid_of_governance                 = { add_artifact = comprehensive_mirror_in_aid_of_governance }
			dream_pool_essays                                         = { add_artifact = dream_pool_essays }
			treatise_of_tea                                           = { add_artifact = treatise_of_tea }
			records_of_rumors_from_sushui                             = { add_artifact = records_of_rumors_from_sushui }
			huang_song_shichao_gangyao                                = { add_artifact = huang_song_shichao_gangyao }
			womens_analects                                           = { add_artifact = womens_analects }
			eighteen_songs_of_a_nomad_flute                           = { add_artifact = eighteen_songs_of_a_nomad_flute }
			daozang                                                   = { add_artifact = daozang }
			five_stars_rise_in_the_east_arm_protector                 = { add_artifact = five_stars_rise_in_the_east_arm_protector }
			put_down_south_qiang_arm_protector                        = { add_artifact = put_down_south_qiang_arm_protector }
			silk_painting_depicting_a_man_riding_a_dragon             = { add_artifact = silk_painting_depicting_a_man_riding_a_dragon }
			nine_tripod_cauldrons                                     = { add_artifact = nine_tripod_cauldrons }
			houmuwu_ding                                              = { add_artifact = houmuwu_ding }
			ganjiang                                                  = { add_artifact = ganjiang }
			moye                                                      = { add_artifact = moye }
			hwarang_segi                                              = { add_artifact = hwarang_segi }
			works_of_shan_yu                                          = { add_artifact = works_of_shan_yu }
			totsuka_no_tsurugi                                        = { add_artifact = totsuka_no_tsurugi }
			lost_book_of_zhou                                         = { add_artifact = lost_book_of_zhou }
			annals_of_the_warring_states                              = { add_artifact = annals_of_the_warring_states }
			six_secret_teachings                                      = { add_artifact = six_secret_teachings }
			three_strategies_of_huang_shigong                         = { add_artifact = three_strategies_of_huang_shigong }
			chronicles_of_huayang                                     = { add_artifact = chronicles_of_huayang }
			a_new_account_of_the_tales_of_the_world                   = { add_artifact = a_new_account_of_the_tales_of_the_world }
			sunzi_suanjing                                            = { add_artifact = sunzi_suanjing }
			classic_of_go                                             = { add_artifact = classic_of_go }
			jingchu_suishiji                                          = { add_artifact = jingchu_suishiji }
			questions_and_replies_between_tang_taizong_and_li_weigong = { add_artifact = questions_and_replies_between_tang_taizong_and_li_weigong }
			shitong                                                   = { add_artifact = shitong }
			great_tang_treatise_on_astrology_of_the_kaiyuan_era       = { add_artifact = great_tang_treatise_on_astrology_of_the_kaiyuan_era }
			extensive_records_of_the_taiping_era                      = { add_artifact = extensive_records_of_the_taiping_era }
			institutions_of_the_five_dynasties_period                 = { add_artifact = institutions_of_the_five_dynasties_period }
			readings_of_the_taiping_era                               = { add_artifact = readings_of_the_taiping_era }
			finest_blossoms_in_the_garden_of_literature               = { add_artifact = finest_blossoms_in_the_garden_of_literature }
			universal_geography_of_the_taiping_era                    = { add_artifact = universal_geography_of_the_taiping_era }
			models_from_the_archives                                  = { add_artifact = models_from_the_archives }
			summary_of_events_in_the_eastern_capital                  = { add_artifact = summary_of_events_in_the_eastern_capital }
			a_description_of_barbarian_nations                        = { add_artifact = a_description_of_barbarian_nations }
			records_of_the_khitan_stele                               = { add_artifact = records_of_the_khitan_stele }
			collection_of_new_songs_from_the_jade_lake                = { add_artifact = collection_of_new_songs_from_the_jade_lake }
			zhong_he_ji                                               = { add_artifact = zhong_he_ji }
			huangdi_neijing                                           = { add_artifact = huangdi_neijing }
			shennong_bencaojing                                       = { add_artifact = shennong_bencaojing }
			wushier_bingfang                                          = { add_artifact = wushier_bingfang }
			zhouyi_cantong_qi                                         = { add_artifact = zhouyi_cantong_qi }
			baopuzi                                                   = { add_artifact = baopuzi }
			danjing_yaoyue                                            = { add_artifact = danjing_yaoyue }
			kojiki                                                    = { add_artifact = kojiki }
			nihon_shoki                                               = { add_artifact = nihon_shoki }
			ishinpo                                                   = { add_artifact = ishinpo }
			art_of_war_page                                           = { add_artifact = art_of_war_page }
		}

		new_artifact = {
			save_event_target_as = found_artifact

			if = {
				limit = { artifact_type = mohammads_beard }
				set_creation_date = 632.06.08
			}
			else_if = {
				limit = { artifact_type = tooth_of_mohammad }
				set_creation_date = 625.03.23
			}
			else = {
				set_creation_date = 1.1.1 # Unknown
			}
		}
	}

	option = { # It's their duty
		name = EVTOPT_MINOR_ARTIFACT_DUTY

		prestige = 10

		reverse_opinion = {
			name = opinion_disappointed
			who = event_target:relic_hunter
			years = 10
		}
	}

	option = { # Monetary reward
		name = EVTOPT_MINOR_ARTIFACT_MONEY

		reverse_opinion = {
			name = opinion_was_rewarded
			who = event_target:relic_hunter
			years = 10
		}

		opinion = {
			name = opinion_found_minor_artifact
			who = event_target:relic_hunter
			years = 10
		}

		event_target:found_artifact = {
			show_scope_change = no

			if = {
				limit = { quality >= 3 }

				ROOT = {
					show_scope_change = no

					transfer_scaled_wealth = {
						to = event_target:relic_hunter
						value = 0.50
						min = 35
					}
				}
			}
			else = {
				ROOT = {
					show_scope_change = no

					transfer_scaled_wealth = {
						to = event_target:relic_hunter
						value = 0.25
						min = 20
					}
				}
			}
		}
	}

	option = { # Reward them with a favor
		name = EVTOPT_MINOR_ARTIFACT_FAVOR

		trigger = {
			has_dlc = "Conclave"
			NOT = { owes_favor_to = event_target:relic_hunter }
		}

		reverse_opinion = {
			name = opinion_was_rewarded
			who = event_target:relic_hunter
			years = 10
		}

		opinion = {
			name = opinion_found_minor_artifact
			who = event_target:relic_hunter
			years = 10
		}

		reverse_add_favor = event_target:relic_hunter
	}

	option = { # Praise them (prestige reward)
		name = EVTOPT_MINOR_ARTIFACT_PRESTIGE

		trigger = { diplomacy >= 15 }

		reverse_opinion = {
			name = opinion_was_praised
			who = event_target:relic_hunter
			years = 10
		}

		opinion = {
			name = opinion_found_minor_artifact
			who = event_target:relic_hunter
			years = 10
		}

		event_target:relic_hunter = {
			show_scope_change = no

			prestige = 25
		}

		random = {
			chance = 20
			add_friend = event_target:relic_hunter
		}
	}

	after = {
		clr_artifact_flagsmodifiers_effect = yes
		clr_character_flag = famous_head
		clr_character_flag = famous_tongue
		#clr_character_flag = infamous_tongue
		clr_character_flag = famous_hand
		clr_character_flag = famous_arm
		clr_character_flag = famous_foot
		clr_character_flag = famous_ancient_weapon
		clr_character_flag = seamless_robe_of_jesus
		clr_character_flag = crown_of_thorns
		clr_character_flag = fragment_of_true_cross
		clr_character_flag = holy_foreskin
		clr_character_flag = fingerbone_of_saint
		clr_character_flag = chains_of_st_peter
		clr_character_flag = right_hand_st_demetrius
		clr_character_flag = veil_of_veronica
		clr_character_flag = remains_of_st_cessanius
		clr_character_flag = weeping_statue
		clr_character_flag = image_of_edessa
		clr_character_flag = seal_of_solomon
		clr_character_flag = tabernacle
		clr_character_flag = davids_sling
		clr_character_flag = sword_of_mohammad
		clr_character_flag = letter_of_mohammad
		clr_character_flag = cloak_of_mohammad
		clr_character_flag = mohammads_beard
		clr_character_flag = tooth_of_mohammad
		clr_character_flag = water_of_blessed_mantle
		clr_character_flag = mohammads_bowl
		clr_character_flag = blessed_sandals
		clr_character_flag = derafsh_kaviani
		clr_character_flag = haoma_sapling
		clr_character_flag = keshmar_cypress_branch
		clr_character_flag = cyrus_cilinder
		clr_character_flag = elaborate_danda
		clr_character_flag = sarira
		clr_character_flag = sariraka_actual_body_part
		clr_character_flag = gjallarhorn
		clr_character_flag = chinese_dragon_amulet
		clr_character_flag = chinese_artwork
		clr_character_flag = chinese_calligraphy
		clr_character_flag = chinese_sculpture
		clr_character_flag = chinese_ceremonial_robes
		clr_character_flag = silk_shroud
		clr_character_flag = water_clock
		clr_character_flag = jian_sword
		clr_character_flag = chinese_arm_protector
		clr_character_flag = chinese_serpent_spear
		clr_character_flag = chinese_ji
		clr_character_flag = chinese_crossbow
		clr_character_flag = chinese_bronze_sculpture
		clr_character_flag = chinese_painting_of_glitterhoof
		clr_character_flag = chinese_tapestry
		clr_character_flag = chinese_tapestry_grand
		clr_character_flag = chinese_book_health
		clr_character_flag = chinese_book_law
		clr_character_flag = chinese_book_economy
		clr_character_flag = wuzi
		clr_character_flag = thirty_six_stratagems
		clr_character_flag = methods_of_the_sima
		clr_character_flag = book_of_lord_shang
		clr_character_flag = wei_liaozi
		clr_character_flag = sun_bins_art_of_war
		clr_character_flag = the_commentary_of_zuo
		clr_character_flag = mencius
		clr_character_flag = verses_of_chu
		clr_character_flag = master_lus_spring_and_autumn_annals
		clr_character_flag = xunzi
		clr_character_flag = han_feizi
		clr_character_flag = book_of_origins
		clr_character_flag = rites_of_zhou
		clr_character_flag = analects
		clr_character_flag = erya
		clr_character_flag = book_of_han
		clr_character_flag = weilue
		clr_character_flag = book_of_the_later_han
		clr_character_flag = book_of_song
		clr_character_flag = book_of_qi
		clr_character_flag = spring_and_autumn_annals_of_the_sixteen_kingdoms
		clr_character_flag = book_of_wei
		clr_character_flag = book_of_liang
		clr_character_flag = book_of_chen
		clr_character_flag = book_of_northern_qi
		clr_character_flag = book_of_zhou
		clr_character_flag = book_of_jin
		clr_character_flag = book_of_sui
		clr_character_flag = history_of_the_southern_dynasties
		clr_character_flag = history_of_the_northern_dynasties
		clr_character_flag = classic_of_tea
		clr_character_flag = tongdian
		clr_character_flag = old_book_of_tang
		clr_character_flag = records_of_the_nine_kingdoms
		clr_character_flag = complete_essentials_for_military_classics
		clr_character_flag = new_book_of_tang
		clr_character_flag = comprehensive_mirror_in_aid_of_governance
		clr_character_flag = dream_pool_essays
		clr_character_flag = treatise_of_tea
		clr_character_flag = records_of_rumors_from_sushui
		clr_character_flag = huang_song_shichao_gangyao
		clr_character_flag = womens_analects
		clr_character_flag = eighteen_songs_of_a_nomad_flute
		clr_character_flag = daozang
		clr_character_flag = five_stars_rise_in_the_east_arm_protector
		clr_character_flag = put_down_south_qiang_arm_protector
		clr_character_flag = silk_painting_depicting_a_man_riding_a_dragon
		clr_character_flag = nine_tripod_cauldrons
		clr_character_flag = houmuwu_ding
		clr_character_flag = ganjiang
		clr_character_flag = moye
		clr_character_flag = hwarang_segi
		clr_character_flag = works_of_shan_yu
		clr_character_flag = totsuka_no_tsurugi
		clr_character_flag = lost_book_of_zhou
		clr_character_flag = annals_of_the_warring_states
		clr_character_flag = six_secret_teachings
		clr_character_flag = three_strategies_of_huang_shigong
		clr_character_flag = chronicles_of_huayang
		clr_character_flag = a_new_account_of_the_tales_of_the_world
		clr_character_flag = sunzi_suanjing
		clr_character_flag = classic_of_go
		clr_character_flag = jingchu_suishiji
		clr_character_flag = questions_and_replies_between_tang_taizong_and_li_weigong
		clr_character_flag = shitong
		clr_character_flag = great_tang_treatise_on_astrology_of_the_kaiyuan_era
		clr_character_flag = extensive_records_of_the_taiping_era
		clr_character_flag = institutions_of_the_five_dynasties_period
		clr_character_flag = readings_of_the_taiping_era
		clr_character_flag = finest_blossoms_in_the_garden_of_literature
		clr_character_flag = universal_geography_of_the_taiping_era
		clr_character_flag = models_from_the_archives
		clr_character_flag = summary_of_events_in_the_eastern_capital
		clr_character_flag = a_description_of_barbarian_nations
		clr_character_flag = records_of_the_khitan_stele
		clr_character_flag = collection_of_new_songs_from_the_jade_lake
		clr_character_flag = zhong_he_ji
		clr_character_flag = huangdi_neijing
		clr_character_flag = shennong_bencaojing
		clr_character_flag = wushier_bingfang
		clr_character_flag = zhouyi_cantong_qi
		clr_character_flag = baopuzi
		clr_character_flag = danjing_yaoyue
		clr_character_flag = kojiki
		clr_character_flag = nihon_shoki
		clr_character_flag = ishinpo
		clr_character_flag = art_of_war_page
	}
}

### Seal of Solomon removes possession###
character_event = {
	id = MNM.9815
	desc = EVTDESC_MNM_9815
	picture = GFX_evt_secluded_in_prayer
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # on_yearly_pulse

	has_dlc = "Mystics"

	trigger = {
		trait = possessed
		has_artifact = seal_of_solomon
	}

	option = { # remove possession
		name = EVTOPTA_MNM_9815
		remove_trait = possessed
	}

	option = { # nah I'm good
		name = EVTOPTB_MNM_9815
	}
}

### Blessed Mantle allows you to make Water of the Blessed Mantle###
character_event = {
	id = MNM.9816
	desc = EVTDESC_MNM_9816
	picture = GFX_evt_charity
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # on_yearly_pulse, random_events

	has_dlc = "Mystics"

	trigger = {
		has_artifact = blessed_mantle
		NOT = { has_artifact = water_of_blessed_mantle }
	}

	option = { # Make Water of the Blessed Mantle!
		name = EVTOPTA_MNM_9816

		wealth = -250
		decadence = 10
		add_artifact = water_of_blessed_mantle
	}

	option = { # nah
		name = EVTOPTB_MNM_9816
	}
}

# CleanSlate: employ_a_smith event chain moved to mnm_smith_events.txt

# Artifact looting

# ROOT is the owner of the winning unit
# FROM is the taken holding title
character_event = {
	id = MNM.9900

	hide_window = yes
	is_triggered_only = yes # on_siege_over_winner

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Holy Fury"
		}

		FROM = {
			is_capital = yes # capital holding
			location = { is_capital = yes } # of capital province
		}
	}

	immediate = {
		save_event_target_as = looter
		# log = "Chance to lose an artifact on_action fired for the leader: [This.GetBestName] on the holding: [From.GetName]"

		FROM = {
			save_event_target_as = target_title
			location = { save_event_target_as = target_location }

			holder_scope = {
				if = {
					limit = {
						NOR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
						}
					}

					# log = "Chance to lose an artifact on_action fired for the capital of [This.GetBestName]"

					if = {
						limit = {
							num_of_artifacts >= 1
							at_location = event_target:target_location
						}

						character_event = { id = MNM.9901 } # Chance to lose an artifact.
					}

					any_courtier = {
						limit = {
							num_of_artifacts >= 1
							at_location = event_target:target_location
							prisoner = no
							is_ruler = no # Don't steal vassals' artifacts, since this is not their capital!
						}

						character_event = { id = MNM.9901 } # Chance to lose an artifact.
					}
				}
			}
		}
	}
}

character_event = {
	id = MNM.9901

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		save_event_target_as = original_item_owner

		random_list = {
			100 = {
				trigger = {
					any_artifact = {
						quality == 1
						NOT = { artifact_type_owned_by = FROM }
					}
				}

				FROM = { character_event = { id = MNM.9902 } }
			}

			70 = {
				trigger = {
					any_artifact = {
						quality == 2
						NOT = { artifact_type_owned_by = FROM }
					}
				}

				FROM = { character_event = { id = MNM.9904 } }
			}

			45 = {
				trigger = {
					any_artifact = {
						quality == 3
					}
				}

				FROM = { character_event = { id = MNM.9906 } }
			}

			25 = {
				trigger = {
					any_artifact = {
						quality == 4
					}
				}

				FROM = { character_event = { id = MNM.9908 } }
			}

			10 = {
				trigger = {
					any_artifact = {
						quality == 5
					}
				}

				FROM = { character_event = { id = MNM.9910 } }
			}

			6000 = { # chance of no artifact stealing
				mult_modifier = {
					factor = 0.2

					# Must be raiding, not sieging
					FROM = { is_looting_in = event_target:target_location }

					FROMFROM = { # Sieged holding
						has_holding_modifier = looted_modifier
						NOT = { controlled_by = FROM }
					}
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 3
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 4
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 5
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 6
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 7
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 8
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 9
				}
				mult_modifier = {
					factor = 0.8
					num_of_artifacts >= 10
				}
				mult_modifier = {
					factor = 0.5
					NOT = {
						any_artifact = {
							quality == 1
						}
					}
				}
				mult_modifier = {
					factor = 0.65
					NOT = {
						any_artifact = {
							quality == 2
						}
					}
				}
				mult_modifier = {
					factor = 0.775
					NOT = {
						any_artifact = {
							quality == 3
						}
					}
				}
				mult_modifier = {
					factor = 0.875
					NOT = {
						any_artifact = {
							quality == 4
						}
					}
				}
				mult_modifier = {
					factor = 0.95
					NOT = {
						any_artifact = {
							quality == 5
						}
					}
				}
				mult_modifier = {
					factor = 1.5 # if the item holder has a wonder with a vault of some kind
					any_realm_wonder_upgrade = {
						has_wonder_upgrade_flag = artifact_protection
					}
				}
				mult_modifier = {
					factor = 0.5 # if the sieger was a warrior lodge member
					FROM = {
						is_member_of_any_warrior_lodge_trigger = yes
						society_rank > 1 # Must be rank 2 or higher
					}
				}
				mult_modifier = {
					factor = 0.5 # if the sieger has a reaver bloodline
					FROM = {
						any_owned_bloodline = {
							has_bloodline_flag = bloodline_reaver
							bloodline_is_active_for = PREV
						}
					}
				}
			}
		}

		FROM = { clr_character_flag = looted_by_raiding_holding }
	}
}

# Ransack enemy holding and find artifact, small item
character_event = {
	id = MNM.9902
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9902_A
		trigger = { looting_artifact_event_religious_artifacts_trigger = no }
	}
	desc = {
		text = EVTDESC_MNM_9902_B
		trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
	}

	is_triggered_only = yes

	immediate = {
		FROM = {
			random_artifact = {
				limit = {
					quality == 1
					NOT = { artifact_type_owned_by = ROOT }
				}

				save_event_target_as = transferred_artifact

				transfer_artifact = {
					from = PREV
					to = ROOT
				}
			}

			character_event = { id = MNM.9903 }
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_9902
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTB_MNM_9902
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
	}
}

# Someone ransacked my holding and stole my artifact, small item
character_event = {
	id = MNM.9903
	desc = EVTDESC_MNM_9903
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_MNM_9903

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = ROOT
					to = FROM
				}
			}
		}
	}
}

# Ransack enemy holding and find artifact, medium item
character_event = {
	id = MNM.9904
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9902_A
		trigger = {
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9902_B
		trigger = {
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}

	is_triggered_only = yes

	immediate = {
		FROM = {
			random_artifact = {
				limit = {
					quality == 2
					NOT = { artifact_type_owned_by = ROOT }
				}

				save_event_target_as = transferred_artifact

				transfer_artifact = {
					from = PREV
					to = ROOT
				}
			}

			character_event = { id = MNM.9905 }
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_9902
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTB_MNM_9902
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
	}
}

# Someone ransacked my holding and stole my artifact, medium item
character_event = {
	id = MNM.9905
	desc = EVTDESC_MNM_9903
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_MNM_9903

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = ROOT
					to = FROM
				}
			}
		}
	}
}

# Ransack enemy holding and find artifact, great item
character_event = {
	id = MNM.9906
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9906_A
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_B
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_C
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_D
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}

	is_triggered_only = yes

	immediate = {
		FROM = {
			random_artifact = {
				limit = { quality == 3 }

				preferred_limit = {
					NOT = { artifact_type_owned_by = ROOT }
				}

				if = {
					limit = { artifact_type_owned_by = ROOT }
					ROOT = { set_character_flag = looted_artifact_destroy_duplicate }
				}
				else = {
					PREV = { character_event = { id = MNM.9907 } }

					transfer_artifact = {
						from = PREV
						to = ROOT
					}
				}

				save_event_target_as = transferred_artifact
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTC_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}

		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
	}

	option = {
		name = {
			text = EVTOPTB_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTD_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}

		trigger = { has_character_flag = looted_artifact_destroy_duplicate }
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				unsafe_destroy_artifact = yes
			}
		}

		FROM = {
			character_event = { id = MNM.9907 }
		}
	}
}

# Someone ransacked my holding and stole my artifact, great item
character_event = {
	id = MNM.9907
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9907_A
		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
	}
	desc = {
		text = EVTDESC_MNM_9907_B
		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_9907

		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = ROOT
					to = FROM
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_9907

		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}

		event_target:transferred_artifact = {
			show_scope_change = no

			destroy_artifact = yes
		}

		FROM = { clr_character_flag = looted_artifact_destroy_duplicate }
	}
}

# Ransack enemy holding and find artifact, great+ item
character_event = {
	id = MNM.9908
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9906_A
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_B
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_C
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
	desc = {
		text = EVTDESC_MNM_9906_D
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}

	is_triggered_only = yes

	immediate = {
		FROM = {
			random_artifact = {
				limit = { quality == 4 }

				preferred_limit = {
					NOT = { artifact_type_owned_by = ROOT }
				}

				if = {
					limit = { artifact_type_owned_by = ROOT }
					ROOT = { set_character_flag = looted_artifact_destroy_duplicate }
				}
				else = {
					PREV = { character_event = { id = MNM.9909 } }

					transfer_artifact = {
						from = PREV
						to = ROOT
					}
				}

				save_event_target_as = transferred_artifact
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTC_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}

		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
	}

	option = {
		name = {
			text = EVTOPTB_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTD_MNM_9906
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}

		trigger = { has_character_flag = looted_artifact_destroy_duplicate }
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				destroy_artifact = yes
			}
		}

		FROM = {
			character_event = { id = MNM.9909 }
		}
	}
}

# Someone ransacked my holding and stole my artifact, great+ item
character_event = {
	id = MNM.9909
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9907_A
		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
	}
	desc = {
		text = EVTDESC_MNM_9907_B
		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_9907

		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = ROOT
					to = FROM
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_9907

		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}

		event_target:transferred_artifact = {
			show_scope_change = no

			destroy_artifact = yes
		}

		FROM = { clr_character_flag = looted_artifact_destroy_duplicate }
	}
}

# Ransack enemy holding and find artifact, amazing item
character_event = {
	id = MNM.9910
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9910_A
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9910_B
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = no
		}
	}
	desc = {
		text = EVTDESC_MNM_9910_C
		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}
	desc = {
		text = EVTDESC_MNM_9910_D
		trigger = {
			has_character_flag = looted_artifact_destroy_duplicate
			looting_artifact_event_religious_artifacts_trigger = yes
		}
	}

	is_triggered_only = yes

	immediate = {
		FROM = {
			random_artifact = {
				limit = { quality == 5 }

				preferred_limit = {
					NOT = { artifact_type_owned_by = ROOT }
				}

				if = {
					limit = { artifact_type_owned_by = ROOT }
					ROOT = { set_character_flag = looted_artifact_destroy_duplicate }
				}
				else = {
					PREV = { character_event = { id = MNM.9911 } }

					transfer_artifact = {
						from = PREV
						to = ROOT
					}
				}

				save_event_target_as = transferred_artifact
			}
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_9910
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTC_MNM_9910
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}

		trigger = {
			NOT = { has_character_flag = looted_artifact_destroy_duplicate }
		}
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = FROM
					to = ROOT
				}
			}
		}
	}

	option = {
		name = {
			text = EVTOPTB_MNM_9910
			trigger = { looting_artifact_event_religious_artifacts_trigger = no }
		}
		name = {
			text = EVTOPTD_MNM_9910
			trigger = { looting_artifact_event_religious_artifacts_trigger = yes }
		}

		trigger = { has_character_flag = looted_artifact_destroy_duplicate }
		
		# GRACETODO

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				destroy_artifact = yes
			}
		}

		FROM = {
			character_event = { id = MNM.9911 }
		}
	}
}

# Someone ransacked my holding and stole my artifact, amazing item
character_event = {
	id = MNM.9911
	picture = GFX_evt_relic_box
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_MNM_9911_A
		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}
	}
	desc = {
		text = EVTDESC_MNM_9911_B
		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_MNM_9911

		trigger = {
			FROM = { NOT = { has_character_flag = looted_artifact_destroy_duplicate } }
		}

		tooltip = {
			event_target:transferred_artifact = {
				show_scope_change = no

				transfer_artifact = {
					from = ROOT
					to = FROM
				}
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_9911

		trigger = {
			FROM = { has_character_flag = looted_artifact_destroy_duplicate }
		}

		event_target:transferred_artifact = {
			show_scope_change = no

			destroy_artifact = yes
		}

		FROM = { clr_character_flag = looted_artifact_destroy_duplicate }
	}
}