# Events concerning Japanese Permanent Regencies and shogunates
# by Silverswee(e)per

namespace = soh

# IDs 3501-3600 reserved

##### Permanent regency setup

### Looping event

# on_startup - start the loop
character_event = {
	id = soh.3501
	hide_window = yes
	
	is_triggered_only = yes # on_startup
	
	only_playable = yes
	
	trigger = {
		owns = event_target:pulse_province
		NOT = {
			has_global_flag = permanent_regency_setup_done
		}
	}
	
	immediate = {
		set_global_flag = permanent_regency_setup_done
		
		2485 = { # Yamashiro
			province_event = { id = soh.3502 }
		}
	}
}

# Repeating province event
province_event = {
	id = soh.3502
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		# The Tenno
		k_chrysanthemum_throne = {
			holder_scope = {
				if = {
					limit = {
						is_the_tenno_trigger = yes
						trait = under_regency
						
						regent = {
							NOT = {
								trait = japanese_regent
							}
						}
						
						any_vassal = {
							has_japanese_government_trigger = yes
							trait = japanese_regent
							has_regent = no
						}
					}
					
					#log = "[This.GetBestName] is getting a proper Permanent Regent!"
					
					regent = {
						remove_title = title_regent
						
						#log = "[This.GetBestName] is the incorrect regent!"
					}
					
					if = {
						limit = {
							any_courtier_or_vassal = {
								has_minor_title = title_appointed_regent
								NOT = {
									trait = japanese_regent
								}
							}
						}
						
						any_courtier_or_vassal = {
							limit = {
								has_minor_title = title_appointed_regent
							}
							remove_title = title_appointed_regent
						}
					}
					
					any_vassal = {
						limit = {
							trait = japanese_regent
						}
						
						give_minor_title = title_appointed_regent
						
						give_minor_title = title_regent
						
						character_event = { id = soh.3503 } # Regency faction setup
						
						#log = "[This.GetBestName] is the new regent!"
					}
				}
				
				else_if = {
					limit = {
						is_the_tenno_trigger = yes
						trait = under_regency
						
						regent = {
							NOT = {
								trait = japanese_regent
							}
						}
						
						any_realm_lord = {
							is_feudal = yes
							trait = japanese_regent
							has_regent = no
						}
						
					}
					
					#log = "[This.GetBestName] is getting a proper Permanent Regent!"
					
					regent = {
						remove_title = title_regent
						
						#log = "[This.GetBestName] is the incorrect regent!"
					}
					
					if = {
						limit = {
							any_courtier_or_vassal = {
								has_minor_title = title_appointed_regent
								NOT = {
									trait = japanese_regent
								}
							}
						}
						
						any_courtier_or_vassal = {
							limit = {
								has_minor_title = title_appointed_regent
							}
							
							remove_title = title_appointed_regent
						}
					}
					
					any_realm_lord = {
						limit = {
							trait = japanese_regent
						}
						
						set_defacto_liege = PREV
						
						set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
						
						give_minor_title = title_appointed_regent
						
						give_minor_title = title_regent
						
						character_event = { id = soh.3503 } # Regency faction setup
						
						#log = "[This.GetBestName] is the new regent!"
					}
				}
			}
		}
		
		# Any Shogun
		any_independent_ruler = {
			limit = {
				real_tier = emperor
				has_japanese_government_trigger = yes
				controls_religion = no
			}
			
			if = {
				limit = {
					trait = under_regency2
					regent = {
						NOT = {
							trait = japanese_regent2
						}
					}
					
					any_vassal = {
						is_feudal = yes
						trait = japanese_regent2
						has_regent = no
					}
				}
				
				#log = "[This.GetBestName] is getting a proper Permanent Regent!"
				
				regent = {
					remove_title = title_regent
					
					#log = "[This.GetBestName] is the incorrect regent!"
				}
				
				if = {
					limit = {
						any_courtier_or_vassal = {
							has_minor_title = title_appointed_regent
							NOT = {
								trait = japanese_regent2
							}
						}
					}
					
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_appointed_regent
						}
						remove_title = title_appointed_regent
					}
				}
				
				any_vassal = {
					limit = {
						is_feudal = yes
						trait = japanese_regent2
					}
					
					give_minor_title = title_appointed_regent
					
					give_minor_title = title_regent
					
					character_event = { id = soh.3503 } # Regency faction setup
					
					#log = "[This.GetBestName] is the new regent!"
				}
			}
			
			else_if = {
				limit = {
					trait = under_regency2
					
					regent = {
						NOT = {
							trait = japanese_regent2
						}
					}
					
					any_realm_lord = {
						is_feudal = yes
						trait = japanese_regent2
						has_regent = no
					}
				}
				
				#log = "[This.GetBestName] is getting a proper Permanent Regent!"
				
				regent = {
					remove_title = title_regent
					
					#log = "[This.GetBestName] is the incorrect regent!"
				}
				
				if = {
					limit = {
						any_courtier_or_vassal = {
							has_minor_title = title_appointed_regent
							NOT = {
								trait = japanese_regent2
							}
						}
					}
					
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_appointed_regent
						}
						
						remove_title = title_appointed_regent
					}
				}
				any_realm_lord = {
					limit = {
						trait = japanese_regent2
					}
					
					set_defacto_liege = PREV
					
					set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
					
					give_minor_title = title_appointed_regent
					
					give_minor_title = title_regent
					
					#log = "[This.GetBestName] is the new regent!"
				}
			}
		}
		
		# The Ryukyuan knockoff
		any_playable_ruler = {
			limit = {
				is_ryukyuan_tenno_trigger = yes
			}
			
			if = {
				limit = {
					trait = under_regency3
					
					regent = {
						NOT = {
							trait = japanese_regent3
						}
					}
					
					any_vassal = {
						is_feudal = yes
						trait = japanese_regent3
						has_regent = no
					}
				}
				
				#log = "[This.GetBestName] is getting a proper Permanent Regent!"
				
				regent = {
					remove_title = title_regent
					
					#log = "[This.GetBestName] is the incorrect regent!"
				}
				
				if = {
					limit = {
						any_courtier_or_vassal = {
							has_minor_title = title_appointed_regent
							NOT = {
								trait = japanese_regent3
							}
						}
					}
					
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_appointed_regent
						}
						
						remove_title = title_appointed_regent
					}
				}
				
				any_vassal = {
					limit = {
						trait = japanese_regent3
					}
					
					give_minor_title = title_appointed_regent
					
					give_minor_title = title_regent
					
					#log = "[This.GetBestName] is the new regent!"
				}
			}
			
			else_if = {
				limit = {
					trait = under_regency3
					
					regent = {
						NOT = {
							trait = japanese_regent3
						}
					}
					
					any_realm_lord = {
						is_feudal = yes
						trait = japanese_regent3
						has_regent = no
					}
				}
				
				#log = "[This.GetBestName] is getting a proper Permanent Regent!"
				
				regent = {
					remove_title = title_regent
					
					#log = "[This.GetBestName] is the incorrect regent!"
				}
				
				if = {
					limit = {
						any_courtier_or_vassal = {
							has_minor_title = title_appointed_regent
							NOT = {
								trait = japanese_regent3
							}
						}
					}
					
					any_courtier_or_vassal = {
						limit = {
							has_minor_title = title_appointed_regent
						}
						
						remove_title = title_appointed_regent
					}
				}
				
				any_realm_lord = {
					limit = {
						trait = japanese_regent3
					}
					
					set_defacto_liege = PREV
					
					set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
					
					give_minor_title = title_appointed_regent
					
					give_minor_title = title_regent
					
					#log = "[This.GetBestName] is the new regent!"
				}
			}
		}
		
		# And repeat
		repeat_event = { id = soh.3502 days = 30 } # Roughly every month
	}
}

### New regent starts relevant Regency Loyalists faction

# Start the faction
character_event = {
	id = soh.3503
	hide_window = yes
	
	is_triggered_only = yes # Whenever someone appropriate gets title_regent
	
	only_playable = yes
	
	immediate = {
		liege = {
			primary_title = {
				save_event_target_as = regency_title
			}
		}
		
		trigger_switch = {
			on_trigger = trait
			
			japanese_regent = {
				start_faction = {
					faction = faction_regency_loyalists
					title = event_target:regency_title
				}
				
				liege = {
					any_vassal = {
						limit = {
							ai = yes
							higher_tier_than = baron
							has_japanese_government_trigger = yes
							controls_religion = no
							
							dynasty = ROOT
							NOR = {
								dynasty = PREV
								is_rival = ROOT
								is_friend = PREV
								is_lover = PREV
								in_faction = faction_shogun
							}
						}
						
						join_faction = {
							faction = faction_regency_loyalists
							faction_leader = ROOT
						}
					}
				}
			}
			
			japanese_regent2 = {
				start_faction = {
					faction = faction_regency_loyalists2
					title = event_target:regency_title
				}
				
				liege = {
					any_vassal = {
						limit = {
							ai = yes
							higher_tier_than = baron
							has_japanese_government_trigger = yes
							controls_religion = no
							
							dynasty = ROOT
							NOR = {
								dynasty = PREV
								is_rival = ROOT
								is_friend = PREV
								is_lover = PREV
								in_faction = faction_oust_shogun
							}
						}
						
						join_faction = {
							faction = faction_regency_loyalists2
							faction_leader = ROOT
						}
					}
				}
			}
			
			japanese_regent3 = {
				start_faction = {
					faction = faction_regency_loyalists3
					title = event_target:regency_title
				}
				
				liege = {
					any_vassal = {
						limit = {
							ai = yes
							higher_tier_than = baron
							has_japanese_government_trigger = yes
							controls_religion = no
							
							dynasty = ROOT
							NOR = {
								dynasty = PREV
								is_rival = ROOT
								is_friend = PREV
								is_lover = PREV
								in_faction = faction_shogun
							}
						}
						
						join_faction = {
							faction = faction_regency_loyalists3
							faction_leader = ROOT
						}
					}
				}
			}
		}
	}
}



##### under_regency traits transfer (+ retired_emperor trait)

# under_regency transfer and possible retired_emperor granting - on_new_holder/_inheritance/_usurpation
character_event = {
	id = soh.3504
	desc = EVTDESC_SOH_3504
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes # on_new_holder/_inheritance/_usurpation
	
	only_playable = yes
	
	religion = shinto
	
	trigger = {
		FROM = {
			title = k_chrysanthemum_throne
		}
	}
	
	option = {
		trigger = {
			FROMFROM = {
				trait = under_regency
			}
		}
		
		name = EVTOPTA_SOH_3504 # Very well...
		
		add_trait = under_regency
		
		new_tenno_effect = yes
		
		if = {
			limit = {
				FROMFROM = {
					is_alive = yes
					is_dying = no
				}
			}
			
			FROMFROM = {
				remove_trait = under_regency
				
				add_trait = retired_emperor
			}
		}
	}
	
	option = {
		trigger = {
			FROMFROM = {
				NOT = {
					trait = under_regency
				}
			}
		}
		
		name = EVTOPTB_SOH_3504 # Banzai! Banzai! Banzai!
		
		new_tenno_effect = yes
		
		if = {
			limit = {
				FROMFROM = {
					is_alive = yes
					is_dying = no
				}
			}
			
			FROMFROM = {
				add_trait = retired_emperor
			}
		}
	}
}

# under_regency2 transfer - on_new_holder/_inheritance/_usurpation
character_event = {
	id = soh.3505
	desc = EVTDESC_SOH_3505
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # on_new_holder/_inheritance/_usurpation
	
	only_independent = yes
	
	trigger = {
		has_japanese_government_trigger = yes
		controls_religion = no
		
		FROMFROM = {
			trait = under_regency2
			OR = {
				dynasty = ROOT
				any_close_relative = {
					character = ROOT
				}
			}
		}
		
		FROM = {
			tier = emperor
		}
		
		NOT = { # Not if you got a second empire
			any_demesne_title = {
				tier = emperor
				FROM = {
					NOT = {
						title = PREV
					}
				}
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3505 # Very well...
		
		add_trait = under_regency2
		
		if = {
			limit = {
				FROMFROM = {
					is_alive = yes
				}
			}
			
			FROMFROM = {
				remove_trait = under_regency2
			}
		}
	}
}

# under_regency3 transfer - on_new_holder/_inheritance/_usurpation
character_event = {
	id = soh.3506
	desc = EVTDESC_SOH_3506
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes # on_new_holder/_inheritance/_usurpation
	
	only_playable = yes
	
	religion = ryukyuan_pagan_reformed
	
	trigger = {
		FROMFROM = {
			trait = under_regency3
		}
		
		FROM = {
			title = d_ryukyuan_pagan_reformed
		}
		
		government = divine_imperial_government # Pretty unlikely that this wouldn't be the case if FROMFROM had the trait, but...
	}
	
	option = {
		name = EVTOPTA_SOH_3506 # Very well...
		
		add_trait = under_regency3
		
		if = {
			limit = {
				FROMFROM = {
					is_alive = yes
				}
			}
			
			FROMFROM = {
				remove_trait = under_regency3
			}
		}
	}
}



##### japanese_regent (all versions) transfer

# on_death, pass on the trait to the primary heir AFTER viceroyalties are cleared out
character_event = {
	id = soh.3507
	hide_window = yes
	
	only_playable = yes
	
	is_triggered_only = yes # on_death
	
	trigger = {
		OR = {
			trait = japanese_regent
			trait = japanese_regent2
			trait = japanese_regent3
		}
	}
	
	immediate = {
		# Take care of viceroyalties
		if = {
			limit = {
				any_demesne_title = {
					OR = {
						tier = king
						tier = duke
					}
					is_vice_royalty = yes
				}
			}
			
			any_demesne_title = {
				limit = {
					OR = {
						tier = king
						tier = duke
					}
					is_vice_royalty = yes
				}
				
				ROOT = {
					liege = {
						grant_title_no_opinion = PREVPREV
					}
				}
			}
			
			recalc_succession = yes
		}
		
		# Then give them the trait
		current_heir = {
			if = {
				limit = {
					can_have_japanese_bureaucracy_and_feudal_trigger = yes
				}
				
				if = {
					limit = {
						ROOT = {
							trait = japanese_regent
						}
						
						is_feudal = yes
						
						NOR = { # Cannot be from the Imperial Family (or Ryukyuan equivalent)
							k_chrysanthemum_throne = {
								holder_scope = {
									dynasty = PREVPREV
								}
							}
							
							d_ryukyuan_pagan_reformed = {
								holder_scope = {
									dynasty = PREVPREV
									government = divine_imperial_government
								}
							}
						}
						
						NAND = { # Not someone in another realm
							is_landed = yes
							NOR = {
								any_liege = {
									has_landed_title = k_chrysanthemum_throne
								}
								
								any_liege = { # If we're rebelling
									character = ROOT
								}
							}
						}
					}
					
					add_trait = japanese_regent
					
					set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				}
				
				else_if = {
					limit = {
						ROOT = {
							trait = japanese_regent2
						}
						
						is_feudal = yes
						
						NOR = { # Cannot be from the Imperial Family (or Ryukyuan equivalent)
							k_chrysanthemum_throne = {
								holder_scope = {
									dynasty = PREVPREV
								}
							}
							
							d_ryukyuan_pagan_reformed = {
								holder_scope = {
									dynasty = PREVPREV
									government = divine_imperial_government
								}
							}
						}
						
						OR = { # Must be the Shogun's vassal if already landed
							is_landed = no
							
							top_liege = {
								any_vassal = {
									character = ROOT
								}
							}
							
							any_liege = { # If we're rebelling
								character = ROOT
							}
						}
					}
					
					add_trait = japanese_regent2
					
					set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				}
				
				else_if = {
					limit = {
						ROOT = {
							trait = japanese_regent3
						}
						
						is_feudal = yes
						
						NOR = { # Cannot be from the Imperial Family (or Ryukyuan equivalent)
							k_chrysanthemum_throne = {
								holder_scope = {
									dynasty = PREVPREV
								}
							}
							
							d_ryukyuan_pagan_reformed = {
								holder_scope = {
									dynasty = PREVPREV
									government = divine_imperial_government
								}
							}
						}
						
						NAND = { # Not someone in another realm
							is_landed = yes
							NOR = {
								any_liege = {
									has_landed_title = d_ryukyuan_pagan_reformed
								}
								any_liege = { # If we're rebelling
									character = ROOT
								}
							}
						}
					}
					
					add_trait = japanese_regent3
					
					set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				}
			}
		}
	}
}

# on_new_holder_usurpation/_inheritance handling of the trait if you fully usurped FROMFROM
character_event = {
	id = soh.3508
	hide_window = yes
	
	only_playable = yes
	
	is_triggered_only = yes # on_new_holder_usurpation/_inheritance
	
	trigger = {
		FROMFROM = {
			is_landed = no
			is_alive = yes # Dead regents should already have been taken care of...
			is_dying = no
			OR = {
				trait = japanese_regent
				trait = japanese_regent2
				trait = japanese_regent3
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				can_have_japanese_bureaucracy_and_feudal_trigger = yes
			}
			
			if = {
				limit = {
					FROMFROM = {
						trait = japanese_regent
					}
					
					is_feudal = yes
					
					NOR = { # Cannot be from the Imperial Family (or Ryukyuan equivalent)
						k_chrysanthemum_throne = {
							holder_scope = {
								dynasty = PREVPREV
							}
						}
						
						d_ryukyuan_pagan_reformed = {
							holder_scope = {
								dynasty = PREVPREV
								government = divine_imperial_government
							}
						}
					}
					
					NAND = { # Not someone in another realm
						is_landed = yes
						NOT = {
							any_liege = {
								has_landed_title = k_chrysanthemum_throne
							}
						}
					}
				}
				
				add_trait = japanese_regent
				
				set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				
				FROMFROM = {
					remove_trait = japanese_regent
					
					clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				}
			}
			
			else_if = {
				limit = {
					FROMFROM = {
						trait = japanese_regent2
					}
					
					is_feudal = yes
					
					NOR = { # Cannot be from the Imperial Family (or Ryukyuan equivalent)
						k_chrysanthemum_throne = {
							holder_scope = {
								dynasty = PREVPREV
							}
						}
						
						d_ryukyuan_pagan_reformed = {
							holder_scope = {
								dynasty = PREVPREV
								government = divine_imperial_government
							}
						}
					}
					
					OR = { # Must be the Shogun's vassal if already landed
						is_landed = no
						top_liege = {
							any_vassal = {
								character = ROOT
							}
						}
					}
				}
				
				add_trait = japanese_regent2
				
				set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				
				FROMFROM = {
					remove_trait = japanese_regent2
					
					clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				}
			}
			
			else_if = {
				limit = {
					FROMFROM = {
						trait = japanese_regent3
					}
					
					is_feudal = yes
					
					NOR = { # Cannot be from the Imperial Family (or Ryukyuan equivalent)
						k_chrysanthemum_throne = {
							holder_scope = {
								dynasty = PREVPREV
							}
						}
						
						d_ryukyuan_pagan_reformed = {
							holder_scope = {
								dynasty = PREVPREV
								government = divine_imperial_government
							}
						}
					}
					
					NAND = { # Not someone in another realm
						is_landed = yes
						NOT = {
							any_liege = {
								has_landed_title = d_ryukyuan_pagan_reformed
							}
						}
					}
				}
				
				add_trait = japanese_regent3
				
				set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				
				FROMFROM = {
					remove_trait = japanese_regent3
					
					clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
				}
			}
		}
	}
}



##### Trait cleanup

# Cleaning up under_regency
character_event = {
	id = soh.3509
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse, on_character_converts_religion
	
	only_rulers = yes # Irrelevant otherwise
	
	trigger = {
		trait = under_regency
		is_the_tenno_trigger = no
	}
	
	immediate = {
		remove_trait = under_regency
	}
}

# Cleaning up under_regency2
character_event = {
	id = soh.3510
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse, on_character_converts_religion, on_character_converts_culture
	
	only_rulers = yes # Irrelevant otherwise
	
	trigger = {
		trait = under_regency2
		NAND = {
			real_tier = emperor
			can_have_japanese_bureaucracy_and_feudal_trigger = yes
			controls_religion = no
		}
	}
	
	immediate = {
		remove_trait = under_regency2
	}
}

# Cleaning up under_regency3
character_event = {
	id = soh.3511
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse, on_character_converts_religion
	
	only_rulers = yes # Irrelevant otherwise
	
	trigger = {
		trait = under_regency3
		is_ryukyuan_tenno_trigger = no
	}
	
	immediate = {
		remove_trait = under_regency3
	}
}

# Cleaning up all versions of japanese_regent
character_event = {
	id = soh.3512
	hide_window = yes
	
	only_rulers = yes # Irrelevant otherwise
	
	is_triggered_only = yes # on_yearly_pulse, on_character_converts_culture, on_character_converts_religion
	
	trigger = {
		OR = {
			AND = {
				trait = japanese_regent
				
				NOR = {
					liege = {
						trait = under_regency
					}
					
					liege_before_war = {
						is_the_tenno_trigger = yes
					}
				}
			}
			
			AND = {
				trait = japanese_regent2
				
				NOR = {
					liege = {
						trait = under_regency2
						real_tier = emperor
						can_have_japanese_bureaucracy_and_feudal_trigger = yes
					}
					
					liege_before_war = {
						real_tier = emperor
						can_have_japanese_bureaucracy_and_feudal_trigger = yes
						controls_religion = no
					}
				}
			}
			
			AND = {
				trait = japanese_regent3
				
				NOR = {
					liege = {
						trait = under_regency3
					}
					
					liege_before_war = {
						is_ryukyuan_tenno_trigger = yes
					}
				}
			}
			
			controls_religion = yes
			
			liege = {
				is_under_regency_trigger = yes
				i_am_appropriate_regent_trigger = yes
				dynasty = ROOT
			}
			
			could_have_japanese_government_trigger = no
		}
	}
	
	immediate = {
		remove_trait = japanese_regent
		remove_trait = japanese_regent2
		remove_trait = japanese_regent3
	}
}



##### Regency powers

### Power increase/decrease

# Increase - inform the liege
character_event = {
	id = soh.3513
	desc = EVTDESC_SOH_3513
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # increase_lieges_regent_powers decision
	
	option = {
		name = EVTOPTA_SOH_3513 # FROM dares?
	}
}

# Decrease - inform the Regent
character_event = {
	id = soh.3514
	desc = EVTDESC_SOH_3514
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # decrese_my_regents_powers decision
	
	option = {
		name = EVTOPTA_SOH_3514 # FROM dares?
	}
}

### AI using power

# AI Tenno might use power
character_event = {
	id = soh.3515
	hide_window = yes
	
	is_triggered_only = yes
	
	only_playable = yes # on_yearly_pulse
	
	religion = shinto
	
	ai = yes
	war = no
	
	min_age = 16
	only_capable = yes # Works fine here = yes
	prisoner = no
	
	trigger = {
		is_the_tenno_trigger = yes
		has_actual_regency_trigger = no
		OR = {
			is_under_regency_trigger = yes
			AND = {
				independent = no
				liege = {
					has_japanese_government_trigger = yes
					controls_religion = no
				}
			}
		}
		is_inaccessible_or_incapable_trigger = no
	}
	
	immediate = {
		save_event_target_as = meddling_character
		
		#log = "[This.GetBestName] got the meddling event!"
		
		if = {
			limit = {
				is_under_regency_trigger = yes
				regent = {
					war = no
					i_am_appropriate_regent_trigger = yes
				}
			}
			
			regent = {
				save_event_target_as = my_pr
			}
		}
		
		if = {
			limit = {
				independent = no
				liege = {
					war = no
					has_japanese_government_trigger = yes
					controls_religion = no
				}
			}
			
			liege = {
				save_event_target_as = my_shogun
				
				if = {
					limit = {
						is_under_regency_trigger = yes
						regent = {
							war = no
							i_am_appropriate_regent_trigger = yes
						}
					}
				
					regent = {
						save_event_target_as = my_shoguns_pr
					}
				}
			}
		}
		
		random_list = {
			100 = {
				# Transfer title from PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_pr = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:my_pr = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
						}
					}
					
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = king
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:my_pr = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
						}
					}
					
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
									event_target:my_pr = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:my_pr = {
					letter_event = { id = soh.3521 } # Inform PR
				}
			}
			
			100 = {
				# Transfer vassal from PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_pr = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								ROOT = {
									prestige >= 2000
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								ROOT = {
									prestige >= 500
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:my_pr = {
							any_vassal = {
								tier = duke
								war = no
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:my_pr = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_pr
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_pr = {
						random_vassal = {
							limit = {
								tier = count
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_pr
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:my_pr = {
					letter_event = { id = soh.3522 } # Inform PR
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Shogun
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_shogun = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_shogun = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:my_shogun = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
						}
					}
					
					event_target:my_shogun = {
						random_demesne_title = {
							limit = {
								tier = king
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:my_shogun = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
						}
					}
					
					event_target:my_shogun = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_shogun
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_shogun = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_shogun
										}
									}
									event_target:my_shogun = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_shogun
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:my_shogun = {
					letter_event = { id = soh.3521 } # Inform Shogun
				}
			}
			
			100 = {
				# Transfer vassal from the Shogun
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_shogun = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_shogun = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent2
								}
								ROOT = {
									prestige >= 2000
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent2
								}
								ROOT = {
									prestige >= 500
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:my_shogun = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent2
								}
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:my_shogun = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent2
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:my_shogun
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_shogun
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_shogun = {
						random_vassal = {
							limit = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent2
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:my_shogun
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_shogun
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:my_shogun = {
					letter_event = { id = soh.3522 } # Inform Shogun
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Shogun's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_shoguns_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_shoguns_pr = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:my_shoguns_pr = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
						}
					}
					
					event_target:my_shoguns_pr = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_shoguns_pr
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_shoguns_pr = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_shoguns_pr
										}
									}
									event_target:my_shoguns_pr = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_shoguns_pr
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:my_shoguns_pr = {
					letter_event = { id = soh.3521 } # Inform Shogun's PR
				}
			}
			
			100 = {
				# Transfer vassal from the Shogun's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_shoguns_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_shoguns_pr = {
						any_vassal = {
							tier = count
							war = no
							ROOT = {
								prestige >= 500
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				event_target:my_shoguns_pr = {
					random_vassal = {
						limit = {
							tier = count
							war = no
						}
						
						preferred_limit = {
							dynasty = ROOT
						}
						
						preferred_limit = {
							NOT = {
								dynasty = event_target:my_shoguns_pr
							}
						}
						
						save_event_target_as = target_vassal
					}
				}
				
				ROOT = {
					prestige = -250
				}
				
				event_target:my_shoguns_pr = {
					letter_event = { id = soh.3522 } # Inform the Shogun's PR
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Do nothing
			}
		}
	}
}

# AI Shogun might use power
character_event = {
	id = soh.3516
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse
	
	only_independent = yes
	
	ai = yes
	war = no
	
	min_age = 16
	only_capable = yes # Works fine here = yes
	prisoner = no
	
	trigger = {
		real_tier = emperor
		has_japanese_government_trigger = yes
		controls_religion = no
		has_actual_regency_trigger = no
		OR = {
			is_under_regency_trigger = yes
			any_vassal = {
				is_the_tenno_trigger = yes
			}
		}
		is_inaccessible_or_incapable_trigger = no
	}
	
	immediate = {
		save_event_target_as = meddling_character
		
		#log = "[This.GetBestName] got the meddling event!"
		
		if = {
			limit = {
				is_under_regency_trigger = yes
				regent = {
					war = no
					i_am_appropriate_regent_trigger = yes
				}
			}
			
			regent = {
				save_event_target_as = my_pr
			}
		}
		
		if = {
			limit = {
				any_vassal = {
					is_the_tenno_trigger = yes
					war = no
				}
			}
			
			any_vassal = {
				limit = {
					is_the_tenno_trigger = yes
				}
				
				save_event_target_as = the_tenno
				
				if = {
					limit = {
						is_under_regency_trigger = yes
						regent = {
							war = no
							i_am_appropriate_regent_trigger = yes
						}
					}
				
					regent = {
						save_event_target_as = the_tennos_pr
					}
				}
			}
		}
		
		random_list = {
			100 = {
				# Transfer title from PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_pr = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:my_pr = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
						}
					}
					
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = king
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:my_pr = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
						}
					}
					
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
									event_target:my_pr = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:my_pr = {
					letter_event = { id = soh.3521 } # Inform PR
				}
			}
			
			100 = {
				# Transfer vassal from PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_pr = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								ROOT = {
									prestige >= 2000
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								ROOT = {
									prestige >= 500
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:my_pr = {
							any_vassal = {
								tier = duke
								war = no
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:my_pr = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_pr
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_pr = {
						random_vassal = {
							limit = {
								tier = count
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_pr
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:my_pr = {
					letter_event = { id = soh.3522 } # Inform PR
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Tenno
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
								
								NOT = {
									title = c_yamashiro
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_tenno = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = king
								controls_religion = no
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:the_tenno = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = count
								NOT = {
									title = c_yamashiro
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
									
									event_target:the_tenno = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3521 } # Inform the Tenno
				}
			}
			
			100 = {
				# Transfer vassal from the Tenno
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent
								}
								ROOT = {
									prestige >= 2000
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent
								}
								ROOT = {
									prestige >= 500
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:the_tenno = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent
								}
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:the_tenno = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent
								}
							}
							
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_shogun = {
						random_vassal = {
							limit = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3522 } # Inform the Tenno
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Tenno's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tennos_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tennos_pr = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_tennos_pr = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
						}
					}
					
					event_target:the_tennos_pr = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tennos_pr
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tennos_pr = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tennos_pr
										}
									}
									event_target:the_tennos_pr = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tennos_pr
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_tennos_pr = {
					letter_event = { id = soh.3521 } # Inform the Tenno's PR
				}
			}
			
			100 = {
				# Transfer vassal from the Tenno's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tennos_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tennos_pr = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								ROOT = {
									prestige >= 2000
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								ROOT = {
									prestige >= 500
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				event_target:my_shoguns_pr = {
					random_vassal = {
						limit = {
							tier = count
							war = no
						}
						
						preferred_limit = {
							dynasty = ROOT
						}
						
						preferred_limit = {
							NOT = {
								dynasty = event_target:the_tennos_pr
							}
						}
						
						save_event_target_as = target_vassal
					}
				}
				
				ROOT = {
					prestige = -250
				}
				
				event_target:the_tennos_pr = {
					letter_event = { id = soh.3522 } # Inform the Tenno's PR
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Do nothing
			}
		}
	}
}

# AI knockoff might use power
character_event = {
	id = soh.3517
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse
	
	only_playable = yes
	
	religion = ryukyuan_pagan_reformed
	
	ai = yes
	war = no
	
	min_age = 16
	only_capable = yes # Works fine here = yes
	prisoner = no
	
	trigger = {
		is_ryukyuan_tenno_trigger = yes
		is_under_regency_trigger = yes
		has_actual_regency_trigger = no
		is_inaccessible_or_incapable_trigger = no
	}
	
	immediate = {
		save_event_target_as = meddling_character
		
		#log = "[This.GetBestName] got the meddling event!"
		
		if = {
			limit = {
				is_under_regency_trigger = yes
				regent = {
					war = no
					i_am_appropriate_regent_trigger = yes
				}
			}
			
			regent = {
				save_event_target_as = my_pr
			}
		}
		
		random_list = {
			100 = {
				# Transfer title from PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_pr = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:my_pr = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
						}
					}
					
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = king
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:my_pr = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
						}
					}
					
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_pr = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
									event_target:my_pr = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:my_pr
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:my_pr = {
					letter_event = { id = soh.3521 } # Inform PR
				}
			}
			
			100 = {
				# Transfer vassal from PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:my_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:my_pr = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								ROOT = {
									prestige >= 2000
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								ROOT = {
									prestige >= 500
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:my_pr = {
							any_vassal = {
								tier = duke
								war = no
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:my_pr = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_pr
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:my_pr = {
						random_vassal = {
							limit = {
								tier = count
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:my_pr
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:my_pr = {
					letter_event = { id = soh.3522 } # Inform PR
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Do nothing
			}
		}
	}
}

# The Tenno's PR might use power
character_event = {
	id = soh.3518
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse
	
	only_playable = yes
	
	ai = yes
	war = no
	
	min_age = 16
	only_capable = yes # Works fine here = yes
	prisoner = no
	
	trigger = {
		liege = {
			is_the_tenno_trigger = yes
		}
		i_am_appropriate_regent_trigger = yes
		has_regent = no
		is_inaccessible_or_incapable_trigger = no
	}
	
	immediate = {
		save_event_target_as = meddling_character
		
		#log = "[This.GetBestName] got the meddling event!"
		
		if = {
			limit = {
				liege = {
					war = no
				}
			}
			
			liege = {
				save_event_target_as = the_tenno
			}
		}
		
		if = {
			limit = {
				top_liege = {
					war = no
					has_japanese_government_trigger = yes
				}
			}
			
			top_liege = {
				save_event_target_as = the_shogun
				
				if = {
					limit = {
						is_under_regency_trigger = yes
						regent = {
							war = no
							i_am_appropriate_regent_trigger = yes
						}
					}
				
					regent = {
						save_event_target_as = the_shoguns_pr
					}
				}
			}
		}
		
		random_list = {
			100 = {
				# Transfer title from the Tenno
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							AND = {
								higher_real_tier_than = king
								any_demesne_title = {
									count = 2
									tier = king
									ROOT = {
										regent_transfer_kingdom_enabled_trigger = yes
									}
									OR = {
										AND = {
											claimed_by = ROOT
											ROOT = {
												prestige >= 2000
											}
										}
										ROOT = {
											prestige >= 4000
										}
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								ROOT = {
									regent_transfer_duchy_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								ROOT = {
									regent_transfer_county_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
								
								NOT = {
									title = c_yamashiro
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_tenno = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
										regent_transfer_kingdom_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = king
								controls_religion = no
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:the_tenno = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
										regent_transfer_duchy_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = count
								NOT = {
									title = c_yamashiro
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
									event_target:the_tenno = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3521 } # Inform the Tenno
				}
			}
			
			100 = {
				# Transfer vassal from the Tenno
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								ROOT = {
									prestige >= 2000
									regent_take_duke_vassal_enabled_trigger = yes
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								ROOT = {
									prestige >= 500
									regent_take_count_vassal_enabled_trigger = yes
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:the_tenno = {
							any_vassal = {
								tier = duke
								war = no
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:the_tenno = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_regency_loyalists
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_tenno
									in_faction = faction_regency_loyalists
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tenno = {
						random_vassal = {
							limit = {
								tier = count
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_regency_loyalists
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_tenno
									in_faction = faction_regency_loyalists
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3522 } # Inform the Tenno
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Shogun
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_shogun = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_shogun = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = duke
								ROOT = {
									regent_transfer_duchy_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								ROOT = {
									regent_transfer_county_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_shogun = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
										regent_transfer_duchy_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_shogun = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shogun
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_shogun = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shogun
										}
									}
									event_target:the_shogun = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shogun
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_shogun = {
					letter_event = { id = soh.3521 } # Inform the Shogun
				}
			}
			
			100 = {
				# Transfer vassal from the Shogun
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_shogun = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_shogun = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent2
								}
								ROOT = {
									prestige >= 2000
									regent_take_duke_vassal_enabled_trigger = yes
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent2
								}
								ROOT = {
									prestige >= 500
									regent_take_count_vassal_enabled_trigger = yes
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:the_shogun = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent2
								}
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:the_shogun = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent2
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_shogun
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_shogun
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_shogun = {
						random_vassal = {
							limit = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent2
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_shogun
									in_faction = faction_oust_shogun
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_shogun
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:the_shogun = {
					letter_event = { id = soh.3522 } # Inform the Shogun
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Shogun's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_shoguns_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_shoguns_pr = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = duke
								ROOT = {
									regent_transfer_duchy_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								ROOT = {
									regent_transfer_county_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_shoguns_pr = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
										regent_transfer_duchy_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_shoguns_pr = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shoguns_pr
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_shoguns_pr = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shoguns_pr
										}
									}
									event_target:the_shoguns_pr = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shoguns_pr
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_shoguns_pr = {
					letter_event = { id = soh.3521 } # Inform the Shogun's PR
				}
			}
			
			100 = {
				# Transfer vassal from the Shogun's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_shoguns_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_shoguns_pr = {
						any_vassal = {
							tier = count
							war = no
							ROOT = {
								prestige >= 500
								regent_take_count_vassal_enabled_trigger = yes
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				event_target:the_shoguns_pr = {
					random_vassal = {
						limit = {
							tier = count
							war = no
						}
						
						preferred_limit = {
							dynasty = ROOT
						}
						
						preferred_limit = {
							NOT = {
								dynasty = event_target:the_shoguns_pr
							}
						}
						
						save_event_target_as = target_vassal
					}
				}
				
				ROOT = {
					prestige = -250
				}
				
				event_target:the_shoguns_pr = {
					letter_event = { id = soh.3522 } # Inform the Shogun's PR
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer money from the Tenno
				trigger = {
					regent_take_money_enabled_trigger = yes
					OR = {
						wealth < 10000
						trait = greedy
					}
					
					event_target:the_tenno = {
						scaled_wealth = {
							value = 1
							min = 25
						}
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_money
							}
						}
					}
					
					NOT = {
						trait = content
					}
					
					OR = {
						wealth < 0
						NOT = {
							trait = charitable
						}
					}
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					trait = humble
				}
				
				mult_modifier = {
					factor = 0.1
					trait = just
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 10
					trait = greedy
				}
				
				event_target:the_tenno = {
					character_event = { id = soh.3524 } # Inform the Tenno
				}
			}
			
			100 = {
				# Force actual regency
				trigger = {
					regent_force_actual_regency_enabled_trigger = yes
					OR = {
						trait = ambitious
						trait = proud
						trait = arbitrary
						is_rival = event_target:the_tenno
					}
					
					OR = {
						is_rival = event_target:the_tenno
						NOT = {
							trait = content
						}
					}
					
					event_target:the_tenno = {
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_forced_actual_regency
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					trait = humble
				}
				
				mult_modifier = {
					factor = 0.1
					trait = just
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 10
					is_rival = event_target:the_tenno
				}
				
				event_target:the_tenno = {
					character_event = { id = soh.3525 } # Inform the Tenno
				}
			}
			
			100 = {
				# Marry the Tenno to my dynasty
				trigger = {
					regent_marry_liege_to_my_dynasty_enabled_trigger = yes
					
					event_target:the_tenno = {
						is_female = no
						is_adult = yes
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_changed_my_spouse
							}
						}
						# The current spouse can't be the mother of the heir
						OR = {
							is_married = no
							current_heir = { # You could probably get around this...
								NAND = {
									dynasty = event_target:the_tenno
									father = {
										character = event_target:the_tenno
									}
									mother = {
										spouse = {
											character = event_target:the_tenno
										}
									}
								}
							}
							spouse = {
								NOR = {
									# Spouse must not be (known to be) pregnant
									trait = pregnant
									trait = hard_pregnancy
									trait = troubled_pregnancy
									trait = pregnancy_finishing
									# If the Tenno loves their spouse, they'll probably care more (particularly if a player), so let's just forbid ending that...
									any_lover = {
										character = event_target:the_tenno
									}
									dynasty = ROOT # If we've already done this, don't do it again!
									dynasty = event_target:the_tenno # An Imperial spouse is harder to remove
									is_playable = yes # A playable spouse probably has enough power to oppose it
								}
							}
						}
						NOT = {
							dynasty = ROOT # No need for marriage ties... and something is clearly wrong
						}
					}
					
					OR = {
						any_courtier = {
							is_female = yes
							has_negative_congenital_trigger = no
							OR = {
								# Already a consort of the Tenno
								any_consort = {
									character = event_target:the_tenno
								}
								# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
								NOR = {
									any_lover = {
										NOT = {
											character = event_target:the_tenno
										}
									}
									any_child_even_if_dead = { always = yes }
									any_spouse_even_if_dead = { always = yes }
									any_consort = { always = yes } # This is missing in vanilla but should probably be here...
									has_focus = focus_seduction
									trait = pregnant
									trait = hard_pregnancy # This is missing in vanilla but should probably be here...
									trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
									trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
									#trait = lustful
									trait = hedonist
									trait = master_seductress
									trait = lovers_pox
									trait = aztec_disease
									trait = great_pox
									has_character_modifier = incestuous_adulteress
									has_character_modifier = adulteress
									has_character_modifier = cradle_robber
									has_character_modifier = adulterous_priest
								}
							}
							
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
							}
							
							is_adult = yes
							age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
							event_target:the_tenno = {
								spouse = {
									is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
								}
							}
							
							NOR = {
								is_landed = yes
								is_ruler = yes
								is_heir = yes
								trait = incapable
								trait = inbred
								trait = imbecile
								is_maimed_trigger = yes
								trait = infirm
								trait = wounded
								trait = severely_injured
								is_ascetic_trigger = yes
								trait = celibate
							}
							is_ill = no
							is_inaccessible_or_incapable_trigger = no
						}
						
						event_target:the_tenno = {
							any_consort = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the Tenno
									any_consort = {
										character = event_target:the_tenno
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_tenno
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_tenno = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
									}
							
									NOR = {
										is_landed = yes
										is_ruler = yes
										is_heir = yes
										trait = incapable
										trait = inbred
										trait = imbecile
										is_maimed_trigger = yes
										trait = infirm
										trait = wounded
										trait = severely_injured
										is_ascetic_trigger = yes
										trait = celibate
									}
									is_ill = no
									is_inaccessible_or_incapable_trigger = no
								}
							}
						}
					}
					
					NOT = {
						trait = content
					}
					
					event_target:the_tenno = {
						NOR = {
							trait = celibate
							trait = eunuch
						}
					}
				}
				
				mult_modifier = {
					factor = 0.5
					always = yes
				}
				
				mult_modifier = {
					factor = 0.01
					event_target:the_tenno = {
						spouse = {
							OR = {
								# We like the spouse
								reverse_opinion = {
									who = ROOT
									value >= 50
								}
								is_friend = ROOT
								is_lover = ROOT
							}
						}
					}
					NOR = {
						trait = deceitful
						trait = ambitious
					}
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					event_target:the_tenno = {
						trait = lustful # More likely to yield results...
					}
				}
				
				# Select the new spouse
				random_list = {
					50 = {
						trigger = {
							any_courtier = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the Tenno
									any_consort = {
										character = event_target:the_tenno
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_tenno
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_tenno = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
									}
								}
								
								NOR = {
									is_landed = yes
									is_ruler = yes
									is_heir = yes
									trait = incapable
									trait = inbred
									trait = imbecile
									is_maimed_trigger = yes
									trait = infirm
									trait = wounded
									trait = severely_injured
									is_ascetic_trigger = yes
									trait = celibate
								}
								is_ill = no
								is_inaccessible_or_incapable_trigger = no
							}
						}
					
						random_courtier = {
							limit = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the Tenno
									any_consort = {
										character = event_target:the_tenno
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_tenno
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_tenno = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
									}
								}
								
								NOR = {
									is_landed = yes
									is_ruler = yes
									is_heir = yes
									trait = incapable
									trait = inbred
									trait = imbecile
									is_maimed_trigger = yes
									trait = infirm
									trait = wounded
									trait = severely_injured
									is_ascetic_trigger = yes
									trait = celibate
								}
								is_ill = no
								is_inaccessible_or_incapable_trigger = no
							}
						
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
							}
							
							preferred_limit = {
								age < 25
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
							}
							
							preferred_limit = {
								age < 30
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
							}
							
							save_event_target_as = new_spouse
						}
					}
					
					50 = {
						trigger = {
							event_target:the_tenno = {
								any_consort = {
									is_female = yes
									has_negative_congenital_trigger = no
									OR = {
										# Already a consort of the Tenno
										any_consort = {
											character = event_target:the_tenno
										}
										# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
										NOR = {
											any_lover = {
												NOT = {
													character = event_target:the_tenno
												}
											}
											any_child_even_if_dead = { always = yes }
											any_spouse_even_if_dead = { always = yes }
											any_consort = { always = yes } # This is missing in vanilla but should probably be here...
											has_focus = focus_seduction
											trait = pregnant
											trait = hard_pregnancy # This is missing in vanilla but should probably be here...
											trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
											trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
											#trait = lustful
											trait = hedonist
											trait = master_seductress
											trait = lovers_pox
											trait = aztec_disease
											trait = great_pox
											has_character_modifier = incestuous_adulteress
											has_character_modifier = adulteress
											has_character_modifier = cradle_robber
											has_character_modifier = adulterous_priest
										}
									}
									
									OR = {
										dynasty = ROOT
										is_close_relative = ROOT
									}
									
									is_adult = yes
									age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
									event_target:the_tenno = {
										spouse = {
											is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
										}
								
										NOR = {
											is_landed = yes
											is_ruler = yes
											is_heir = yes
											trait = incapable
											trait = inbred
											trait = imbecile
											is_maimed_trigger = yes
											trait = infirm
											trait = wounded
											trait = severely_injured
											is_ascetic_trigger = yes
											trait = celibate
										}
										is_ill = no
										is_inaccessible_or_incapable_trigger = no
									}
								}
							}
						}
						
						event_target:the_tenno = {
							random_consort = {
								limit = {
									is_female = yes
									has_negative_congenital_trigger = no
									OR = {
										# Already a consort of the Tenno
										any_consort = {
											character = event_target:the_tenno
										}
										# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
										NOR = {
											any_lover = {
												NOT = {
													character = event_target:the_tenno
												}
											}
											any_child_even_if_dead = { always = yes }
											any_spouse_even_if_dead = { always = yes }
											any_consort = { always = yes } # This is missing in vanilla but should probably be here...
											has_focus = focus_seduction
											trait = pregnant
											trait = hard_pregnancy # This is missing in vanilla but should probably be here...
											trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
											trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
											#trait = lustful
											trait = hedonist
											trait = master_seductress
											trait = lovers_pox
											trait = aztec_disease
											trait = great_pox
											has_character_modifier = incestuous_adulteress
											has_character_modifier = adulteress
											has_character_modifier = cradle_robber
											has_character_modifier = adulterous_priest
										}
									}
									
									OR = {
										dynasty = ROOT
										is_close_relative = ROOT
									}
									
									is_adult = yes
									age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
									event_target:the_tenno = {
										spouse = {
											is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
										}
								
										NOR = {
											is_landed = yes
											is_ruler = yes
											is_heir = yes
											trait = incapable
											trait = inbred
											trait = imbecile
											is_maimed_trigger = yes
											trait = infirm
											trait = wounded
											trait = severely_injured
											is_ascetic_trigger = yes
											trait = celibate
										}
										is_ill = no
										is_inaccessible_or_incapable_trigger = no
									}
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
								}
								
								preferred_limit = {
									age < 25
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
								}
								
								preferred_limit = {
									age < 30
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
								}
								
								save_event_target_as = new_spouse
							}
						}
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3526 } # Inform the Tenno
				}
			}
			
			100 = {
				# Release the Tenno's prisoner
				trigger = {
					regent_release_prisoner_enabled_trigger = yes
					any_dynasty_member = {
						NOT = {
							is_rival = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					prestige >= 200
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_friend = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_lover = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_close_relative = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_child_of = ROOT
					}
				}
				
				mult_modifier = {
					factor = 10
					current_heir = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = kind
				}
				
				# Select a target
				random_dynasty_member = {
					limit = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_lover = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_lover = ROOT
					}
					
					save_event_target_as = prisoner_to_release
				}
				
				prestige = -100
				
				event_target:the_tenno = {
					character_event = { id = soh.3527 } # Inform the Tenno
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Release the Shogun's prisoner
				trigger = {
					regent_release_prisoner_enabled_trigger = yes
					any_dynasty_member = {
						NOT = {
							is_rival = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
					
					prestige >= 200
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_friend = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_lover = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_close_relative = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_child_of = ROOT
					}
				}
				
				mult_modifier = {
					factor = 10
					current_heir = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = kind
				}
				
				# Select a target
				random_dynasty_member = {
					limit = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_lover = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_lover = ROOT
					}
					
					save_event_target_as = prisoner_to_release
				}
				
				prestige = -100
				
				event_target:the_shogun = {
					character_event = { id = soh.3527 } # Inform the Shogun
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Release the Shogun's PR's prisoner
				trigger = {
					regent_release_prisoner_enabled_trigger = yes
					any_dynasty_member = {
						NOT = {
							is_rival = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
					}
					
					prestige >= 200
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
						is_friend = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
						is_lover = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
						is_close_relative = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
						is_child_of = ROOT
					}
				}
				
				mult_modifier = {
					factor = 10
					current_heir = {
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = kind
				}
				
				# Select a target
				random_dynasty_member = {
					limit = {
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_lover = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_lover = ROOT
					}
					
					save_event_target_as = prisoner_to_release
				}
				
				prestige = -100
				
				event_target:the_shoguns_pr = {
					character_event = { id = soh.3527 } # Inform the Shogun's PR
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Execute the Tenno's prisoner
				trigger = {
					regent_execute_prisoner_enabled_trigger = yes
					
					NOT = {
						trait = kind
					}
					
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
							any_dynasty_member = {
								OR = {
									is_the_tenno_trigger = yes
									is_ryukyuan_tenno_trigger = yes
								}
							}
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					prestige >= 500
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								dynasty = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
						is_any_kinslayer_trigger = yes
					}
				}
				
				mult_modifier = {
					factor = 10
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						current_heir = {
							character = ROOT
						}
					}
				}
				
				# Select a target
				random_rival = {
					limit = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_the_tenno_trigger = yes
								is_ryukyuan_tenno_trigger = yes
								any_dynasty_member = {
									OR = {
										is_the_tenno_trigger = yes
										is_ryukyuan_tenno_trigger = yes
									}
								}
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
					
					preferred_limit = {
						NOR = {
							is_close_relative = ROOT
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							is_close_relative = ROOT
						}
					}
					
					save_event_target_as = prisoner_to_execute
				}
				
				prestige = -250
				
				event_target:the_tenno = {
					character_event = { id = soh.3529 } # Inform the Tenno
				}
				
				event_target:prisoner_to_execute = {
					character_event = { id = 154 } # Execute the prisoner!
				}
			}
			
			100 = {
				# Execute the Shogun's prisoner
				trigger = {
					regent_execute_prisoner_enabled_trigger = yes
					
					NOT = {
						trait = kind
					}
					
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
							any_dynasty_member = {
								OR = {
									is_the_tenno_trigger = yes
									is_ryukyuan_tenno_trigger = yes
								}
							}
						}
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
					
					prestige >= 500
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								dynasty = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_shogun
							}
						}
						is_any_kinslayer_trigger = yes
					}
				}
				
				mult_modifier = {
					factor = 10
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						current_heir = {
							character = ROOT
						}
					}
				}
				
				# Select a target
				random_rival = {
					limit = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_the_tenno_trigger = yes
								is_ryukyuan_tenno_trigger = yes
								any_dynasty_member = {
									OR = {
										is_the_tenno_trigger = yes
										is_ryukyuan_tenno_trigger = yes
									}
								}
							}
							prisoner = yes
							host = {
								character = event_target:the_shogun
							}
						}
					}
					
					preferred_limit = {
						NOR = {
							is_close_relative = ROOT
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							is_close_relative = ROOT
						}
					}
					
					save_event_target_as = prisoner_to_execute
				}
				
				prestige = -250
				
				event_target:the_shogun = {
					character_event = { id = soh.3529 } # Inform the Shogun
				}
				
				event_target:prisoner_to_execute = {
					character_event = { id = 154 } # Execute the prisoner!
				}
			}
			
			100 = {
				# Execute the Shogun's PR's prisoner
				trigger = {
					regent_execute_prisoner_enabled_trigger = yes
					
					NOT = {
						trait = kind
					}
					
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
							any_dynasty_member = {
								OR = {
									is_the_tenno_trigger = yes
									is_ryukyuan_tenno_trigger = yes
								}
							}
						}
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
					}
					
					prestige >= 500
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_shoguns_pr
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								dynasty = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_shoguns_pr
							}
						}
						is_any_kinslayer_trigger = yes
					}
				}
				
				mult_modifier = {
					factor = 10
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_shoguns_pr
						}
						current_heir = {
							character = ROOT
						}
					}
				}
				
				# Select a target
				random_rival = {
					limit = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_the_tenno_trigger = yes
								is_ryukyuan_tenno_trigger = yes
								any_dynasty_member = {
									OR = {
										is_the_tenno_trigger = yes
										is_ryukyuan_tenno_trigger = yes
									}
								}
							}
							prisoner = yes
							host = {
								character = event_target:the_shoguns_pr
							}
						}
					}
					
					preferred_limit = {
						NOR = {
							is_close_relative = ROOT
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							is_close_relative = ROOT
						}
					}
					
					save_event_target_as = prisoner_to_execute
				}
				
				prestige = -250
				
				event_target:the_tenno = {
					character_event = { id = soh.3529 } # Inform the Shogun's PR
				}
				
				event_target:prisoner_to_execute = {
					character_event = { id = 154 } # Execute the prisoner!
				}
			}
			
			100 = {
				# Fire the Tenno's councillor
				trigger = {
					regent_fire_councillor_enabled_trigger = yes
					event_target:the_tenno = {
						any_voter = {
							OR = {
								is_rival = ROOT
								reverse_opinion = {
									who = ROOT
									value < 0
								}
							}
							NOR = {
								character = ROOT
								has_opinion_modifier = {
									who = ROOT
									modifier = japanese_regent_fired_me
								}
							}
						}
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_fired_councillor
							}
						}
					}
					
					NOT = {
						trait = kind
					}
					
					
					prestige >= 500
				}

				mult_modifier = {
					factor = 0.01
					always = yes
				}

				mult_modifier = {
					factor = 10
					event_target:the_tenno = {
						any_voter = {
							is_rival = ROOT
						}
					}
				}

				mult_modifier = {
					factor = 2
					trait = envious
				}

				mult_modifier = {
					factor = 5
					trait = cruel
				}

				mult_modifier = {
					factor = 2
					trait = proud
				}

				mult_modifier = {
					factor = 0.2
					trait = humble
				}

				# Select the target
				event_target:the_tenno = {
					random_voter = {
						limit = {
							OR = {
								is_rival = ROOT
								reverse_opinion = {
									who = ROOT
									value < 0
								}
							}
							NOR = {
								character = ROOT
								has_opinion_modifier = {
									who = ROOT
									modifier = japanese_regent_fired_me
								}
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								dynasty = ROOT
								in_faction = faction_regency_loyalists
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOT = {
								in_faction = faction_regency_loyalists
							}
						}
						
						preferred_limit = {
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists
							}
						}
						
						preferred_limit = {
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
							}
						}
						
						preferred_limit = {
							NOT = {
								in_faction = faction_regency_loyalists
							}
						}
						
						save_event_target_as = voter_to_fire
					}
				}

				prestige = -250
				
				event_target:the_tenno = {
					character_event = { id = soh.3531 } # Inform the Tenno
				}
				
				event_target:voter_to_fire = {
					character_event = { id = soh.3532 } # Inform the councillor
				}
			}
			
			100 = {
				# Do nothing
			}
		}
	}
}

# The Shogun's PR might use power
character_event = {
	id = soh.3519
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse
	
	only_playable = yes
	
	ai = yes
	war = no
	
	min_age = 16
	only_capable = yes # Works fine here = yes
	prisoner = no
	
	trigger = {
		liege = {
			real_tier = emperor
			has_japanese_government_trigger = yes
			controls_religion = no
		}
		i_am_appropriate_regent_trigger = yes
		has_regent = no
		is_inaccessible_or_incapable_trigger = no
	}
	
	immediate = {
		save_event_target_as = meddling_character
		
		#log = "[This.GetBestName] got the meddling event!"
		
		if = {
			limit = {
				liege = {
					war = no
				}
			}
			
			liege = {
				save_event_target_as = the_shogun
			}
		}
		
		if = {
			limit = {
				liege = {
					any_vassal = {
						is_the_tenno_trigger = yes
					}
				}
			}
			
			liege = {
				any_vassal = {
					limit = {
						is_the_tenno_trigger = yes
					}
					save_event_target_as = the_tenno
				
					if = {
						limit = {
							is_under_regency_trigger = yes
							regent = {
								war = no
								i_am_appropriate_regent_trigger = yes
							}
						}
					
						regent = {
							save_event_target_as = the_tennos_pr
						}
					}
				}
			}
		}
		
		random_list = {
			100 = {
				# Transfer title from the Shogun
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_shogun = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_shogun = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = king
								ROOT = {
									regent_transfer_kingdom_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								ROOT = {
									regent_transfer_duchy_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								ROOT = {
									regent_transfer_county_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_shogun = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
										regent_transfer_kingdom_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_shogun = {
						random_demesne_title = {
							limit = {
								tier = king
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:the_shogun = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
										regent_transfer_duchy_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					regent = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shogun
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					regent = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shogun
										}
									}
									event_target:the_shogun = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_shogun
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_shogun = {
					letter_event = { id = soh.3521 } # Inform the Shogun
				}
			}
			
			100 = {
				# Transfer vassal from the Shogun
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_shogun = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_shogun = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								ROOT = {
									prestige >= 2000
									regent_take_duke_vassal_enabled_trigger = yes
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								ROOT = {
									prestige >= 500
									regent_take_count_vassal_enabled_trigger = yes
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:the_shogun = {
							any_vassal = {
								tier = duke
								war = no
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:the_shogun = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_regency_loyalists2
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_shogun
									in_faction = faction_regency_loyalists2
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
								in_faction = faction_oust_shogun
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_shogun
								}
								in_faction = faction_oust_shogun
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_shogun
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_shogun = {
						random_vassal = {
							limit = {
								tier = count
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_regency_loyalists2
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_shogun
									in_faction = faction_regency_loyalists2
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
								in_faction = faction_oust_shogun
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_shogun
								}
								in_faction = faction_oust_shogun
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_shogun
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:the_shogun = {
					letter_event = { id = soh.3522 } # Inform the Shogun
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Tenno
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = king
								ROOT = {
									regent_transfer_kingdom_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = duke
								ROOT = {
									regent_transfer_duchy_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								ROOT = {
									regent_transfer_county_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_tenno = {
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
										regent_transfer_kingdom_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = king
								controls_religion = no
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:the_tenno = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
										regent_transfer_duchy_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
									event_target:the_tenno = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3521 } # Inform the Tenno
				}
			}
			
			100 = {
				# Transfer vassal from the Tenno
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent
								}
								ROOT = {
									prestige >= 2000
									regent_take_duke_vassal_enabled_trigger = yes
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent
								}
								ROOT = {
									prestige >= 500
									regent_take_count_vassal_enabled_trigger = yes
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:the_tenno = {
							any_vassal = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent
								}
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:the_tenno = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
								NOT = {
									trait = japanese_regent
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tenno = {
						random_vassal = {
							limit = {
								tier = count
								war = no
								NOT = {
									trait = japanese_regent
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3522 } # Inform the Tenno
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer title from the Tenno's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tennos_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tennos_pr = {
						OR = {
							any_demesne_title = {
								count = 2
								tier = duke
								ROOT = {
									regent_transfer_duchy_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								ROOT = {
									regent_transfer_county_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_tennos_pr = {
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
										regent_transfer_duchy_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_tennos_pr = {
						random_demesne_title = {
							limit = {
								tier = duke
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tennos_pr
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tennos_pr = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tennos_pr
										}
									}
									event_target:the_tennos_pr = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tennos_pr
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_tennos_pr = {
					letter_event = { id = soh.3521 } # Inform the Tenno's PR
				}
			}
			
			100 = {
				# Transfer vassal from the Tenno's PR
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tennos_pr = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tennos_pr = {
						any_vassal = {
							tier = count
							war = no
							ROOT = {
								prestige >= 500
								regent_take_count_vassal_enabled_trigger = yes
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				event_target:the_tennos_pr = {
					random_vassal = {
						limit = {
							tier = count
							war = no
						}
						
						preferred_limit = {
							dynasty = ROOT
						}
						
						preferred_limit = {
							NOT = {
								dynasty = event_target:the_tennos_pr
							}
						}
						
						save_event_target_as = target_vassal
					}
				}
				
				ROOT = {
					prestige = -250
				}
				
				event_target:the_tennos_pr = {
					letter_event = { id = soh.3522 } # Inform the Tenno's PR
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer money from the Shogun
				trigger = {
					regent_take_money_enabled_trigger = yes
					OR = {
						wealth < 10000
						trait = greedy
					}
					
					event_target:the_shogun = {
						scaled_wealth = {
							value = 1
							min = 25
						}
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_money
							}
						}
					}
					
					NOT = {
						trait = content
					}
					
					OR = {
						wealth < 0
						NOT = {
							trait = charitable
						}
					}
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					trait = humble
				}
				
				mult_modifier = {
					factor = 0.1
					trait = just
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 10
					trait = greedy
				}
				
				event_target:the_shogun = {
					character_event = { id = soh.3524 } # Inform the Shogun
				}
			}
			
			100 = {
				# Force actual regency
				trigger = {
					regent_force_actual_regency_enabled_trigger = yes
					OR = {
						trait = ambitious
						trait = proud
						trait = arbitrary
						is_rival = event_target:the_shogun
					}
					
					OR = {
						is_rival = event_target:the_shogun
						NOT = {
							trait = content
						}
					}
					
					event_target:the_shogun = {
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_forced_actual_regency
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					trait = humble
				}
				
				mult_modifier = {
					factor = 0.1
					trait = just
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 10
					is_rival = event_target:the_shogun
				}
				
				event_target:the_shogun = {
					character_event = { id = soh.3525 } # Inform the Shogun
				}
			}
			
			100 = {
				# Marry the Shogun to my dynasty
				trigger = {
					regent_marry_liege_to_my_dynasty_enabled_trigger = yes
					
					event_target:the_shogun = {
						is_female = no
						is_adult = yes
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_changed_my_spouse
							}
						}
						# The current spouse can't be the mother of the heir
						OR = {
							is_married = no
							current_heir = { # You could probably get around this...
								NAND = {
									dynasty = event_target:the_shogun
									father = {
										character = event_target:the_shogun
									}
									mother = {
										spouse = {
											character = event_target:the_shogun
										}
									}
								}
							}
							spouse = {
								NOR = {
									# Spouse must not be (known to be) pregnant
									trait = pregnant
									trait = hard_pregnancy
									trait = troubled_pregnancy
									trait = pregnancy_finishing
									# If the Tenno loves their spouse, they'll probably care more (particularly if a player), so let's just forbid ending that...
									any_lover = {
										character = event_target:the_shogun
									}
									dynasty = ROOT # If we've already done this, don't do it again!
									dynasty = event_target:the_shogun # A spouse related to the Shogun is harder to replace
									is_playable = yes # A playable spouse probably has enough power to oppose it
								}
							}
						}
						NOT = {
							dynasty = ROOT # No need for marriage ties... and something is clearly wrong
						}
					}
					
					OR = {
						any_courtier = {
							is_female = yes
							has_negative_congenital_trigger = no
							OR = {
								# Already a consort of the Tenno
								any_consort = {
									character = event_target:the_shogun
								}
								# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
								NOR = {
									any_lover = {
										NOT = {
											character = event_target:the_shogun
										}
									}
									any_child_even_if_dead = { always = yes }
									any_spouse_even_if_dead = { always = yes }
									any_consort = { always = yes } # This is missing in vanilla but should probably be here...
									has_focus = focus_seduction
									trait = pregnant
									trait = hard_pregnancy # This is missing in vanilla but should probably be here...
									trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
									trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
									#trait = lustful
									trait = hedonist
									trait = master_seductress
									trait = lovers_pox
									trait = aztec_disease
									trait = great_pox
									has_character_modifier = incestuous_adulteress
									has_character_modifier = adulteress
									has_character_modifier = cradle_robber
									has_character_modifier = adulterous_priest
								}
							}
							
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
							}
							
							is_adult = yes
							age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
							event_target:the_shogun = {
								spouse = {
									is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
								}
							}
							
							NOR = {
								is_landed = yes
								is_ruler = yes
								is_heir = yes
								trait = incapable
								trait = inbred
								trait = imbecile
								is_maimed_trigger = yes
								trait = infirm
								trait = wounded
								trait = severely_injured
								is_ascetic_trigger = yes
								trait = celibate
							}
							is_ill = no
							is_inaccessible_or_incapable_trigger = no
						}
						
						event_target:the_shogun = {
							any_consort = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the Tenno
									any_consort = {
										character = event_target:the_shogun
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_shogun
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_shogun = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
									}
							
									NOR = {
										is_landed = yes
										is_ruler = yes
										is_heir = yes
										trait = incapable
										trait = inbred
										trait = imbecile
										is_maimed_trigger = yes
										trait = infirm
										trait = wounded
										trait = severely_injured
										is_ascetic_trigger = yes
										trait = celibate
									}
									is_ill = no
									is_inaccessible_or_incapable_trigger = no
								}
							}
						}
					}
					
					NOT = {
						trait = content
					}
					
					event_target:the_shogun = {
						NOR = {
							trait = celibate
							trait = eunuch
						}
					}
				}
				
				mult_modifier = {
					factor = 0.5
					always = yes
				}
				
				mult_modifier = {
					factor = 0.01
					event_target:the_shogun = {
						spouse = {
							OR = {
								# We like the spouse
								reverse_opinion = {
									who = ROOT
									value >= 50
								}
								is_friend = ROOT
								is_lover = ROOT
							}
						}
					}
					NOR = {
						trait = deceitful
						trait = ambitious
					}
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					event_target:the_shogun = {
						trait = lustful # More likely to yield results...
					}
				}
				
				# Select the new spouse
				random_list = {
					50 = {
						trigger = {
							any_courtier = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the Tenno
									any_consort = {
										character = event_target:the_shogun
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_shogun
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_shogun = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
									}
								}
								
								NOR = {
									is_landed = yes
									is_ruler = yes
									is_heir = yes
									trait = incapable
									trait = inbred
									trait = imbecile
									is_maimed_trigger = yes
									trait = infirm
									trait = wounded
									trait = severely_injured
									is_ascetic_trigger = yes
									trait = celibate
								}
								is_ill = no
								is_inaccessible_or_incapable_trigger = no
							}
						}
					
						random_courtier = {
							limit = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the Tenno
									any_consort = {
										character = event_target:the_shogun
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_shogun
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_shogun = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
									}
								}
								
								NOR = {
									is_landed = yes
									is_ruler = yes
									is_heir = yes
									trait = incapable
									trait = inbred
									trait = imbecile
									is_maimed_trigger = yes
									trait = infirm
									trait = wounded
									trait = severely_injured
									is_ascetic_trigger = yes
									trait = celibate
								}
								is_ill = no
								is_inaccessible_or_incapable_trigger = no
							}
						
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
							}
							
							preferred_limit = {
								age < 25
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
							}
							
							preferred_limit = {
								age < 30
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
							}
							
							save_event_target_as = new_spouse
						}
					}
					
					50 = {
						trigger = {
							event_target:the_shogun = {
								any_consort = {
									is_female = yes
									has_negative_congenital_trigger = no
									OR = {
										# Already a consort of the Tenno
										any_consort = {
											character = event_target:the_shogun
										}
										# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
										NOR = {
											any_lover = {
												NOT = {
													character = event_target:the_shogun
												}
											}
											any_child_even_if_dead = { always = yes }
											any_spouse_even_if_dead = { always = yes }
											any_consort = { always = yes } # This is missing in vanilla but should probably be here...
											has_focus = focus_seduction
											trait = pregnant
											trait = hard_pregnancy # This is missing in vanilla but should probably be here...
											trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
											trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
											#trait = lustful
											trait = hedonist
											trait = master_seductress
											trait = lovers_pox
											trait = aztec_disease
											trait = great_pox
											has_character_modifier = incestuous_adulteress
											has_character_modifier = adulteress
											has_character_modifier = cradle_robber
											has_character_modifier = adulterous_priest
										}
									}
									
									OR = {
										dynasty = ROOT
										is_close_relative = ROOT
									}
									
									is_adult = yes
									age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
									event_target:the_shogun = {
										spouse = {
											is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
										}
								
										NOR = {
											is_landed = yes
											is_ruler = yes
											is_heir = yes
											trait = incapable
											trait = inbred
											trait = imbecile
											is_maimed_trigger = yes
											trait = infirm
											trait = wounded
											trait = severely_injured
											is_ascetic_trigger = yes
											trait = celibate
										}
										is_ill = no
										is_inaccessible_or_incapable_trigger = no
									}
								}
							}
						}
						
						event_target:the_shogun = {
							random_consort = {
								limit = {
									is_female = yes
									has_negative_congenital_trigger = no
									OR = {
										# Already a consort of the Tenno
										any_consort = {
											character = event_target:the_shogun
										}
										# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
										NOR = {
											any_lover = {
												NOT = {
													character = event_target:the_shogun
												}
											}
											any_child_even_if_dead = { always = yes }
											any_spouse_even_if_dead = { always = yes }
											any_consort = { always = yes } # This is missing in vanilla but should probably be here...
											has_focus = focus_seduction
											trait = pregnant
											trait = hard_pregnancy # This is missing in vanilla but should probably be here...
											trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
											trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
											#trait = lustful
											trait = hedonist
											trait = master_seductress
											trait = lovers_pox
											trait = aztec_disease
											trait = great_pox
											has_character_modifier = incestuous_adulteress
											has_character_modifier = adulteress
											has_character_modifier = cradle_robber
											has_character_modifier = adulterous_priest
										}
									}
									
									OR = {
										dynasty = ROOT
										is_close_relative = ROOT
									}
									
									is_adult = yes
									age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
									event_target:the_shogun = {
										spouse = {
											is_older_than = PREVPREV # Needs to be younger than the Tenno's spouse to be an attractive match
										}
								
										NOR = {
											is_landed = yes
											is_ruler = yes
											is_heir = yes
											trait = incapable
											trait = inbred
											trait = imbecile
											is_maimed_trigger = yes
											trait = infirm
											trait = wounded
											trait = severely_injured
											is_ascetic_trigger = yes
											trait = celibate
										}
										is_ill = no
										is_inaccessible_or_incapable_trigger = no
									}
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
								}
								
								preferred_limit = {
									age < 25
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
								}
								
								preferred_limit = {
									age < 30
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
								}
								
								save_event_target_as = new_spouse
							}
						}
					}
				}
				
				event_target:the_shogun = {
					letter_event = { id = soh.3526 } # Inform the Shogun
				}
			}
			
			100 = {
				# Release the Tenno's prisoner
				trigger = {
					regent_release_prisoner_enabled_trigger = yes
					any_dynasty_member = {
						NOT = {
							is_rival = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					prestige >= 200
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_friend = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_lover = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_close_relative = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_child_of = ROOT
					}
				}
				
				mult_modifier = {
					factor = 10
					current_heir = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = kind
				}
				
				# Select a target
				random_dynasty_member = {
					limit = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_lover = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_lover = ROOT
					}
					
					save_event_target_as = prisoner_to_release
				}
				
				prestige = -100
				
				event_target:the_tenno = {
					character_event = { id = soh.3527 } # Inform the Tenno
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Release the Shogun's prisoner
				trigger = {
					regent_release_prisoner_enabled_trigger = yes
					any_dynasty_member = {
						NOT = {
							is_rival = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
					
					prestige >= 200
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_friend = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_lover = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_close_relative = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						is_child_of = ROOT
					}
				}
				
				mult_modifier = {
					factor = 10
					current_heir = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = kind
				}
				
				# Select a target
				random_dynasty_member = {
					limit = {
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_lover = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_lover = ROOT
					}
					
					save_event_target_as = prisoner_to_release
				}
				
				prestige = -100
				
				event_target:the_shogun = {
					character_event = { id = soh.3527 } # Inform the Shogun
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Release the Tenno's PR's prisoner
				trigger = {
					regent_release_prisoner_enabled_trigger = yes
					any_dynasty_member = {
						NOT = {
							is_rival = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
					}
					
					prestige >= 200
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
						is_friend = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
						is_lover = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
						is_close_relative = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
						is_child_of = ROOT
					}
				}
				
				mult_modifier = {
					factor = 10
					current_heir = {
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = kind
				}
				
				# Select a target
				random_dynasty_member = {
					limit = {
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_lover = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_lover = ROOT
					}
					
					save_event_target_as = prisoner_to_release
				}
				
				prestige = -100
				
				event_target:the_tennos_pr = {
					character_event = { id = soh.3527 } # Inform the Tenno's PR
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Execute the Tenno's prisoner
				trigger = {
					regent_execute_prisoner_enabled_trigger = yes
					
					NOT = {
						trait = kind
					}
					
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
							any_dynasty_member = {
								OR = {
									is_the_tenno_trigger = yes
									is_ryukyuan_tenno_trigger = yes
								}
							}
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					prestige >= 500
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								dynasty = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
						is_any_kinslayer_trigger = yes
					}
				}
				
				mult_modifier = {
					factor = 10
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						current_heir = {
							character = ROOT
						}
					}
				}
				
				# Select a target
				random_rival = {
					limit = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_the_tenno_trigger = yes
								is_ryukyuan_tenno_trigger = yes
								any_dynasty_member = {
									OR = {
										is_the_tenno_trigger = yes
										is_ryukyuan_tenno_trigger = yes
									}
								}
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
					
					preferred_limit = {
						NOR = {
							is_close_relative = ROOT
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							is_close_relative = ROOT
						}
					}
					
					save_event_target_as = prisoner_to_execute
				}
				
				prestige = -250
				
				event_target:the_tenno = {
					character_event = { id = soh.3529 } # Inform the Tenno
				}
				
				event_target:prisoner_to_execute = {
					character_event = { id = 154 } # Execute the prisoner!
				}
			}
			
			100 = {
				# Execute the Shogun's prisoner
				trigger = {
					regent_execute_prisoner_enabled_trigger = yes
					
					NOT = {
						trait = kind
					}
					
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
							any_dynasty_member = {
								OR = {
									is_the_tenno_trigger = yes
									is_ryukyuan_tenno_trigger = yes
								}
							}
						}
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
					}
					
					prestige >= 500
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								dynasty = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_shogun
							}
						}
						is_any_kinslayer_trigger = yes
					}
				}
				
				mult_modifier = {
					factor = 10
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_shogun
						}
						current_heir = {
							character = ROOT
						}
					}
				}
				
				# Select a target
				random_rival = {
					limit = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_the_tenno_trigger = yes
								is_ryukyuan_tenno_trigger = yes
								any_dynasty_member = {
									OR = {
										is_the_tenno_trigger = yes
										is_ryukyuan_tenno_trigger = yes
									}
								}
							}
							prisoner = yes
							host = {
								character = event_target:the_shogun
							}
						}
					}
					
					preferred_limit = {
						NOR = {
							is_close_relative = ROOT
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							is_close_relative = ROOT
						}
					}
					
					save_event_target_as = prisoner_to_execute
				}
				
				prestige = -250
				
				event_target:the_shogun = {
					character_event = { id = soh.3529 } # Inform the Shogun
				}
				
				event_target:prisoner_to_execute = {
					character_event = { id = 154 } # Execute the prisoner!
				}
			}
			
			100 = {
				# Execute the Tenno's PR's prisoner
				trigger = {
					regent_execute_prisoner_enabled_trigger = yes
					
					NOT = {
						trait = kind
					}
					
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
							any_dynasty_member = {
								OR = {
									is_the_tenno_trigger = yes
									is_ryukyuan_tenno_trigger = yes
								}
							}
						}
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
					}
					
					prestige >= 500
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tennos_pr
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								dynasty = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tennos_pr
							}
						}
						is_any_kinslayer_trigger = yes
					}
				}
				
				mult_modifier = {
					factor = 10
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tennos_pr
						}
						current_heir = {
							character = ROOT
						}
					}
				}
				
				# Select a target
				random_rival = {
					limit = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_the_tenno_trigger = yes
								is_ryukyuan_tenno_trigger = yes
								any_dynasty_member = {
									OR = {
										is_the_tenno_trigger = yes
										is_ryukyuan_tenno_trigger = yes
									}
								}
							}
							prisoner = yes
							host = {
								character = event_target:the_tennos_pr
							}
						}
					}
					
					preferred_limit = {
						NOR = {
							is_close_relative = ROOT
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							is_close_relative = ROOT
						}
					}
					
					save_event_target_as = prisoner_to_execute
				}
				
				prestige = -250
				
				event_target:the_tennos_pr = {
					character_event = { id = soh.3529 } # Inform the Tenno's PR
				}
				
				event_target:prisoner_to_execute = {
					character_event = { id = 154 } # Execute the prisoner!
				}
			}
			
			100 = {
				# Fire the Shogun's councillor
				trigger = {
					regent_fire_councillor_enabled_trigger = yes
					event_target:the_shogun = {
						any_voter = {
							OR = {
								is_rival = ROOT
								reverse_opinion = {
									who = ROOT
									value < 0
								}
							}
							NOR = {
								character = ROOT
								has_opinion_modifier = {
									who = ROOT
									modifier = japanese_regent_fired_me
								}
							}
						}
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_fired_councillor
							}
						}
					}
					
					NOT = {
						trait = kind
					}
					
					
					prestige >= 500
				}

				mult_modifier = {
					factor = 0.01
					always = yes
				}

				mult_modifier = {
					factor = 10
					event_target:the_shogun = {
						any_voter = {
							is_rival = ROOT
						}
					}
				}

				mult_modifier = {
					factor = 2
					trait = envious
				}

				mult_modifier = {
					factor = 5
					trait = cruel
				}

				mult_modifier = {
					factor = 2
					trait = proud
				}

				mult_modifier = {
					factor = 0.2
					trait = humble
				}

				# Select the target
				event_target:the_shogun = {
					random_voter = {
						limit = {
							OR = {
								is_rival = ROOT
								reverse_opinion = {
									who = ROOT
									value < 0
								}
							}
							NOR = {
								character = ROOT
								has_opinion_modifier = {
									who = ROOT
									modifier = japanese_regent_fired_me
								}
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists2
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								dynasty = ROOT
								in_faction = faction_regency_loyalists2
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists2
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOT = {
								in_faction = faction_regency_loyalists2
							}
						}
						
						preferred_limit = {
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists2
							}
						}
						
						preferred_limit = {
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
							}
						}
						
						preferred_limit = {
							NOT = {
								in_faction = faction_regency_loyalists2
							}
						}
						
						save_event_target_as = voter_to_fire
					}
				}

				prestige = -250
				
				event_target:the_shogun = {
					character_event = { id = soh.3531 } # Inform the Shogun
				}
				
				event_target:voter_to_fire = {
					character_event = { id = soh.3532 } # Inform the councillor
				}
			}
			
			100 = {
				# Do nothing
			}
		}
	}
}

# The knockoff's PR might use power
character_event = {
	id = soh.3520
	hide_window = yes
	
	is_triggered_only = yes # on_yearly_pulse
	
	only_playable = yes
	
	ai = yes
	war = no
	
	min_age = 16
	only_capable = yes # Works fine here = yes
	prisoner = no
	
	trigger = {
		liege = {
			is_ryukyuan_tenno_trigger = yes
		}
		i_am_appropriate_regent_trigger = yes
		has_regent = no
		is_inaccessible_or_incapable_trigger = no
	}
	
	immediate = {
		save_event_target_as = meddling_character
		
		#log = "[This.GetBestName] got the meddling event!"
		
		if = {
			limit = {
				liege = {
					war = no
				}
			}
			
			liege = {
				save_event_target_as = the_tenno
			}
		}
		
		if = {
			limit = {
				top_liege = {
					war = no
					has_japanese_government_trigger = yes
				}
			}
		}
		
		random_list = {
			100 = {
				# Transfer title from the knockoff
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							AND = {
								real_tier = emperor
								any_demesne_title = {
									count = 2
									tier = king
									ROOT = {
										regent_transfer_kingdom_enabled_trigger = yes
									}
									OR = {
										AND = {
											claimed_by = ROOT
											ROOT = {
												prestige >= 2000
											}
										}
										ROOT = {
											prestige >= 4000
										}
									}
								}
							}
							
							AND = {
								higher_real_tier_than = duke
								any_demesne_title = {
									count = 2
									tier = duke
									ROOT = {
										regent_transfer_duchy_enabled_trigger = yes
									}
									OR = {
										AND = {
											claimed_by = ROOT
											ROOT = {
												prestige >= 1000
											}
										}
										ROOT = {
											prestige >= 2000
										}
									}
								}
							}
							
							any_demesne_title = {
								count = 2
								tier = count
								ROOT = {
									regent_transfer_county_enabled_trigger = yes
								}
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 500
										}
									}
									ROOT = {
										prestige >= 1000
										regent_transfer_county_enabled_trigger = yes
									}
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_a_title
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a title
				if = {
					limit = {
						event_target:the_tenno = {
							real_tier = emperor
							any_demesne_title = {
								count = 2
								tier = king
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 2000
										}
									}
									ROOT = {
										prestige >= 4000
										regent_transfer_kingdom_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = king
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -1000
					}
					
					else = {
						prestige = -2000
					}
				}
				
				else_if = {
					limit = {
						event_target:the_tenno = {
							higher_real_tier_than = duke
							any_demesne_title = {
								count = 2
								tier = duke
								OR = {
									AND = {
										claimed_by = ROOT
										ROOT = {
											prestige >= 1000
										}
									}
									ROOT = {
										prestige >= 2000
										regent_transfer_duchy_enabled_trigger = yes
									}
								}
							}
						}
					}
					
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = duke
								controls_religion = no
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
								claimed_by = ROOT
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -500
					}
					
					else = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tenno = {
						random_demesne_title = {
							limit = {
								tier = count
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOR = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
									event_target:the_tenno = {
										capital_scope = {
											county = {
												title = PREVPREVPREV
											}
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
								NOT = {
									any_de_jure_liege_title = {
										holder_scope = {
											character = event_target:the_tenno
										}
									}
								}
							}
						
							preferred_limit = {
								is_primary_holder_title = no
								claimed_by = ROOT
							}
							
							preferred_limit = {
								claimed_by = ROOT
							}
					
							save_event_target_as = target_title
						}
					}
					
					if = {
						limit = {
							event_target:target_title = {
								claimed_by = ROOT
							}
						}
						
						prestige = -250
					}
					
					else = {
						prestige = -500
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3521 } # Inform the knockoff
				}
			}
			
			100 = {
				# Transfer vassal from the knockoff
				trigger = {
					OR = {
						trait = ambitious
						trait = envious
						trait = proud
						event_target:the_tenno = {
							OR = {
								reverse_opinion = {
									who = ROOT
									value < -25
								}
								is_rival = ROOT
							}
						}
					}
					
					event_target:the_tenno = {
						OR = {
							any_vassal = {
								tier = duke
								war = no
								ROOT = {
									prestige >= 2000
									regent_take_duke_vassal_enabled_trigger = yes
								}
							}
							
							any_vassal = {
								tier = count
								war = no
								ROOT = {
									prestige >= 500
									regent_take_count_vassal_enabled_trigger = yes
								}
							}
						}
						
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_vassal
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					trait = content
				}
				
				mult_modifier = {
					factor = 0.5
					trait = humble
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 2
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 2
					trait = greedy
				}
				
				# Select a vassal
				if = {
					limit = {
						event_target:the_tenno = {
							any_vassal = {
								tier = duke
								war = no
							}
							ROOT = {
								prestige >= 2000
							}
						}
					}
					
					event_target:the_tenno = {
						random_vassal = {
							limit = {
								tier = duke
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_regency_loyalists3
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_tenno
									in_faction = faction_regency_loyalists3
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -1000
					}
				}
				
				else = {
					event_target:the_tenno = {
						random_vassal = {
							limit = {
								tier = count
								war = no
							}
							
							preferred_limit = {
								dynasty = ROOT
								NOT = {
									in_faction = faction_regency_loyalists3
								}
							}
							
							preferred_limit = {
								NOR = {
									dynasty = event_target:the_tenno
									in_faction = faction_regency_loyalists3
								}
							}
							
							preferred_limit = {
								dynasty = ROOT
							}
							
							preferred_limit = {
								NOT = {
									dynasty = event_target:the_tenno
								}
							}
							
							save_event_target_as = target_vassal
						}
					}
					
					ROOT = {
						prestige = -250
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3522 } # Inform the knockoff
				}
				
				event_target:target_vassal = {
					letter_event = { id = soh.3523 } # Inform the vassal
				}
			}
			
			100 = {
				# Transfer money from the knockoff
				trigger = {
					regent_take_money_enabled_trigger = yes
					OR = {
						wealth < 10000
						trait = greedy
					}
					
					event_target:the_tenno = {
						scaled_wealth = {
							value = 1
							min = 25
						}
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_took_money
							}
						}
					}
					
					NOT = {
						trait = content
					}
					
					OR = {
						wealth < 0
						NOT = {
							trait = charitable
						}
					}
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					trait = humble
				}
				
				mult_modifier = {
					factor = 0.1
					trait = just
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 10
					trait = greedy
				}
				
				event_target:the_tenno = {
					character_event = { id = soh.3524 } # Inform the knockoff
				}
			}
			
			100 = {
				# Force actual regency
				trigger = {
					regent_force_actual_regency_enabled_trigger = yes
					OR = {
						trait = ambitious
						trait = proud
						trait = arbitrary
						is_rival = event_target:the_tenno
					}
					
					OR = {
						is_rival = event_target:the_tenno
						NOT = {
							trait = content
						}
					}
					
					event_target:the_tenno = {
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_forced_actual_regency
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					trait = humble
				}
				
				mult_modifier = {
					factor = 0.1
					trait = just
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					trait = envious
				}
				
				mult_modifier = {
					factor = 2
					trait = proud
				}
				
				mult_modifier = {
					factor = 10
					is_rival = event_target:the_tenno
				}
				
				event_target:the_tenno = {
					character_event = { id = soh.3525 } # Inform the knockoff
				}
			}
			
			100 = {
				# Marry the knockoff to my dynasty
				trigger = {
					regent_marry_liege_to_my_dynasty_enabled_trigger = yes
					
					event_target:the_tenno = {
						is_female = no
						is_adult = yes
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_changed_my_spouse
							}
						}
						# The current spouse can't be the mother of the heir
						OR = {
							is_married = no
							current_heir = { # You could probably get around this...
								NAND = {
									dynasty = event_target:the_tenno
									father = {
										character = event_target:the_tenno
									}
									mother = {
										spouse = {
											character = event_target:the_tenno
										}
									}
								}
							}
							spouse = {
								NOR = {
									# Spouse must not be (known to be) pregnant
									trait = pregnant
									trait = hard_pregnancy
									trait = troubled_pregnancy
									trait = pregnancy_finishing
									# If the Tenno loves their spouse, they'll probably care more (particularly if a player), so let's just forbid ending that...
									any_lover = {
										character = event_target:the_tenno
									}
									dynasty = ROOT # If we've already done this, don't do it again!
									dynasty = event_target:the_tenno # An Imperial spouse is harder to remove
									is_playable = yes # A playable spouse probably has enough power to oppose it
								}
							}
						}
						NOT = {
							dynasty = ROOT # No need for marriage ties... and something is clearly wrong
						}
					}
					
					OR = {
						any_courtier = {
							is_female = yes
							has_negative_congenital_trigger = no
							OR = {
								# Already a consort of the knockoff
								any_consort = {
									character = event_target:the_tenno
								}
								# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
								NOR = {
									any_lover = {
										NOT = {
											character = event_target:the_tenno
										}
									}
									any_child_even_if_dead = { always = yes }
									any_spouse_even_if_dead = { always = yes }
									any_consort = { always = yes } # This is missing in vanilla but should probably be here...
									has_focus = focus_seduction
									trait = pregnant
									trait = hard_pregnancy # This is missing in vanilla but should probably be here...
									trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
									trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
									#trait = lustful
									trait = hedonist
									trait = master_seductress
									trait = lovers_pox
									trait = aztec_disease
									trait = great_pox
									has_character_modifier = incestuous_adulteress
									has_character_modifier = adulteress
									has_character_modifier = cradle_robber
									has_character_modifier = adulterous_priest
								}
							}
							
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
							}
							
							is_adult = yes
							age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
							event_target:the_tenno = {
								spouse = {
									is_older_than = PREVPREV # Needs to be younger than the knockoff's spouse to be an attractive match
								}
							}
							
							NOR = {
								is_landed = yes
								is_ruler = yes
								is_heir = yes
								trait = incapable
								trait = inbred
								trait = imbecile
								is_maimed_trigger = yes
								trait = infirm
								trait = wounded
								trait = severely_injured
								is_ascetic_trigger = yes
								trait = celibate
							}
							is_ill = no
							is_inaccessible_or_incapable_trigger = no
						}
						
						event_target:the_tenno = {
							any_consort = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the knockoff
									any_consort = {
										character = event_target:the_tenno
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_tenno
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_tenno = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the knockoff's spouse to be an attractive match
									}
							
									NOR = {
										is_landed = yes
										is_ruler = yes
										is_heir = yes
										trait = incapable
										trait = inbred
										trait = imbecile
										is_maimed_trigger = yes
										trait = infirm
										trait = wounded
										trait = severely_injured
										is_ascetic_trigger = yes
										trait = celibate
									}
									is_ill = no
									is_inaccessible_or_incapable_trigger = no
								}
							}
						}
					}
					
					NOT = {
						trait = content
					}
					
					event_target:the_tenno = {
						NOR = {
							trait = celibate
							trait = eunuch
						}
					}
				}
				
				mult_modifier = {
					factor = 0.5
					always = yes
				}
				
				mult_modifier = {
					factor = 0.01
					event_target:the_tenno = {
						spouse = {
							OR = {
								# We like the spouse
								reverse_opinion = {
									who = ROOT
									value >= 50
								}
								is_friend = ROOT
								is_lover = ROOT
							}
						}
					}
					NOR = {
						trait = deceitful
						trait = ambitious
					}
				}
				
				mult_modifier = {
					factor = 5
					trait = ambitious
				}
				
				mult_modifier = {
					factor = 5
					event_target:the_tenno = {
						trait = lustful # More likely to yield results...
					}
				}
				
				# Select the new spouse
				random_list = {
					50 = {
						trigger = {
							any_courtier = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the knockoff
									any_consort = {
										character = event_target:the_tenno
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_tenno
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_tenno = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the knockoff's spouse to be an attractive match
									}
								}
								
								NOR = {
									is_landed = yes
									is_ruler = yes
									is_heir = yes
									trait = incapable
									trait = inbred
									trait = imbecile
									is_maimed_trigger = yes
									trait = infirm
									trait = wounded
									trait = severely_injured
									is_ascetic_trigger = yes
									trait = celibate
								}
								is_ill = no
								is_inaccessible_or_incapable_trigger = no
							}
						}
					
						random_courtier = {
							limit = {
								is_female = yes
								has_negative_congenital_trigger = no
								OR = {
									# Already a consort of the knockoff
									any_consort = {
										character = event_target:the_tenno
									}
									# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
									NOR = {
										any_lover = {
											NOT = {
												character = event_target:the_tenno
											}
										}
										any_child_even_if_dead = { always = yes }
										any_spouse_even_if_dead = { always = yes }
										any_consort = { always = yes } # This is missing in vanilla but should probably be here...
										has_focus = focus_seduction
										trait = pregnant
										trait = hard_pregnancy # This is missing in vanilla but should probably be here...
										trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
										trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
										#trait = lustful
										trait = hedonist
										trait = master_seductress
										trait = lovers_pox
										trait = aztec_disease
										trait = great_pox
										has_character_modifier = incestuous_adulteress
										has_character_modifier = adulteress
										has_character_modifier = cradle_robber
										has_character_modifier = adulterous_priest
									}
								}
								
								OR = {
									dynasty = ROOT
									is_close_relative = ROOT
								}
								
								is_adult = yes
								age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
								event_target:the_tenno = {
									spouse = {
										is_older_than = PREVPREV # Needs to be younger than the knockoff's spouse to be an attractive match
									}
								}
								
								NOR = {
									is_landed = yes
									is_ruler = yes
									is_heir = yes
									trait = incapable
									trait = inbred
									trait = imbecile
									is_maimed_trigger = yes
									trait = infirm
									trait = wounded
									trait = severely_injured
									is_ascetic_trigger = yes
									trait = celibate
								}
								is_ill = no
								is_inaccessible_or_incapable_trigger = no
							}
						
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
								is_friend = ROOT
							}
							
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
								NOT = {
									is_rival = ROOT
								}
							}
							
							preferred_limit = {
								age < 25
								is_attractive_trigger = yes
							}
							
							preferred_limit = {
								age < 25
							}
							
							preferred_limit = {
								age < 25
								is_unattractive_trigger = no
							}
							
							preferred_limit = {
								age < 30
								is_attractive_trigger = yes
							}
							
							preferred_limit = {
								age < 30
							}
							
							preferred_limit = {
								age < 30
								is_unattractive_trigger = no
							}
							
							save_event_target_as = new_spouse
						}
					}
					
					50 = {
						trigger = {
							event_target:the_tenno = {
								any_consort = {
									is_female = yes
									has_negative_congenital_trigger = no
									OR = {
										# Already a consort of the knockoff
										any_consort = {
											character = event_target:the_tenno
										}
										# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
										NOR = {
											any_lover = {
												NOT = {
													character = event_target:the_tenno
												}
											}
											any_child_even_if_dead = { always = yes }
											any_spouse_even_if_dead = { always = yes }
											any_consort = { always = yes } # This is missing in vanilla but should probably be here...
											has_focus = focus_seduction
											trait = pregnant
											trait = hard_pregnancy # This is missing in vanilla but should probably be here...
											trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
											trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
											#trait = lustful
											trait = hedonist
											trait = master_seductress
											trait = lovers_pox
											trait = aztec_disease
											trait = great_pox
											has_character_modifier = incestuous_adulteress
											has_character_modifier = adulteress
											has_character_modifier = cradle_robber
											has_character_modifier = adulterous_priest
										}
									}
									
									OR = {
										dynasty = ROOT
										is_close_relative = ROOT
									}
									
									is_adult = yes
									age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
									event_target:the_tenno = {
										spouse = {
											is_older_than = PREVPREV # Needs to be younger than the knockoff's spouse to be an attractive match
										}
								
										NOR = {
											is_landed = yes
											is_ruler = yes
											is_heir = yes
											trait = incapable
											trait = inbred
											trait = imbecile
											is_maimed_trigger = yes
											trait = infirm
											trait = wounded
											trait = severely_injured
											is_ascetic_trigger = yes
											trait = celibate
										}
										is_ill = no
										is_inaccessible_or_incapable_trigger = no
									}
								}
							}
						}
							
						event_target:the_tenno = {
							random_consort = {
								limit = {
									is_female = yes
									has_negative_congenital_trigger = no
									OR = {
										# Already a consort of the knockoff
										any_consort = {
											character = event_target:the_tenno
										}
										# Subset of is_virgin_trigger; blocking Lustful is a bit too harsh...
										NOR = {
											any_lover = {
												NOT = {
													character = event_target:the_tenno
												}
											}
											any_child_even_if_dead = { always = yes }
											any_spouse_even_if_dead = { always = yes }
											any_consort = { always = yes } # This is missing in vanilla but should probably be here...
											has_focus = focus_seduction
											trait = pregnant
											trait = hard_pregnancy # This is missing in vanilla but should probably be here...
											trait = troubled_pregnancy # This is missing in vanilla but should probably be here...
											trait = pregnancy_finishing # This is missing in vanilla but should probably be here...
											#trait = lustful
											trait = hedonist
											trait = master_seductress
											trait = lovers_pox
											trait = aztec_disease
											trait = great_pox
											has_character_modifier = incestuous_adulteress
											has_character_modifier = adulteress
											has_character_modifier = cradle_robber
											has_character_modifier = adulterous_priest
										}
									}
									
									OR = {
										dynasty = ROOT
										is_close_relative = ROOT
									}
									
									is_adult = yes
									age < 35 # Needs to be of childbearing age, with a decent margin; this is also good for the regent...
									event_target:the_tenno = {
										spouse = {
											is_older_than = PREVPREV # Needs to be younger than the knockoff's spouse to be an attractive match
										}
								
										NOR = {
											is_landed = yes
											is_ruler = yes
											is_heir = yes
											trait = incapable
											trait = inbred
											trait = imbecile
											is_maimed_trigger = yes
											trait = infirm
											trait = wounded
											trait = severely_injured
											is_ascetic_trigger = yes
											trait = celibate
										}
										is_ill = no
										is_inaccessible_or_incapable_trigger = no
									}
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
									is_friend = ROOT
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
									NOT = {
										is_rival = ROOT
									}
								}
								
								preferred_limit = {
									age < 25
									is_attractive_trigger = yes
								}
								
								preferred_limit = {
									age < 25
								}
								
								preferred_limit = {
									age < 25
									is_unattractive_trigger = no
								}
								
								preferred_limit = {
									age < 30
									is_attractive_trigger = yes
								}
								
								preferred_limit = {
									age < 30
								}
								
								preferred_limit = {
									age < 30
									is_unattractive_trigger = no
								}
								
								save_event_target_as = new_spouse
							}
						}
					}
				}
				
				event_target:the_tenno = {
					letter_event = { id = soh.3526 } # Inform the knockoff
				}
			}
			
			100 = {
				# Release the knockoff's prisoner
				trigger = {
					regent_release_prisoner_enabled_trigger = yes
					any_dynasty_member = {
						NOT = {
							is_rival = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					prestige >= 200
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_friend = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_lover = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_close_relative = ROOT
					}
				}
				
				mult_modifier = {
					factor = 5
					any_dynasty_member = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						is_child_of = ROOT
					}
				}
				
				mult_modifier = {
					factor = 10
					current_heir = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
				}
				
				mult_modifier = {
					factor = 2
					trait = kind
				}
				
				# Select a target
				random_dynasty_member = {
					limit = {
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_child_of = ROOT
						is_lover = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						ROOT = {
							current_heir = {
								character = PREVPREV
							}
						}
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_friend = ROOT
					}
					
					preferred_limit = {
						is_close_relative = ROOT
						is_lover = ROOT
					}
					
					save_event_target_as = prisoner_to_release
				}
				
				prestige = -100
				
				event_target:the_tenno = {
					character_event = { id = soh.3527 } # Inform the knockoff
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Execute the knockoff's prisoner
				trigger = {
					regent_execute_prisoner_enabled_trigger = yes
					
					NOT = {
						trait = kind
					}
					
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
							any_dynasty_member = {
								OR = {
									is_the_tenno_trigger = yes
									is_ryukyuan_tenno_trigger = yes
								}
							}
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
					}
					
					prestige >= 500
				}
				
				mult_modifier = {
					factor = 0.01
					always = yes
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_close_relative = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
				}
				
				mult_modifier = {
					factor = 0.1
					NOT = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								dynasty = ROOT
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
						is_any_kinslayer_trigger = yes
					}
				}
				
				mult_modifier = {
					factor = 10
					trait = cruel
				}
				
				mult_modifier = {
					factor = 10
					trait = ambitious
					any_rival = {
						NOR = {
							is_friend = ROOT
							is_lover = ROOT
						}
						prisoner = yes
						host = {
							character = event_target:the_tenno
						}
						current_heir = {
							character = ROOT
						}
					}
				}
				
				# Select a target
				random_rival = {
					limit = {
						any_rival = {
							NOR = {
								is_friend = ROOT
								is_lover = ROOT
								is_the_tenno_trigger = yes
								is_ryukyuan_tenno_trigger = yes
								any_dynasty_member = {
									OR = {
										is_the_tenno_trigger = yes
										is_ryukyuan_tenno_trigger = yes
									}
								}
							}
							prisoner = yes
							host = {
								character = event_target:the_tenno
							}
						}
					}
					
					preferred_limit = {
						NOR = {
							is_close_relative = ROOT
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							dynasty = ROOT
						}
					}
					
					preferred_limit = {
						NOT = {
							is_close_relative = ROOT
						}
					}
					
					save_event_target_as = prisoner_to_execute
				}
				
				prestige = -250
				
				event_target:the_tenno = {
					character_event = { id = soh.3527 } # Inform the knockoff
				}
				
				event_target:prisoner_to_release = {
					character_event = { id = 153 } # Release the prisoner!
				}
			}
			
			100 = {
				# Fire the knockoff's councillor
				trigger = {
					regent_fire_councillor_enabled_trigger = yes
					event_target:the_tenno = {
						any_voter = {
							OR = {
								is_rival = ROOT
								reverse_opinion = {
									who = ROOT
									value < 0
								}
							}
							NOR = {
								character = ROOT
								has_opinion_modifier = {
									who = ROOT
									modifier = japanese_regent_fired_me
								}
							}
						}
						NOT = {
							has_opinion_modifier = {
								who = ROOT
								modifier = japanese_regent_fired_councillor
							}
						}
					}
					
					NOT = {
						trait = kind
					}
					
					
					prestige >= 500
				}

				mult_modifier = {
					factor = 0.01
					always = yes
				}

				mult_modifier = {
					factor = 10
					event_target:the_tenno = {
						any_voter = {
							is_rival = ROOT
						}
					}
				}

				mult_modifier = {
					factor = 2
					trait = envious
				}

				mult_modifier = {
					factor = 5
					trait = cruel
				}

				mult_modifier = {
					factor = 2
					trait = proud
				}

				mult_modifier = {
					factor = 0.2
					trait = humble
				}

				# Select the target
				event_target:the_tenno = {
					random_voter = {
						limit = {
							OR = {
								is_rival = ROOT
								reverse_opinion = {
									who = ROOT
									value < 0
								}
							}
							NOR = {
								character = ROOT
								has_opinion_modifier = {
									who = ROOT
									modifier = japanese_regent_fired_me
								}
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists3
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								dynasty = ROOT
								in_faction = faction_regency_loyalists3
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOR = {
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists3
							}
						}
						
						preferred_limit = {
							is_rival = ROOT
							NOT = {
								in_faction = faction_regency_loyalists3
							}
						}
						
						preferred_limit = {
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
								in_faction = faction_regency_loyalists3
							}
						}
						
						preferred_limit = {
							NOR = {
								dynasty = ROOT
								is_close_relative = ROOT
							}
						}
						
						preferred_limit = {
							NOT = {
								in_faction = faction_regency_loyalists3
							}
						}
						
						save_event_target_as = voter_to_fire
					}
				}

				prestige = -250
				
				event_target:the_tenno = {
					character_event = { id = soh.3531 } # Inform the knockoff
				}
				
				event_target:voter_to_fire = {
					character_event = { id = soh.3532 } # Inform the councillor
				}
			}
			
			100 = {
				# Do nothing
			}
		}
	}
}

### Transfer title

# Inform former holer
letter_event = {
	id = soh.3521
	desc = EVTDESC_SOH_3521
	
	show_from_from = yes
	
	is_triggered_only = yes # take_title_decision title_decision
	
	immediate = {
		if = {
			limit = {
				event_target:target_title = {
					title = c_yamashiro
				}
			}
			
			random_demesne_title = {
				limit = {
					tier = count
					NOT = {
						title = c_yamashiro
					}
				}
					
				save_event_target_as = target_title
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3521 # I can't oppose this...
		
		# GRACETODO
		
		opinion = {
			who = event_target:meddling_character
			modifier = japanese_regent_took_a_title
		}
		
		event_target:target_title = {
			grant_title_no_opinion = event_target:meddling_character
			
			if = {
				limit = {
					event_target:meddling_character = {
						NOR = {
							is_the_tenno_trigger = yes
							is_ryukyuan_tenno_trigger = yes
						}
					}
				}
				
				add_weak_pressed_claim = ROOT
			}
		}
	}
}

### Tranfer vassal

# Transfer vassal - former liege
letter_event = {
	id = soh.3522
	desc = EVTDESC_SOH_3522
	
	show_from_from = yes
	
	is_triggered_only = yes # take_vassal_decision targeted_decision
	
	option = {
		name = EVTOPTA_SOH_3522 # I can't oppose this...
		
		# GRACETODO
		
		opinion = {
			who = event_target:meddling_character
			modifier = japanese_regent_took_vassal
		}
	}
}

# Transfer vassal - new vassal
letter_event = {
	id = soh.3523
	desc = EVTDESC_SOH_3523
	
	show_from_from = yes
	
	is_triggered_only = yes # take_vassal_decision targeted_decision
	
	option = {
		trigger = {
			event_target:meddling_character = {
				NOR = {
					root_has_imprisonment_reason_opinion_trigger = yes
					
					is_rival = ROOT
					
					any_claim = {
						holder_scope = {
							character = ROOT
						}
					}
				}
			}
		}
		
		name = EVTOPTA_SOH_3523 # I suppose that happened...
	}
	
	option = {
		trigger = {
			event_target:meddling_character = {
				OR = {
					root_has_imprisonment_reason_opinion_trigger = yes
					
					is_rival = ROOT
					
					any_claim = {
						holder_scope = {
							character = ROOT
						}
					}
				}
			}
		}
		
		name = EVTOPTB_SOH_3523 # I have a bad feeling about this
	}
}

### Take money

# Took money - inform liege
character_event = {
	id = soh.3524
	desc = EVTDESC_SOH_3524
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # regent_take_money decision
	
	option = {
		name = EVTOPTA_SOH_3524 # That's theft!
		
		transfer_scaled_wealth = {
			to = event_target:meddling_character
			value = 1
			min = 25
			max = 1000
		}
		
		opinion = {
			who = event_target:meddling_character
			modifier = japanese_regent_took_money
		}
	}
}

### Force actual regency

# Inform liege
character_event = {
	id = soh.3525
	desc = EVTDESC_SOH_3525
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # regent_force_actual_regency decision
	
	option = {
		name = EVTOPTA_SOH_3529 # I suppose I have no choice...
		
		add_character_modifier = {
			modifier = forced_actual_regency
			days = 365
		}
		
		opinion = {
			who = event_target:meddling_character
			modifier = japanese_regent_forced_actual_regency
		}
	}
}

### Change liege's spouse

# Inform liege
letter_event = {
	id = soh.3526
	desc = EVTDESC_SOH_3526
	
	show_from_from = yes
	
	is_triggered_only = yes # regent_marry_liege_to_my_dynasty targeted_decision
	
	immediate = {
		spouse = {
			save_event_target_as = old_spouse
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3526 # I can't oppose this...
		
		if = {
			limit = {
				is_betrothed = yes
			}
			
			break_betrothal = yes
		}
		
		# GRACETODO
		
		opinion = {
			who = event_target:meddling_character
			modifier = japanese_regent_changed_my_spouse
		}
		
		if = {
			limit = {
				spouse = {
					character = event_target:old_spouse
				}
			}
			
			remove_spouse = event_target:old_spouse
			
			add_consort = event_target:old_spouse
		}
		
		add_spouse = event_target:new_spouse
	}
}

### Release prisoner

# Inform the liege that a prisoner was released
character_event = {
	id = soh.3527
	desc = EVTDESC_SOH_3527
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # regent_release_prisoner targeted_decision
	
	option = {
		name = EVTOPTA_SOH_3527 # event_target:meddling_character dares?
		
		opinion = {
			who = event_target:meddling_character
			modifier = japanese_regent_released_a_prisoner
		}
	}
}

# Ping the Regent, then release the prisoner
character_event = {
	id = soh.3528
	hide_window = yes
	
	is_triggered_only = yes # regent_release_prisoner targeted_decision
	
	immediate = {
		event_target:prisoner_to_release = {
			character_event = { id = 153 } # Release the prisoner!
		}
	}
}

### Execute prisoner

# Inform the liege that a prisoner was executed
character_event = {
	id = soh.3529
	desc = EVTDESC_SOH_3529
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # regent_execute_prisoner targeted_decision
	
	option = {
		name = EVTOPTA_SOH_3529 # event_target:meddling_character dares?
		
		opinion = {
			who = event_target:meddling_character
			modifier = japanese_regent_executed_a_prisoner
		}
	}
}

# Ping the Regent, then execute the prisoner
character_event = {
	id = soh.3530
	hide_window = yes
	
	is_triggered_only = yes # regent_execute_prisoner targeted_decision
	
	immediate = {
		event_target:prisoner_to_execute = {
			character_event = { id = 154 } # Execute the prisoner!
		}
	}
}

### Fire councillor

# Inform liege of the firing
character_event = {
	id = soh.3531
	desc = EVTDESC_SOH_3531
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # regent_fire_councillor targeted_decision
	
	option = {
		name = EVTOPTA_SOH_3531# event_target:meddling_character dares?
		
		opinion = { # One year
			who = event_target:meddling_character
			modifier = japanese_regent_fired_councillor
		}
	}
}

# Inform the councillor being fired
character_event = {
	id = soh.3532
	desc = EVTDESC_SOH_3532
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes # regent_fire_councillor targeted_decision
	
	option = {
		name = EVTOPTA_SOH_3532 # event_target:meddling_character dares?
		
		add_character_modifier = { # Five years
			modifier = forced_off_the_council
			months = 60
		}
		
		if = {
			limit = {
				OR = {
					is_friend = event_target:meddling_character
					is_lover = event_target:meddling_character
				}
			}
			
			if = {
				limit = {
					is_friend = event_target:meddling_character
				}
				
				remove_friend = event_target:meddling_character
			}
			
			else = {
				remove_lover = event_target:meddling_character
			}
		}
		
		else_if = {
			limit = {
				NOT = {
					is_rival = event_target:meddling_character
				}
			}
			
			random = {
				chance = 50
				add_rival = event_target:meddling_character
			}
		}
		
		opinion = { # Ten years
			who = event_target:meddling_character
			modifier = japanese_regent_fired_me
		}
		
		fire_councillor_effect = yes
	}
}



##### Plots

### Plot to replace the Permanent Regent

letter_event = {
	id = soh.3533
	desc = EVTDESC_SOH_3533
	
	show_from_from = yes
	
	is_triggered_only = yes # plot_replace_permanent_regent_decision/plot_replace_permanent_regent_decision2/plot_replace_permanent_regent_decision3
	
	option = {
		name = EVTOPTA_SOH_3533 # Curses!
		
		if = {
			limit = {
				trait = japanese_regent
			}
			
			remove_trait = japanese_regent
			
			clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
			
			FROM = {
				add_trait = japanese_regent
				
				set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
			}
		}
		
		else_if = {
			limit = {
				trait = japanese_regent2
			}
			
			remove_trait = japanese_regent2
			
			clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
			
			FROM = {
				add_trait = japanese_regent2
			}
		}
		
		else_if = {
			limit = {
				trait = japanese_regent3
			}
			
			remove_trait = japanese_regent3
			
			clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
			
			FROM = {
				add_trait = japanese_regent3
				
				set_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
			}
		}
		
		FROM = {
			liege = {
				regent = {
					remove_title = title_regent
				}
				
				any_courtier_or_vassal = {
					limit = {
						has_minor_title = title_appointed_regent
					}
					remove_title = title_appointed_regent
				}
			}
			
			give_minor_title = title_regent
			
			give_minor_title = title_appointed_regent
		}
		
		opinion = {
			who = FROM
			modifier = opinion_stole_the_regency
		}
		
		# GRACETODO
	}
}

# Backers informed
letter_event = {
	id = soh.3534
	desc = EVTDESC_SOH_3534
	
	show_from_from = yes
	
	is_triggered_only = yes # plot_replace_permanent_regent_decision/plot_replace_permanent_regent_decision2/plot_replace_permanent_regent_decision3
	
	option = {
		name = EVTOPTA_SOH_3534 # Good to hear!
		
		opinion = {
			modifier = opinion_supported_as_regent
			who = FROM
			years = 10
		}
	}
}

# Liege informed
letter_event = {
	id = soh.3535
	desc = EVTDESC_SOH_3535
	
	show_from_from = yes
	
	is_triggered_only = yes # plot_replace_permanent_regent_decision/plot_replace_permanent_regent_decision2/plot_replace_permanent_regent_decision3
	
	option = {
		name = EVTOPTA_SOH_3535 # I see...
	}
}



##### End Permanent Regency

### End Permanent Regency - no Regency Loyalists faction

# Regent gets ultimatum
letter_event = {
	id = soh.3536
	desc = EVTDESC_SOH_3536
	
	is_triggered_only = yes # overthrow_my_regent_decision decision
	
	immediate = {
		diplomatic_immunity = yes 
	}
	
	option = {
		name = EVTOPTA_SOH_3536 # I suppose I have to accept this...
		
		# GRACETODO
		
		remove_trait = japanese_regent
		
		clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
		
		hidden_tooltip = {
			diplomatic_immunity = no
			
			FROM = {
				letter_event = { id = soh.3537 }
				
				diplomatic_immunity = no
			}
		}
		
		ai_chance = {
			factor = 5
			
			trigger = {
				relative_power_to_liege < 1.0
			}
			
			mult_modifier = {
				factor = 0.75
				relative_power_to_liege = 0.75
			}
			
			mult_modifier = {
				factor = 1.25
				is_weak_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = craven
			}
			
			mult_modifier = {
				factor = 1.25
				trait = humble
			}
			
			mult_modifier = {
				factor = 1.25
				trait = kind
			}
			
			mult_modifier = {
				factor = 1.25
				trait = charitable
			}
			
			mult_modifier = {
				factor = 1.25
				trait = patient
			}
			
			mult_modifier = {
				factor = 1.25
				trait = content
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_3536 # Never!
		
		# GRACETODO

		if = {
			limit = {
				relative_power_to_liege < 1.0
			}

			random = {
				chance = 25

				character_event = {
					id = 45002 # Loyalists flock to the regent's banner
					months = 4
				}
			}
		}

		FROM = {
			show_scope_change = no

			letter_event = {
				id = soh.3538
				days = 3
				tooltip = EVTTOOLTIP8100
			}

			hidden_effect = {
				if = {
					limit = {
						ROOT = {
							relative_power_to_liege >= 1.5
						}
					}

					random_list = {
						50 = { }

						30 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}

				else_if = {
					limit = {
						ROOT = {
							relative_power_to_liege >= 1.0
							relative_power_to_liege < 1.5
						}
					}

					random_list = {
						75 = { }

						5 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}
			}
		}
		
		ai_chance = {
			factor = 95
			
			mult_modifier = {
				factor = 1.25
				is_strong_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = brave
			}
			
			mult_modifier = {
				factor = 1.25
				trait = proud
			}
			
			mult_modifier = {
				factor = 1.25
				trait = envious
			}
			
			mult_modifier = {
				factor = 1.25
				trait = greedy
			}
			
			mult_modifier = {
				factor = 1.25
				trait = wroth
			}
			
			mult_modifier = {
				factor = 1.25
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.75
				relative_power_to_liege < 0.5
			}
		}
	}
}

# The liege is informed that the regent folded
letter_event = {
	id = soh.3537
	desc = EVTDESC_SOH_3537
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3537 # Assuming direct control!
		
		remove_trait = under_regency
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# The liege is informed that the regent isn't folding
letter_event = {
	id = soh.3538
	desc = EVTDESC_SOH_3538
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3538 # Then face me in battle!
		
		remove_trait = under_regency
		
		FROM = {
			reverse_war = {
				target = ROOT
				casus_belli = end_regency_war
			}
		}
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# Regent gets ultimatum
letter_event = {
	id = soh.3539
	desc = EVTDESC_SOH_3539
	
	is_triggered_only = yes # overthrow_my_regent_decision2 decision
	
	immediate = {
		diplomatic_immunity = yes 
	}
	
	option = {
		name = EVTOPTA_SOH_3539 # I suppose I have to accept this...
		
		# GRACETODO
		
		remove_trait = japanese_regent2
		
		clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
		
		hidden_tooltip = {
			diplomatic_immunity = no
			
			FROM = {
				letter_event = { id = soh.3540 }
				
				diplomatic_immunity = no
			}
		}
		
		ai_chance = {
			factor = 5
			
			trigger = {
				relative_power_to_liege < 1.0
			}
			
			mult_modifier = {
				factor = 0.75
				relative_power_to_liege = 0.75
			}
			
			mult_modifier = {
				factor = 1.25
				is_weak_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = craven
			}
			
			mult_modifier = {
				factor = 1.25
				trait = humble
			}
			
			mult_modifier = {
				factor = 1.25
				trait = kind
			}
			
			mult_modifier = {
				factor = 1.25
				trait = charitable
			}
			
			mult_modifier = {
				factor = 1.25
				trait = patient
			}
			
			mult_modifier = {
				factor = 1.25
				trait = content
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_3539 # Never!
		
		# GRACETODO

		if = {
			limit = {
				relative_power_to_liege < 1.0
			}

			random = {
				chance = 25

				character_event = {
					id = 45002 # Loyalists flock to the regent's banner
					months = 4
				}
			}
		}

		FROM = {
			show_scope_change = no

			letter_event = {
				id = soh.3541
				days = 3
				tooltip = EVTTOOLTIP8100
			}

			hidden_effect = {
				if = {
					limit = {
						ROOT = {
							relative_power_to_liege >= 1.5
						}
					}

					random_list = {
						50 = { }

						30 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}

				else_if = {
					limit = {
						ROOT = {
							relative_power_to_liege >= 1.0
							relative_power_to_liege < 1.5
						}
					}

					random_list = {
						75 = { }

						5 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}
			}
		}
		
		ai_chance = {
			factor = 95
			
			mult_modifier = {
				factor = 1.25
				is_strong_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = brave
			}
			
			mult_modifier = {
				factor = 1.25
				trait = proud
			}
			
			mult_modifier = {
				factor = 1.25
				trait = envious
			}
			
			mult_modifier = {
				factor = 1.25
				trait = greedy
			}
			
			mult_modifier = {
				factor = 1.25
				trait = wroth
			}
			
			mult_modifier = {
				factor = 1.25
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.75
				relative_power_to_liege < 0.5
			}
		}
	}
}

# The liege is informed that the regent folded
letter_event = {
	id = soh.3540
	desc = EVTDESC_SOH_3540
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3540 # Assuming direct control!
		
		remove_trait = under_regency2
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# The liege is informed that the regent isn't folding
letter_event = {
	id = soh.3541
	desc = EVTDESC_SOH_3541
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3541 # Then face me in battle!
		
		remove_trait = under_regency2
		
		FROM = {
			reverse_war = {
				target = ROOT
				casus_belli = end_regency_war2
			}
		}
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# Regent gets ultimatum
letter_event = {
	id = soh.3542
	desc = EVTDESC_SOH_3542
	
	is_triggered_only = yes # overthrow_my_regent_decision3 decision
	
	immediate = {
		diplomatic_immunity = yes 
	}
	
	option = {
		name = EVTOPTA_SOH_3542 # I suppose I have to accept this...
		
		# GRACETODO
		
		remove_trait = japanese_regent3
		
		clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
		
		hidden_tooltip = {
			diplomatic_immunity = no
			
			FROM = {
				letter_event = { id = soh.3543 }
				
				diplomatic_immunity = no
			}
		}
		
		ai_chance = {
			factor = 5
			
			trigger = {
				relative_power_to_liege < 1.0
			}
			
			mult_modifier = {
				factor = 0.75
				relative_power_to_liege = 0.75
			}
			
			mult_modifier = {
				factor = 1.25
				is_weak_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = craven
			}
			
			mult_modifier = {
				factor = 1.25
				trait = humble
			}
			
			mult_modifier = {
				factor = 1.25
				trait = kind
			}
			
			mult_modifier = {
				factor = 1.25
				trait = charitable
			}
			
			mult_modifier = {
				factor = 1.25
				trait = patient
			}
			
			mult_modifier = {
				factor = 1.25
				trait = content
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_3542 # Never!
		
		# GRACETODO

		if = {
			limit = {
				relative_power_to_liege < 1.0
			}

			random = {
				chance = 25

				character_event = {
					id = 45002 # Loyalists flock to the regent's banner
					months = 4
				}
			}
		}

		FROM = {
			show_scope_change = no

			letter_event = {
				id = soh.3544
				days = 3
				tooltip = EVTTOOLTIP8100
			}

			hidden_effect = {
				if = {
					limit = {
						ROOT = {
							relative_power_to_liege >= 1.5
						}
					}

					random_list = {
						50 = { }

						30 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}

				else_if = {
					limit = {
						ROOT = {
							relative_power_to_liege >= 1.0
							relative_power_to_liege < 1.5
						}
					}

					random_list = {
						75 = { }

						5 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}
			}
		}
		
		ai_chance = {
			factor = 95
			
			mult_modifier = {
				factor = 1.25
				is_strong_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = brave
			}
			
			mult_modifier = {
				factor = 1.25
				trait = proud
			}
			
			mult_modifier = {
				factor = 1.25
				trait = envious
			}
			
			mult_modifier = {
				factor = 1.25
				trait = greedy
			}
			
			mult_modifier = {
				factor = 1.25
				trait = wroth
			}
			
			mult_modifier = {
				factor = 1.25
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 0.75
				relative_power_to_liege < 0.5
			}
		}
	}
}

# The liege is informed that the regent folded
letter_event = {
	id = soh.3543
	desc = EVTDESC_SOH_3543
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3540 # Assuming direct control!
		
		remove_trait = under_regency3
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# The liege is informed that the regent isn't folding
letter_event = {
	id = soh.3544
	desc = EVTDESC_SOH_3544
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3544 # Then face me in battle!
		
		remove_trait = under_regency3
		
		FROM = {
			reverse_war = {
				target = ROOT
				casus_belli = end_regency_war3
			}
		}
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

### End Permanent Regency - Regency Loyalists faction exists

# Regent gets ultimatum
letter_event = {
	id = soh.3545
	desc = EVTDESC_SOH_3545
	
	is_triggered_only = yes # overthrow_my_regent_decision decision
	
	immediate = {
		diplomatic_immunity = yes 
		
		any_faction_backer = {
			faction = faction_regency_loyalists
			diplomatic_immunity = yes
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3545 # I suppose I have to accept this...
		
		# GRACETODO
		
		remove_trait = japanese_regent
		
		clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
		
		hidden_tooltip = {
			any_faction_backer = {
				faction = faction_regency_loyalists
				
				letter_event = { id = soh.3546 }
				
				diplomatic_immunity = no
			}
			
			letter_event = { id = soh.3547 }
			
			diplomatic_immunity = no
		}
		
		ai_chance = {
			factor = 5
			
			trigger = {
				faction_power = {
					faction = faction_regency_loyalists
					power < 5.0
				}
			}
			
			mult_modifier = {
				factor = 0.5
				faction_power = {
					faction = faction_regency_loyalists
					power >= 1.0
				}
			}
			
			mult_modifier = {
				factor = 1.25
				is_weak_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = craven
			}
			
			mult_modifier = {
				factor = 1.25
				trait = humble
			}
			
			mult_modifier = {
				factor = 1.25
				trait = kind
			}
			
			mult_modifier = {
				factor = 1.25
				trait = charitable
			}
			
			mult_modifier = {
				factor = 1.25
				trait = patient
			}
			
			mult_modifier = {
				factor = 1.25
				trait = content
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_3545 # Never!
		
		# GRACETODO

		if = {
			limit = {
				faction_power = {
					faction = faction_regency_loyalists
					power >= 1.0
				}
			}

			random = {
				chance = 25

				character_event = {
					id = 45002 # Loyalists flock to the regent's banner
					months = 4
				}
			}
		}

		FROM = {
			show_scope_change = no

			letter_event = {
				id = soh.3548
				days = 3
				tooltip = EVTTOOLTIP8100
			}

			hidden_effect = {
				if = {
					limit = {
						ROOT = {
							faction_power = {
								faction = faction_regency_loyalists
								power < 0.75
							}
						}
					}

					random_list = {
						50 = { }

						30 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}

				else_if = {
					limit = {
						ROOT = {
							faction_power = {
								faction = faction_regency_loyalists
								power < 1.5
							}
						}
					}

					random_list = {
						75 = { }

						5 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}
			}
		}
		
		ai_chance = {
			factor = 95
			
			mult_modifier = {
				factor = 1.25
				is_strong_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = brave
			}
			
			mult_modifier = {
				factor = 1.25
				trait = proud
			}
			
			mult_modifier = {
				factor = 1.25
				trait = envious
			}
			
			mult_modifier = {
				factor = 1.25
				trait = greedy
			}
			
			mult_modifier = {
				factor = 1.25
				trait = wroth
			}
			
			mult_modifier = {
				factor = 1.25
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists
					power >= 1.5
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists
					power >= 2.0
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists
					power >= 3.0
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists
					power >= 4.0
				}
			}
		}
	}
}

# Faction members are informed that the regent folded
letter_event = {
	id = soh.3546
	desc = EVTDESC_SOH_3546
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3546 # Really? We had your back!
	}
}

# The liege is informed that the regent folded
letter_event = {
	id = soh.3547
	desc = EVTDESC_SOH_3547
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3547 # Assuming direct control!
		
		remove_trait = under_regency
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# The liege is informed that the regent isn't folding
letter_event = {
	id = soh.3548
	desc = EVTDESC_SOH_3548
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			any_faction_backer = {
				faction = faction_regency_loyalists
				reverse_opinion = {
					modifier = opinion_fought_for_regent
					who = FROM
					years = 20
				}
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3548 # Then face me in battle!
		
		remove_trait = under_regency
		
		FROM = {
			war = {
				target = ROOT
				casus_belli = end_regency_war_faction
				faction = faction_regency_loyalists
			}
		}
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# Regent gets ultimatum
letter_event = {
	id = soh.3549
	desc = EVTDESC_SOH_3549
	
	is_triggered_only = yes # overthrow_my_regent_decision2 decision
	
	immediate = {
		diplomatic_immunity = yes 
		
		any_faction_backer = {
			faction = faction_regency_loyalists2
			
			diplomatic_immunity = yes
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3549 # I suppose I have to accept this...
		
		# GRACETODO
		
		remove_trait = japanese_regent2
		
		clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
		
		hidden_tooltip = {
			any_faction_backer = {
				faction = faction_regency_loyalists2
				
				letter_event = { id = soh.3550 }
				
				diplomatic_immunity = no
			}
			
			letter_event = { id = soh.3551 }
			
			diplomatic_immunity = no
		}
		
		ai_chance = {
			factor = 5
			
			trigger = {
				faction_power = {
					faction = faction_regency_loyalists2
					power < 5.0
				}
			}
			
			mult_modifier = {
				factor = 0.5
				faction_power = {
					faction = faction_regency_loyalists2
					power >= 1.0
				}
			}
			
			mult_modifier = {
				factor = 1.25
				is_weak_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = craven
			}
			
			mult_modifier = {
				factor = 1.25
				trait = humble
			}
			
			mult_modifier = {
				factor = 1.25
				trait = kind
			}
			
			mult_modifier = {
				factor = 1.25
				trait = charitable
			}
			
			mult_modifier = {
				factor = 1.25
				trait = patient
			}
			
			mult_modifier = {
				factor = 1.25
				trait = content
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_3549 # Never!
		
		# GRACETODO

		if = {
			limit = {
				faction_power = {
					faction = faction_regency_loyalists2
					power >= 1.0
				}
			}

			random = {
				chance = 25

				character_event = {
					id = 45002 # Loyalists flock to the regent's banner
					months = 4
				}
			}
		}

		FROM = {
			show_scope_change = no

			letter_event = {
				id = soh.3552
				days = 3
				tooltip = EVTTOOLTIP8100
			}

			hidden_effect = {
				if = {
					limit = {
						ROOT = {
							faction_power = {
								faction = faction_regency_loyalists2
								power < 0.75
							}
						}
					}

					random_list = {
						50 = { }

						30 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}

				else_if = {
					limit = {
						ROOT = {
							faction_power = {
								faction = faction_regency_loyalists2
								power < 1.5
							}
						}
					}

					random_list = {
						75 = { }

						5 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}
			}
		}
		
		ai_chance = {
			factor = 95
			
			mult_modifier = {
				factor = 1.25
				is_strong_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = brave
			}
			
			mult_modifier = {
				factor = 1.25
				trait = proud
			}
			
			mult_modifier = {
				factor = 1.25
				trait = envious
			}
			
			mult_modifier = {
				factor = 1.25
				trait = greedy
			}
			
			mult_modifier = {
				factor = 1.25
				trait = wroth
			}
			
			mult_modifier = {
				factor = 1.25
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists2
					power >= 1.5
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists2
					power >= 2.0
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists2
					power >= 3.0
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists2
					power >= 4.0
				}
			}
		}
	}
}

# Faction members are informed that the regent folded
letter_event = {
	id = soh.3550
	desc = EVTDESC_SOH_3550
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3550 # Really? We had your back!
	}
}

# The liege is informed that the regent folded
letter_event = {
	id = soh.3551
	desc = EVTDESC_SOH_3551
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3551 # Assuming direct control!
		
		remove_trait = under_regency2
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# The liege is informed that the regent isn't folding
letter_event = {
	id = soh.3552
	desc = EVTDESC_SOH_3552
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			any_faction_backer = {
				faction = faction_regency_loyalists2
				reverse_opinion = {
					modifier = opinion_fought_for_regent
					who = FROM
					years = 20
				}
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3552 # Then face me in battle!
		
		remove_trait = under_regency2
		
		FROM = {
			war = {
				target = ROOT
				casus_belli = end_regency_war_faction2
				faction = faction_regency_loyalists2
			}
		}
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# Regent gets ultimatum
letter_event = {
	id = soh.3553
	desc = EVTDESC_SOH_3553
	
	is_triggered_only = yes # overthrow_my_regent_decision3 decision
	
	immediate = {
		diplomatic_immunity = yes 
		
		any_faction_backer = {
			faction = faction_regency_loyalists3
			
			diplomatic_immunity = yes
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3553 # I suppose I have to accept this...
		
		# GRACETODO
		
		remove_trait = japanese_regent3
		
		clr_character_flag = ai_flag_never_transfer # No putting the PR under someone else!
		
		hidden_tooltip = {
			any_faction_backer = {
				faction = faction_regency_loyalists3
				
				letter_event = { id = soh.3554 }
				
				diplomatic_immunity = no
			}
			
			letter_event = { id = soh.3555 }
			
			diplomatic_immunity = no
		}
		
		ai_chance = {
			factor = 5
			
			trigger = {
				faction_power = {
					faction = faction_regency_loyalists3
					power < 5.0
				}
			}
			
			mult_modifier = {
				factor = 0.5
				faction_power = {
					faction = faction_regency_loyalists3
					power >= 1.0
				}
			}
			
			mult_modifier = {
				factor = 1.25
				is_weak_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = craven
			}
			
			mult_modifier = {
				factor = 1.25
				trait = humble
			}
			
			mult_modifier = {
				factor = 1.25
				trait = kind
			}
			
			mult_modifier = {
				factor = 1.25
				trait = charitable
			}
			
			mult_modifier = {
				factor = 1.25
				trait = patient
			}
			
			mult_modifier = {
				factor = 1.25
				trait = content
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_3553 # Never!
		
		# GRACETODO

		if = {
			limit = {
				faction_power = {
					faction = faction_regency_loyalists3
					power >= 1.0
				}
			}

			random = {
				chance = 25

				character_event = {
					id = 45002 # Loyalists flock to the regent's banner
					months = 4
				}
			}
		}

		FROM = {
			show_scope_change = no

			letter_event = {
				id = soh.3556
				days = 3
				tooltip = EVTTOOLTIP8100
			}

			hidden_effect = {
				if = {
					limit = {
						ROOT = {
							faction_power = {
								faction = faction_regency_loyalists3
								power < 0.75
							}
						}
					}

					random_list = {
						50 = { }

						30 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}

				else_if = {
					limit = {
						ROOT = {
							faction_power = {
								faction = faction_regency_loyalists3
								power < 1.5
							}
						}
					}

					random_list = {
						75 = { }

						5 = {
							character_event = {
								id = 45000 # A great number of rebels flock to the liege's banner
								days = 17
							}
						}

						20 = {
							character_event = {
								id = 45004 # Rebels flock to the liege's banner
								days = 17
							}
						}
					}
				}
			}
		}
		
		ai_chance = {
			factor = 95
			
			mult_modifier = {
				factor = 1.25
				is_strong_trigger = yes
			}
			
			mult_modifier = {
				factor = 1.25
				trait = brave
			}
			
			mult_modifier = {
				factor = 1.25
				trait = proud
			}
			
			mult_modifier = {
				factor = 1.25
				trait = envious
			}
			
			mult_modifier = {
				factor = 1.25
				trait = greedy
			}
			
			mult_modifier = {
				factor = 1.25
				trait = wroth
			}
			
			mult_modifier = {
				factor = 1.25
				trait = ambitious
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists3
					power >= 1.5
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists3
					power >= 2.0
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists3
					power >= 3.0
				}
			}
			
			mult_modifier = {
				factor = 2
				faction_power = {
					faction = faction_regency_loyalists3
					power >= 4.0
				}
			}
		}
	}
}

# Faction members are informed that the regent folded
letter_event = {
	id = soh.3554
	desc = EVTDESC_SOH_3554
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3554 # Really? We had your back!
	}
}

# The liege is informed that the regent folded
letter_event = {
	id = soh.3555
	desc = EVTDESC_SOH_3555
	
	show_from_from = yes
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_3555 # Assuming direct control!
		
		remove_trait = under_regency3
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}

# The liege is informed that the regent isn't folding
letter_event = {
	id = soh.3556
	desc = EVTDESC_SOH_3556
	
	is_triggered_only = yes
	
	immediate = {
		FROM = {
			any_faction_backer = {
				faction = faction_regency_loyalists3
				reverse_opinion = {
					modifier = opinion_fought_for_regent
					who = FROM
					years = 20
				}
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_3556 # Then face me in battle!
		
		remove_trait = under_regency3
		
		FROM = {
			war = {
				target = ROOT
				casus_belli = end_regency_war_faction3
				faction = faction_regency_loyalists3
			}
		}
		
		clr_character_flag = overthrow_my_regent_decision_taken
	}
}