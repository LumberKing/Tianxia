# Chuseok events
# By Silverswee(e)per
# Partially based on earlier work by Okawoa

namespace = soh

# soh.601-800 reserved

##### Preparation

# Preparations begin
character_event = {
	id = soh.601
	desc = EVTDESC_SOH_601
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		# Flag cleanup
		clr_character_flag = chuseok_enough_drinks
		clr_character_flag = chuseok_enough_hangwa
		clr_character_flag = chuseok_enough_songpyeon
		clr_character_flag = chuseok_extra_drinks
		clr_character_flag = chuseok_extra_hangwa
		clr_character_flag = chuseok_extra_songpyeon
		clr_character_flag = chuseok_no_drinks
		clr_character_flag = chuseok_no_hangwa
		clr_character_flag = chuseok_no_songpyeon
		clr_character_flag = chuseok_not_rigged_juldarigiri
		clr_character_flag = chuseok_rigged_juldarigiri
		clr_character_flag = chuseok_ssireum_deception
		clr_character_flag = chuseok_ssireum_endurance
		clr_character_flag = chuseok_ssireum_seduction
		clr_character_flag = chuseok_ssireum_strength
		clr_character_flag = coming_to_chuseok
		clr_character_flag = do_not_disturb
		clr_character_flag = guest_chuseok_started
		clr_character_flag = host_chuseok_started
		clr_character_flag = lavishly_food
		clr_character_flag = low_food
		clr_character_flag = medium_food
		clr_character_flag = recent_chuseok
		clr_character_flag = sent_invitations
	}
	
	option = {
		name = EVTOPTA_SOH_601 # Let's get to it!
		
		hidden_tooltip = {
			random_list = {
				50 = {
					character_event = { id = soh.602 days = 2 } # Tend to tombs?
				}
				50 = {
					character_event = { id = soh.603 days = 2 } # Leave offerings to ancestors?
				}
			}
			character_event = { id = soh.604 days = 4 } # Prepare Songpyeon?
			random_list = {
				50 = {
					character_event = { id = soh.605 days = 6 } # Prepare Hangwa?
				}
				50 = {
					character_event = { id = soh.606 days = 6 } # Prepare drinks?
				}
			}
			character_event = { id = soh.607 days = 8 } # General food preparations
			character_event = { id = soh.608 days = 10 } # Invitations
		}
	}
}

# Help locals tend to tombs?
character_event = {
	id = soh.602
	desc = EVTDESC_SOH_602
	picture = GFX_evt_tribal_shrine
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	option = {
		name = EVTOPTA_SOH_602 # I will make every effort to help!
		
		piety = 10
		if = {
			limit = {
				trait = slothful
			}
			remove_trait = slothful
		}
		else_if = {
			limit = {
				NOT = {
					trait = diligent
				}
			}
			random = {
				chance = 15
				add_trait_diligent_effect = yes
			}
		}
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else_if = {
			limit = {
				NOT = {
					trait = zealous
				}
			}
			random = {
				chance = 15
				add_trait_zealous_effect = yes
			}
		}
		random = {
			chance = 10
			add_trait_stressed_effect = yes
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOR = {
					trait = diligent
					trait = gardener
				}
			}
			modifier = {
				factor = 0.1
				trait = cynical
				OR = {
					trait = diligent
					trait = gardener
				}
			}
			modifier = {
				factor = 0.1
				trait = slothful
				OR = {
					trait = zealous
					trait = gardener
				}
			}
			modifier = {
				factor = 0
				trait = slothful
				NOR = {
					trait = zealous
					trait = gardener
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_602 # I will do what's required...
		
		piety = 5
		
		if = {
			limit = {
				trait = slothful
			}
			remove_trait = slothful
		}
		else_if = {
			limit = {
				NOT = {
					trait = diligent
				}
			}
			random = {
				chance = 15
				add_trait_diligent_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOR = {
					trait = diligent
					trait = gardener
				}
			}
			modifier = {
				factor = 0.1
				trait = cynical
				OR = {
					trait = diligent
					trait = gardener
				}
			}
			modifier = {
				factor = 0.1
				trait = slothful
				OR = {
					trait = zealous
					trait = gardener
				}
			}
			modifier = {
				factor = 0
				trait = slothful
				NOR = {
					trait = zealous
					trait = gardener
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_602 # I can send some servants...
		
		piety = -5
		wealth = -5
		
		if = {
			limit = {
				trait = diligent
			}
			remove_trait = diligent
		}
		else_if = {
			limit = {
				NOT = {
					trait = slothful
				}
			}
			random = {
				chance = 15
				add_trait_slothful_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = zealous
				NOT = {
					trait = slothful
				}
			}
			modifier = {
				factor = 0
				trait = diligent
				NOT = {
					trait = cynical
				}
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_602 # Why bother?
		
		piety = -10
		
		if = {
			limit = {
				trait = zealous
			}
			remove_trait = zealous
		}
		else_if = {
			limit = {
				NOT = {
					trait = cynical
				}
			}
			random = {
				chance = 15
				add_trait_cynical_effect = yes
			}
		}
		if = {
			limit = {
				trait = diligent
			}
			remove_trait = diligent
		}
		else_if = {
			limit = {
				NOT = {
					trait = slothful
				}
			}
			random = {
				chance = 15
				add_trait_slothful_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = diligent
				NOT = {
					trait = cynical
				}
			}
		}
	}
}

# Leave offerings to ancestors?
character_event = {
	id = soh.603
	desc = EVTDESC_SOH_603
	picture = GFX_evt_tribal_shrine
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	option = {
		name = EVTOPTA_SOH_603 # Grand offerings shall be made!
		
		piety = 15
		wealth = -10
		
		if = {
			limit = {
				trait = greedy
			}
			remove_trait = greedy
		}
		else_if = {
			limit = {
				NOT = {
					trait = charitable
				}
			}
			random = {
				chance = 15
				add_trait_charitable_effect = yes
			}
		}
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else_if = {
			limit = {
				NOT = {
					trait = zealous
				}
			}
			random = {
				chance = 15
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOT = {
					trait = charitable
				}
			}
			modifier = {
				factor = 0.1
				trait = cynical
				trait = charitable
			}
			modifier = {
				factor = 0.1
				trait = greedy
				trait = zealous
			}
			modifier = {
				factor = 0
				trait = greedy
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_603 # A small offering would be worthwhile...
		
		piety = 5
		wealth = -5
		
		if = {
			limit = {
				trait = greedy
			}
			remove_trait = greedy
		}
		else_if = {
			limit = {
				NOT = {
					trait = charitable
				}
			}
			random = {
				chance = 15
				add_trait_charitable_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOT = {
					trait = charitable
				}
			}
			modifier = {
				factor = 0.1
				trait = cynical
				trait = charitable
			}
			modifier = {
				factor = 0.1
				trait = greedy
				trait = zealous
			}
			modifier = {
				factor = 0
				trait = greedy
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_603 # Why bother?
		
		piety = -10
		
		if = {
			limit = {
				trait = zealous
			}
			remove_trait = zealous
		}
		else_if = {
			limit = {
				NOT = {
					trait = cynical
				}
			}
			random = {
				chance = 15
				add_trait_cynical_effect = yes
			}
		}
		if = {
			limit = {
				trait = charitable
			}
			remove_trait = charitable
		}
		else_if = {
			limit = {
				NOT = {
					trait = greedy
				}
			}
			random = {
				chance = 15
				add_trait_greedy_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = charitable
				NOT = {
					trait = cynical
				}
			}
		}
	}
}

# Prepare Songpyeon for everyone?
character_event = {
	id = soh.604
	desc = EVTDESC_SOH_604
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	option = {
		name = EVTOPTA_SOH_604 # I will prepare quite a few extra!
		
		set_character_flag = chuseok_extra_songpyeon
		
		prestige = 15
		wealth = -10
		
		if = {
			limit = {
				trait = temperate
			}
			remove_trait = temperate
		}
		else_if = {
			limit = {
				NOT = {
					trait = gluttonous
				}
			}
			random = {
				chance = 15
				add_trait_gluttonous_effect = yes
			}
		}
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else_if = {
			limit = {
				NOT = {
					trait = zealous
				}
			}
			random = {
				chance = 15
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOT = {
					trait = gluttonous
				}
			}
			modifier = {
				factor = 0.1
				trait = cynical
				trait = gluttonous
			}
			modifier = {
				factor = 0.1
				trait = temperate
				trait = zealous
			}
			modifier = {
				factor = 0
				trait = temperate
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_604 # Prepare enough for everyone!
		
		set_character_flag = chuseok_enough_songpyeon
		
		prestige = 5
		wealth = -5
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOT = {
					trait = gluttonous
				}
			}
			modifier = {
				factor = 0.1
				trait = gluttonous
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = temperate
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_604 # Why bother?
		
		set_character_flag = chuseok_no_songpyeon
		
		prestige = -10
		
		if = {
			limit = {
				trait = gluttonous
			}
			remove_trait = gluttonous
		}
		else_if = {
			limit = {
				NOT = {
					trait = temperate
				}
			}
			random = {
				chance = 15
				add_trait_temperate_effect = yes
			}
		}
		if = {
			limit = {
				trait = zealous
			}
			remove_trait = zealous
		}
		else_if = {
			limit = {
				NOT = {
					trait = cynical
				}
			}
			random = {
				chance = 15
				add_trait_cynical_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = gluttonous
				NOT = {
					trait = cynical
				}
			}
		}
	}
}

# Prepare Hangwa for everyone?
character_event = {
	id = soh.605
	desc = EVTDESC_SOH_605
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	option = {
		name = EVTOPTA_SOH_605 # I will prepare quite a few extra!
		
		set_character_flag = chuseok_extra_hangwa
		
		prestige = 15
		wealth = -10
		
		if = {
			limit = {
				trait = temperate
			}
			remove_trait = temperate
		}
		else_if = {
			limit = {
				NOT = {
					trait = gluttonous
				}
			}
			random = {
				chance = 15
				add_trait_gluttonous_effect = yes
			}
		}
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else_if = {
			limit = {
				NOT = {
					trait = zealous
				}
			}
			random = {
				chance = 15
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOT = {
					trait = gluttonous
				}
			}
			modifier = {
				factor = 0.1
				trait = cynical
				trait = gluttonous
			}
			modifier = {
				factor = 0.1
				trait = temperate
				trait = zealous
			}
			modifier = {
				factor = 0
				trait = temperate
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_605 # Prepare enough for everyone!
		
		set_character_flag = chuseok_enough_hangwa
		
		prestige = 5
		wealth = -5
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOT = {
					trait = gluttonous
				}
			}
			modifier = {
				factor = 0.1
				trait = gluttonous
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = temperate
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_605 # Why bother?
		
		set_character_flag = chuseok_no_hangwa
		
		prestige = -10
		
		if = {
			limit = {
				trait = gluttonous
			}
			remove_trait = gluttonous
		}
		else_if = {
			limit = {
				NOT = {
					trait = temperate
				}
			}
			random = {
				chance = 15
				add_trait_temperate_effect = yes
			}
		}
		if = {
			limit = {
				trait = zealous
			}
			remove_trait = zealous
		}
		else_if = {
			limit = {
				NOT = {
					trait = cynical
				}
			}
			random = {
				chance = 15
				add_trait_cynical_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = gluttonous
				NOT = {
					trait = cynical
				}
			}
		}
	}
}

# Prepare drinks for everyone?
character_event = {
	id = soh.606
	desc = EVTDESC_SOH_606
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	option = {
		name = EVTOPTA_SOH_606 # I will prepare quite a few extra!
		
		set_character_flag = chuseok_extra_drinks
		
		prestige = 15
		wealth = -10
		
		if = {
			limit = {
				trait = temperate
			}
			remove_trait = temperate
		}
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else_if = {
			limit = {
				NOT = {
					trait = zealous
				}
			}
			random = {
				chance = 15
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOR = {
					trait = drunkard
					trait = hedonist
				}
			}
			modifier = {
				factor = 0.1
				trait = cynical
				OR = {
					trait = drunkard
					trait = hedonist
				}
			}
			modifier = {
				factor = 0.1
				trait = temperate
				trait = zealous
			}
			modifier = {
				factor = 0
				trait = temperate
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_606 # Prepare enough for everyone!
		
		set_character_flag = chuseok_enough_drinks
		
		prestige = 5
		wealth = -5
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = cynical
				NOR = {
					trait = drunkard
					trait = hedonist
				}
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = drunkard
					trait = hedonist
				}
				trait = zealous
			}
			modifier = {
				factor = 0.1
				trait = temperate
				NOT = {
					trait = zealous
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_606 # Why bother?
		
		set_character_flag = chuseok_no_drinks
		
		prestige = -10
		
		if = {
			limit = {
				NOT = {
					trait = temperate
				}
			}
			random = {
				chance = 15
				add_trait_temperate_effect = yes
			}
		}
		if = {
			limit = {
				trait = zealous
			}
			remove_trait = zealous
		}
		else_if = {
			limit = {
				NOT = {
					trait = cynical
				}
			}
			random = {
				chance = 15
				add_trait_cynical_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = zealous
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = drunkard
					trait = hedonist
				}
				NOT = {
					trait = cynical
				}
			}
		}
	}
}

# Food preparations - copied from vanilla
character_event = {
	id = soh.607
	desc = EVTDESC_SOH_607
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy

	only_rulers = yes
	capable_only = yes
	prisoner = no
	war = no

	is_triggered_only = yes

	trigger = {
		has_character_modifier = chuseok_in_progress
		NOT = {
			has_character_flag = lavishly_food
		}
		NOT = {
			has_character_flag = medium_food
		}
		NOT = {
			has_character_flag = low_food
		}
	}

	option = {
		name = "EVTOPTA72003" #Spend lavishly on food
		gain_weight_small_effect = yes
		weight_trait_check_effect = yes
		trigger = { NOT = { trait = temperate } }
		ai_chance = {

			factor = 30

			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 3
				trait = gluttonous
			}
			modifier = {
				factor = 0.1
				trait = temperate
			}
			modifier = {
				factor = 2
				primary_title = { higher_tier_than = DUKE }
			}
		}
		set_character_flag = lavishly_food
		treasury = -20
		prestige = 10
	}
	option = {
		name = "EVTOPTB72003" #Spend medium on food
		ai_chance = {
			factor = 30

			modifier = {
				factor = 0.5
				NOT = { trait = greedy }
			}
			modifier = {
				factor = 2
				NOT = { trait = gluttonous }
			}
			modifier = {
				factor = 2
				primary_title = { tier = DUKE }
			}
		}
		set_character_flag = medium_food
		treasury = -10
	}
	option = {
		name = "EVTOPTC72003" #Spend low on food
		trigger = { NOT = { trait = gluttonous } }
		ai_chance = {
			factor = 30

			modifier = {
				factor = 2.5
				trait = greedy
			}
			modifier = {
				factor = 0.1
				trait = gluttonous
			}
			modifier = {
				factor = 2
				primary_title = { tier = COUNT }
			}
		}
		set_character_flag = low_food
		treasury = -5
		prestige = -5
	}
}

# Time to send out invitations
character_event = {
	id = soh.608
	desc = EVTDESC_SOH_608
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	only_rulers = yes
	capable_only = yes
	prisoner = no
	war = no

	trigger = {
		has_character_modifier = chuseok_in_progress
		OR = {
			has_character_flag = lavishly_food
			has_character_flag = medium_food
			has_character_flag = low_food
		}
		NOT = {
			has_character_flag = sent_invitations
		}
	}
	
	option = {
		name = "EVTOPTA72010"
		set_character_flag = sent_invitations
		custom_tooltip = {
			text = EVTTOOLTIP1_RoI_1000
		}
		hidden_tooltip = {
			character_event = { id = soh.611 days = 10 } # Start of Chuseok
			any_vassal = {
				limit = {
					NOT = { is_inaccessible_trigger = yes }
					prisoner = no
					NOT = { has_character_flag = do_not_disturb }
					NOT = { trait = incapable }
					NOT = { has_character_modifier = chuseok_in_progress }
					war = no
					is_adult = yes
					NOT = {
						trait = treasure_fleet_preparation
					}
				}
				letter_event = {
					id = soh.609
					days = 2
					#tooltip = "EVTTOOLTIP72011"
				}
			}
		}
	}
}

# Vassal gets invitation
letter_event = {
	id = soh.609
	desc = EVTDESC_SOH_609

	is_triggered_only = yes

	trigger = { NOT = { is_inaccessible_trigger = yes } }

	option = {
		name = EVTOPTA_SOH_609 # Travel to the Chuseok
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				opinion = { who = from value = -40 }
			}
			modifier  = {
				factor = 2
				opinion = { who = from value = -20 }
			}
		}
		set_character_flag = coming_to_chuseok
		set_character_flag = do_not_disturb
	}
	option = {
		name = EVTOPTB_SOH_609 # Refuse
		ai_chance = {
			factor = 1
			modifier  = {
				factor = 2
				NOT = { opinion = { who = from value = -60 } }
			}
			modifier  = {
				factor = 2
				NOT = { opinion = { who = from value = -80 } }
			}
		}
		FROM = {
			letter_event = {
				id = soh.610
				days = 1
				random = 2
				tooltip = "EVTTOOLTIP72012"
			}
		}
	}
}

# Vassal refused invitation
letter_event = {
	id = soh.610
	desc = EVTDESC_SOH_610

	is_triggered_only = yes

	option = {
		name = "EVTOPTA72012"
		opinion = {
			modifier = opinion_dislike
			who = FROM
			years = 10
		}
	}
}

#### Start of Chuseok

# Start of Chuseok - host
character_event = {
	id = soh.611
	desc = EVTDESC_SOH_611
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_611 # Welcome!
		
		set_character_flag = host_chuseok_started
		
		hidden_tooltip = {
			# Welcome the guests
			any_vassal = {
				limit = {
					has_character_flag = coming_to_chuseok
				}
				set_character_flag = guest_chuseok_started
			}
			any_vassal = {
				limit = {
					ai = no # No need to spam the AI
					has_character_flag =  coming_to_chuseok
				}
				character_event = { id = soh.612 }
			}
			
			# Event selection
			character_event = { id = soh.613 days = 2 }
		}
	}
}

# Start of Chuseok - guests
character_event = {
	id = soh.612
	desc = EVTDESC_SOH_612
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_612 # This should be fun!
	}
}

##### Event selection + event groups 1

# Event selection 1
character_event = {
	id = soh.613
	hide_window = yes

	is_triggered_only = yes

	only_rulers = yes
	capable_only = yes
	prisoner = no
	war = no

	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	immediate = {
		# Food complaints - based on vanilla
		random_list = {
			10 = { #Lavish food (vassal)
				modifier = {
					factor = 0
					NOR = {
						has_character_flag = lavishly_food
						any_vassal = {
							has_character_flag = coming_to_chuseok
							war = no
						}
					}
				}
				any_vassal = {
					limit = { 
						has_character_flag = coming_to_chuseok
						war = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					character_event = { id = soh.614 days = 1 } # High food
				}
			}
			10 = { #Medium food (vassal)
				modifier = {
					factor = 0
					NOR = {
						has_character_flag = medium_food
						any_vassal = {
							has_character_flag = coming_to_chuseok
							war = no
						}
					}
				}
				any_vassal = {
					limit = { 
						has_character_flag = coming_to_chuseok
						war = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					character_event = { id = soh.615 days = 1 } # Medium food
				}
			}
			10 = { #Low food (vassal)
				modifier = {
					factor = 0
					NOR = {
						has_character_flag = low_food
						any_vassal = {
							has_character_flag = coming_to_chuseok
							war = no
						}
					}
				}
				any_vassal = {
					limit = { 
						has_character_flag = coming_to_chuseok
						war = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					character_event = { id = soh.616 days = 1 } # Low food
				}
			}
		}
		# Juldarigiri
		character_event = { id = soh.619 days = 2 random = 1 } # Host start
		
		# Random events
		random_list = {
			25 = {
				modifier = {
					factor = 0
					NOT = {
						any_vassal = {
							count = 2
							has_character_flag = coming_to_chuseok
							war = no
						}
					}
				}
				any_vassal = {
					limit = { 
						has_character_flag = coming_to_chuseok
						war = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_friend
					ROOT = {
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
								NOR = {
									character = event_target:chuseok_friend
									any_friend = {
										character = event_target:chuseok_friend
									}
								}
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.635 days = 10 random = 2 } # Possible friendship
						}
					}
				}
			}
			25 = {
				modifier = {
					factor = 0
					NOT = {
						any_vassal = {
							count = 2
							has_character_flag = coming_to_chuseok
							war = no
						}
					}
				}
				any_vassal = {
					limit = { 
						has_character_flag = coming_to_chuseok
						war = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_rival
					ROOT = {
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
								NOR = {
									character = event_target:chuseok_rival
									any_rival = {
										character = event_target:chuseok_rival
									}
								}
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.639 days = 10 random = 2 } # Possible rivalry
						}
					}
				}
			}
			25 = {
				random_list = {
					50 = {
						character_event = { id = soh.641 days = 10 random = 2 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = {
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
								is_adult = yes
							}
							random = {
								chance = 25
								character_event = { id = soh.641 days = 10 random = 2 } # Harvest discussion
							}
						}
					}
				}
			}
			25 = {
				random_list = {
					50 = {
						modifier = {
							factor = 0
							OR = {
								NOT = {
									culture_group = koreanic
								}
								religion = korean_pagan
								religion = korean_pagan_reformed
								trait = zealous
								can_have_chinese_imperial_trigger = no
								controls_religion = yes
							}
						}
						if = {
							limit = {
								has_global_flag = korean_reformation
							}
							character_event = { id = soh.649 days = 10 random = 2 } # Convert to reformed Muist?
						}
						else = {
							character_event = { id = soh.650 days = 10 random = 2 } # Convert to Muist?
						}
					}
					50 = {
						modifier = {
							factor = 0
							NOT = {
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
									culture_group = koreanic
									NOR = {
										religion = korean_pagan
										religion = korean_pagan_reformed
										trait = zealous
									}
									can_have_chinese_imperial_trigger = yes
									controls_religion = yes
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
								culture_group = koreanic
								NOR = {
									religion = korean_pagan
									religion = korean_pagan_reformed
									trait = zealous
								}
								can_have_chinese_imperial_trigger = yes
								controls_religion = yes
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							if = {
								limit = {
									has_global_flag = korean_reformation
								}
								character_event = { id = soh.649 days = 10 random = 2 } # Convert to reformed Muist?
							}
							else = {
								character_event = { id = soh.650 days = 10 random = 2 } # Convert to Muist?
							}
						}
					}
				}
			}
			25 = {
				random_list = {
					50 = {
						modifier = {
							factor = 0
							OR = {
								NOT = {
									can_have_chinese_imperial_trigger = yes
								}
								religion = buddhist
								trait = zealous
								controls_religion = yes
							}
						}
						character_event = { id = soh.651 days = 10 random = 2 } # Convert to Buddhist?
					}
					50 = {
						modifier = {
							factor = 0
							NOT = {
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
									can_have_chinese_imperial_trigger = yes
									NOR = {
										religion = buddhist
										trait = zealous
										controls_religion = yes
									}
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
								can_have_chinese_imperial_trigger = yes
								NOR = {
									religion = buddhist
									trait = zealous
									controls_religion = yes
								}
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.651 days = 10 random = 2 } # Convert to Buddhist?
						}
					}
				}
			}
			5 = { # Rarer
				random_list = {
					50 = {
						modifier = {
							factor = 0
							OR = {
								NOR = {
									can_have_chinese_imperial_trigger = yes
									AND = {
										culture_group = japonic
										OR = {
											religion = shinto
											religion = shugendo
											religion = koshin
										}
										controls_religion = no # If relevant
									}
								}
								religion = confucian
								trait = zealous
								controls_religion = yes
							}
						}
						character_event = { id = soh.652 days = 10 random = 2 } # Convert to Confucian?
					}
					50 = {
						modifier = {
							factor = 0
							NOT = {
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
									can_have_chinese_imperial_trigger = yes
									NOR = {
										religion = confucian
										trait = zealous
										controls_religion = yes
									}
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
								can_have_chinese_imperial_trigger = yes
								NOR = {
									religion = confucian
									trait = zealous
									controls_religion = yes
								}
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.652 days = 10 random = 2 } # Convert to Confucian?
						}
					}
				}
			}
			1 = { # Very rare!
				random_list = {
					50 = {
						modifier = {
							factor = 0
							OR = {
								can_have_chinese_imperial_trigger = yes
								religion = taoist
								trait = zealous
								controls_religion = yes
							}
						}
						character_event = { id = soh.653 days = 10 random = 2 } # Convert to Taoist?
					}
					50 = {
						modifier = {
							factor = 0
							NOT = {
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
									can_have_chinese_imperial_trigger = yes
									NOR = {
										religion = taoist
										trait = zealous
										controls_religion = yes
									}
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
								can_have_chinese_imperial_trigger = yes
								NOR = {
									religion = taoist
									trait = zealous
									controls_religion = yes
								}
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.653 days = 10 random = 2 } # Convert to Taoist?
						}
					}
				}
			}
			50 = {} # Nothing
		}
		
		# On to the next event group
		character_event = { id = soh.654 days = 15 }
	}
}

### Food complaints - based on vanilla

# Lavish Food
character_event = {
	id = soh.614
	desc = EVTDESC_SOH_614
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		FROM = {
			has_character_modifier = chuseok_in_progress
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_614 # Approve publicly
		trigger = {
			NOT = { trait = temperate }
		}
		gain_weight_small_effect = yes
		weight_trait_check_effect = yes
		ai_chance = {
			factor = 40

			modifier = {
				factor = 5
				trait = gluttonous
			}
		}
		FROM = {
			character_event = { id = soh.617 }
		}
	}
	option = {
		name = EVTOPTB_SOH_614 # Disapprove
		trigger = {
			NOT = { trait = gluttonous }
		}
		ai_chance = {
			factor = 20

			modifier = {
				factor = 5
				trait = temperate
			}
		}
		FROM = {
			character_event = { id = soh.618 }
		}
	}
	option = {
		name = EVTOPTC_SOH_614 # Say nothing
		prestige = -10
	}
}

# Medium Food
character_event = {
	id = soh.615
	desc = EVTDESC_SOH_615
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		FROM = {
			has_character_modifier = chuseok_in_progress
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_615 # Approve publicly
		FROM = {
			character_event = { id = soh.617 }
		}
	}
	option = {
		name = EVTOPTB_SOH_615 # Disapprove publicly
		FROM = {
			character_event = { id = soh.618 }
		}
	}
	option = {
		name = EVTOPTC_SOH_615 # Say nothing
		prestige = -10
	}
}

# Low Food
character_event = {
	id = soh.616
	desc = EVTDESC_SOH_616
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		FROM = {
			has_character_modifier = chuseok_in_progress
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_616 # Approve publicly
		trigger = {
			NOT = { trait = gluttonous }
		}
		ai_chance = {
			factor = 20

			modifier = {
				factor = 5
				trait = temperate
			}
		}
		FROM = {
			character_event = { id = soh.617 }
		}
	}
	option = {
		name = EVTOPTB_SOH_616 # Disapprove publicly
		trigger = {
			NOT = { trait = temperate }
		}
		ai_chance = {
			factor = 40

			modifier = {
				factor = 5
				trait = gluttonous
			}
		}
		FROM = {
			character_event = { id = soh.618 }
		}
	}
	option = {
		name = EVTOPTC_SOH_616 # Say nothing
		prestige = -10
	}
}

# Liege is glad you liked the food at the feast
character_event = {
	id = soh.617
	desc = EVTDESC_SOH_617
	picture = GFX_evt_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_617 # Good!
		opinion = {
			modifier = opinion_happy
			who = FROM
			years = 10
		}
		reverse_opinion = {
			modifier = opinion_approves
			who = FROM
			years = 10
		}
	}
}

# Liege dislikes you complaining about the food at the feast
character_event = {
	id = soh.618
	desc = EVTDESC_SOH_618
	picture = GFX_evt_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_618 # Shut up!
		opinion = {
			modifier = opinion_irritated
			who = FROM
			years = 10
		}
		reverse_opinion = {
			modifier = opinion_disapprove
			who = FROM
			years = 10
		}
	}
}

### Juldarigiri

# Rig the contest or not?
character_event = {
	id = soh.619
	desc = EVTDESC_SOH_619
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	immediate = {
		any_vassal = {
			limit = { 
				has_character_flag = coming_to_chuseok
				war = no
			}
			score_value = { #Prioritizes selecting an interesting courtier...
				value = 10
				interesting_courtier_selection_score = yes
			}
			character_event = { id = soh.620 days = 1 } # Juldarigiri complainer
		}
		any_vassal = {
			limit = { 
				has_character_flag = coming_to_chuseok
				war = no
				is_adult = yes
			}
			score_value = { #Prioritizes selecting an interesting courtier...
				value = 10
				interesting_courtier_selection_score = yes
			}
			character_event = { id = soh.622 days = 3 } # Juldarigiri innuendo
		}
		character_event = { id = soh.624 days = 5 } # Determine outcome
	}
	
	option = {
		name = EVTOPTA_SOH_619 # Rigging the contest is normal!
		
		prestige = 10
		
		set_character_flag = chuseok_rigged_juldarigiri
		
		if = {
			limit = {
				trait = honest
			}
			random = {
				chance = 5
				remove_trait_honest_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = honest
			}
			modifier = {
				factor = 0.1
				trait = just
			}
			modifier = {
				factor = 0.1
				trait = zealous
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_619 # Rigging the contest is wrong!
		
		piety = 10
		
		set_character_flag = chuseok_not_rigged_juldarigiri
		
		if = {
			limit = {
				trait = deceitful
			}
			random = {
				chance = 5
				remove_trait_deceitful_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = deceitful
			}
			modifier = {
				factor = 0.1
				trait = arbitrary
			}
			modifier = {
				factor = 0.1
				trait = cynical
			}
		}
	}
}

# Complain about side?
character_event = {
	id = soh.620
	desc = EVTDESC_SOH_620
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_620 # This is fine!
		
		prestige = -10
		
		if = {
			limit = {
				trait = proud
			}
			random = {
				chance = 5
				remove_trait_proud_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = proud
			}
			modifier = {
				factor = 0.1
				trait = stubborn
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_620 # I want to be on the other side!
		
		piety = -10
		
		FROM = {
			character_event = { id = soh.621 days = 1 } # Complaint registered
		}
		
		if = {
			limit = {
				trait = humble
			}
			random = {
				chance = 5
				remove_trait_humble_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = humble
			}
			modifier = {
				factor = 0.1
				trait = shy
			}
		}
	}
}

# Complaints
character_event = {
	id = soh.621
	desc = EVTDESC_SOH_621
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_621 # Oh shut up!
	}
}

# Innuendo
character_event = {
	id = soh.622
	desc = EVTDESC_SOH_622
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_622 # I won't sink that low!
		
		prestige = -10
		
		if = {
			limit = {
				trait = lustful
			}
			random = {
				chance = 5
				remove_trait_lustful_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = lustful
			}
			modifier = {
				factor = 0.1
				trait = seducer
			}
			modifier = {
				factor = 0.1
				trait = seductress
			}
			modifier = {
				factor = 0.1
				trait = hedonist
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_622 # I'll join in!
		
		piety = -10
		
		if = {
			limit = {
				FROM = {
					any_vassal = { 
						has_character_flag = coming_to_chuseok
						war = no
						is_adult = yes
						NOT = {
							character = ROOT
						}
					}
				}
			}
			FROM = {
				any_vassal = {
					limit = { 
						has_character_flag = coming_to_chuseok
						war = no
						is_adult = yes
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					character_event = { id = soh.623 days = 1 } # React to innuendo
				}
			}
		}
		else_if = {
			limit = {
				FROM = {
					is_adult = yes
				}
			}
			FROM = {
				character_event = { id = soh.623 days = 1 } # React to innuendo
			}
		}
		
		if = {
			limit = {
				trait = chaste
			}
			random = {
				chance = 5
				remove_trait_chaste_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = chaste
			}
			modifier = {
				factor = 0.1
				trait = shy
			}
			modifier = {
				factor = 0
				trait = celibate
			}
		}
	}
}

# Reaction to innuendo
character_event = {
	id = soh.623
	desc = EVTDESC_SOH_623
	picture = GFX_evt_scandal
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_623 # How crude!
		
		if = {
			limit = {
				trait = lustful
			}
			random = {
				chance = 5
				remove_trait_lustful_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = lustful
			}
			modifier = {
				factor = 0.1
				trait = seducer
			}
			modifier = {
				factor = 0.1
				trait = seductress
			}
			modifier = {
				factor = 0.1
				trait = hedonist
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_623 # I like the way [From.GetSheHe] thinks!
		
		if = {
			limit = {
				is_adult = yes
				is_inaccessible_or_incapable_trigger = no
				OR = {
					AND = {
						is_female = no
						NOT = {
							trait = homosexual
						}
						ROOT = {
							is_female = yes
							NOT = {
								trait = homosexual
							}
						}
					}
					AND = {
						is_female = yes
						NOT = {
							trait = homosexual
						}
						ROOT = {
							is_female = no
							NOT = {
								trait = homosexual
							}
						}
					}
					AND = {
						is_female = yes
						trait = homosexual
						ROOT = {
							is_female = yes
							trait = homosexual
						}
					}
					AND = {
						is_female = no
						trait = homosexual
						ROOT = {
							is_female = no
							trait = homosexual
						}
					}
				}
			}
			character_event = { id = soh.629 days = 2 } # Possible tumbling attempt
		}
		
		if = {
			limit = {
				trait = chaste
			}
			random = {
				chance = 5
				remove_trait_chaste_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = chaste
			}
			modifier = {
				factor = 0.1
				trait = shy
			}
			modifier = {
				factor = 0
				trait = celibate
			}
		}
	}
}

# Select outcome - hidden
character_event = {
	id = soh.624
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_list = {
			50 = {
				modifier = {
					factor = 10
					has_character_flag = chuseok_rigged_juldarigiri
					has_game_rule = {
						name = supernatural_events
						value = off
					}
				}
				modifier = {
					factor = 2
					has_character_flag = chuseok_rigged_juldarigiri
					OR = {
						AND = {
							ai = yes
							has_game_rule = {
								name = supernatural_events
								value = unrestricted
							}
						}
						AND = {
							ai = no
							NOT = {
								has_game_rule = {
									name = supernatural_events
									value = off
								}
							}
						}
					}
				}
				character_event = { id = soh.625 } # Female win
			}
			50 = {
				modifier = {
					factor = 0.1
					has_character_flag = chuseok_not_rigged_juldarigiri
					OR = {
						AND = {
							ai = yes
							has_game_rule = {
								name = supernatural_events
								value = unrestricted
							}
						}
						AND = {
							ai = no
							NOT = {
								has_game_rule = {
									name = supernatural_events
									value = off
								}
							}
						}
					}
				}
				character_event = { id = soh.627 } # Male win
			}
		}
	}
}

# Female win - liege
character_event = {
	id = soh.625
	desc = EVTDESC_SOH_625
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_625 # Great!
		
		prestige = 25
		
		any_vassal = {
			limit = {
				ai = no
				has_character_flag = coming_to_chuseok
			}
			character_event = { id = soh.626 }
		}
		
		hidden_tooltip = {
			if = {
				limit = {
					OR = {
						AND = {
							ai = yes
							has_game_rule = {
								name = supernatural_events
								value = unrestricted
							}
						}
						AND = {
							ai = no
							NOT = {
								has_game_rule = {
									name = supernatural_events
									value = off
								}
							}
						}
					}
				}
				random = {
					chance = 25
					random_demesne_province = {
						change_variable = { which = prosperity_value value = 12 }
					}
				}
			}
		}
	}
}

# Female win - guest
character_event = {
	id = soh.626
	desc = EVTDESC_SOH_626
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_626 # Great!
	}
}

# Male win - liege
character_event = {
	id = soh.627
	desc = EVTDESC_SOH_627
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_627 # That's not good...
		
		prestige = -10
		
		any_vassal = {
			limit = {
				ai = no
				has_character_flag = coming_to_chuseok
			}
			character_event = { id = soh.628 }
		}
		
		hidden_tooltip = {
			if = {
				limit = {
					OR = {
						AND = {
							ai = yes
							has_game_rule = {
								name = supernatural_events
								value = unrestricted
							}
						}
						AND = {
							ai = no
							NOT = {
								has_game_rule = {
									name = supernatural_events
									value = off
								}
							}
						}
					}
				}
				random = {
					chance = 25
					random_demesne_province = {
						change_variable = { which = prosperity_value value = -12 }
					}
				}
			}
		}
	}
}

# Male win - guest
character_event = {
	id = soh.628
	desc = EVTDESC_SOH_628
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_628 # That's not good...
	}
}

# Innuendo follow-up - approach them?
character_event = {
	id = soh.629
	desc = EVTDESC_SOH_629
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_629 # Yes!
		
		FROMFROM = {
			character_event = { id = soh.630 days = 1 } # Other party approached
		}
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				FROMFROM = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				FROMFROM = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_629 # I don't think so!
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Target approached
character_event = {
	id = soh.630
	desc = EVTDESC_SOH_630
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_630 # Yes!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		FROM = {
			character_event = { id = soh.632 } # FROM informed
		}
		unprotected_sex_effect = yes
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				FROM = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				FROM = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_630 # I don't think so!
		
		FROM = {
			character_event = { id = soh.631 } # FROM informed
		}
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Seduction failed
character_event = {
	id = soh.631
	desc = EVTDESC_SOH_631
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_631 # I see...
		
		prestige = -25
	}
}

# Seduction succeeded - lovers?
character_event = {
	id = soh.632
	desc = EVTDESC_SOH_632
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_632 # We should do this again!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		add_lover = FROM
		
		FROM = {
			character_event = { id = soh.633 days = 1 } # Inform FROM
		}
	}
	
	option = {
		name = EVTOPTB_SOH_632 # This shouldn't become a long-term thing...
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		FROM = {
			character_event = { id = soh.634 days = 1 } # Inform FROM
		}
	}
}

# Lovers
character_event = {
	id = soh.633
	desc = EVTDESC_SOH_633
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_633 # That's great!
		
		add_lover = FROM
	}
}

# Not lovers
character_event = {
	id = soh.634
	desc = EVTDESC_SOH_634
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_634 # Perhaps that's for the best...
	}
}

### Friendship

# Possible friendship
character_event = {
	id = soh.635
	desc = EVTDESC_SOH_635
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_635 # Let's be friends!
		
		event_target:chuseok_friend = {
			character_event = { id = soh.636 days = 1 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = {
					opinion = {
						who = event_target:chuseok_friend
						value = 0
					}
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_635 # I don't need another friend!
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				opinion = {
					who = event_target:chuseok_friend
					value = 0
				}
			}
		}
	}
}

# Possible friend gets to respond
character_event = {
	id = soh.636
	desc = EVTDESC_SOH_636
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_636 # Let's be friends!
		
		add_friend = FROM
		
		FROM = {
			character_event = { id = soh.637 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = {
					opinion = {
						who = FROM
						value = 0
					}
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_636 # I don't need another friend!
		
		prestige = -10
		
		FROM = {
			character_event = { id = soh.638 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				opinion = {
					who = FROM
					value = 0
				}
			}
		}
	}
}

# Friends
character_event = {
	id = soh.637
	desc = EVTDESC_SOH_637
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_637 # Great!
		
		add_friend = FROM
	}
}

# Not friends
character_event = {
	id = soh.638
	desc = EVTDESC_SOH_638
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_638 # I see...
		
		prestige = -10
	}
}

### Rivalry

# Possible rivalry
character_event = {
	id = soh.639
	desc = EVTDESC_SOH_639
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_639 # I hate them!
		
		event_target:chuseok_rival = {
			add_rival = ROOT
			character_event = { id = soh.640 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				opinion = {
					who = event_target:chuseok_rival
					value = 0
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_639 # I don't need another rival!
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				NOT = {
					opinion = {
						who = event_target:chuseok_rival
						value = 0
					}
				}
			}
		}
	}
}

# Rivalry declared
character_event = {
	id = soh.640
	desc = EVTDESC_SOH_640
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_640 # I hate you too!
		
		add_rival = FROM
	}
}

### Harvest discussion

# Take part in a discussion about the harvest?
character_event = {
	id = soh.641
	desc = EVTDESC_SOH_641
	picture = GFX_evt_china_invades
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_641 # Sure!
		
		random_list = {
			10 = {
				modifier = {
					factor = 2
					stewardship = 10
				}
				modifier = {
					factor = 2
					stewardship = 15
				}
				modifier = {
					factor = 2
					stewardship = 20
				}
				character_event = { id = soh.642 days = 2 } # Discussion goes well - gain prestige
			}
			10 = {
				modifier = {
					factor = 0
					has_education_stewardship_trigger = yes
					NOT = {
						trait = midas_touched
					}
				}
				character_event = { id = soh.643 days = 2 } # Discussion goes well - upgrade education
			}
			10 = {
				character_event = { id = soh.644 days = 2 } # Discussion goes well - become more Diligent
			}
			100 = {
				character_event = { id = soh.645 days = 2 } # Discussion goes okay
			}
			10 = {
				modifier = {
					factor = 0.5
					stewardship = 10
				}
				modifier = {
					factor = 0.5
					stewardship = 15
				}
				modifier = {
					factor = 0
					stewardship = 20
				}
				character_event = { id = soh.646 days = 2 } # Discussion goes poorly - lose prestige
			}
			10 = {
				character_event = { id = soh.647 days = 2 } # Discussion goes poorly - become more Wroth
			}
			10 = {
				character_event = { id = soh.648 days = 2 } # Discussion goes poorly - become less Gregarious
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = slothful
			}
			modifier = {
				factor = 0.1
				trait = content
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_641 # This is not a time for work!
		
		prestige = -10
		
		if = {
			limit = {
				trait = stressed
			}
			remove_trait = stressed
		}
		if = {
			limit = {
				trait = diligent
			}
			random = {
				chance = 15
				remove_trait_diligent_effect = yes
			}
		}
		else = {
			random = {
				chance = 15
				add_trait_slothful_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = diligent
			}
			modifier = {
				factor = 0.1
				trait = ambitious
			}
		}
	}
}

# Discussion goes well - gain prestige
character_event = {
	id = soh.642
	desc = EVTDESC_SOH_642
	picture = GFX_evt_china_invades
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_642 # Great!
		
		prestige = 50
	}
}

# Discussion goes well - upgrade Stewardship education
character_event = {
	id = soh.643
	desc = EVTDESC_SOH_643
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_643 # Great!
		
		if = {
			limit = {
				trait = fortune_builder
			}
			remove_trait = fortune_builder
			add_trait = midas_touched
		}
		else_if = {
			limit = {
				trait = thrifty_clerk
			}
			remove_trait = thrifty_clerk
			add_trait = fortune_builder
		}
		else = {
			remove_trait = indulgent_wastrel
			add_trait = thrifty_clerk
		}
	}
}

# Discussion goes well - become more Diligent
character_event = {
	id = soh.644
	desc = EVTDESC_SOH_644
	picture = GFX_evt_chinese_bureaucrat
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_644 # Great!
		
		if = {
			limit = {
				trait = slothful
			}
			remove_trait = slothful
		}
		else = {
			add_trait = diligent
		}
	}
}

# Discussion goes okay
character_event = {
	id = soh.645
	desc = EVTDESC_SOH_645
	picture = GFX_evt_china_invades
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_645 # Could be worse...
	}
}

# Discussion goes poorly - lose prestige
character_event = {
	id = soh.646
	desc = EVTDESC_SOH_646
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_646 # Curses!
		
		prestige = -50
	}
}

# Discussion goes poorly - become more Wroth
character_event = {
	id = soh.647
	desc = EVTDESC_SOH_647
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_647 # Curses!
		
		if = {
			limit = {
				trait = patient
			}
			remove_trait = patient
		}
		else = {
			add_trait = wroth
		}
		if = {
			limit = {
				NOT = {
					trait = stubborn
				}
			}
			random = {
				chance = 5
				add_trait_stubborn_effect = yes
			}
		}
	}
}

# Discussion goes poorly - become less Gregarious
character_event = {
	id = soh.648
	desc = EVTDESC_SOH_648
	picture = GFX_evt_china_diplomatic_incident
	border = GFX_event_normal_frame_economy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_648 # Curses!
		
		if = {
			limit = {
				trait = gregarious
			}
			remove_trait = gregarious
		}
		else = {
			add_trait = shy
		}
	}
}

### Religion conversion

# Muist
character_event = {
	id = soh.649
	desc = EVTDESC_SOH_649
	picture = GFX_evt_religious_exultation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_649 # I'll become Muist!
		
		religion = korean_pagan
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				NOT = {
					culture_group = koreanic
				}
			}
			modifier = {
				factor = 0.1
				NOR = {
					religion = buddhist
					secret_religion = korean_pagan
				}
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				liege = {
					religion = korean_pagan
				}
			}
		}
		name = EVTOPTB_SOH_649 # I'll become a secret Muist!
		
		set_secret_religion = korean_pagan
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				NOT = {
					culture_group = koreanic
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					religion = buddhist
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_649 # I think not!
		
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else = {
			random = {
				chance = 25
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = cynical
			}
		}
	}
}

# Reformed Muist
character_event = {
	id = soh.650
	desc = EVTDESC_SOH_650
	picture = GFX_evt_religious_exultation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_650 # I'll become Muist!
		
		religion = korean_pagan_reformed
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				NOT = {
					culture_group = koreanic
				}
			}
			modifier = {
				factor = 0.1
				NOR = {
					religion = buddhist
					secret_religion = korean_pagan_reformed
				}
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				liege = {
					religion = korean_pagan_reformed
				}
			}
		}
		name = EVTOPTB_SOH_650 # I'll become a secret Muist!
		
		set_secret_religion = korean_pagan_reformed
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				NOT = {
					culture_group = koreanic
				}
			}
			modifier = {
				factor = 0.1
				NOT = {
					religion = buddhist
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_650 # I think not!
		
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else = {
			random = {
				chance = 25
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = cynical
			}
		}
	}
}

# Buddhist
character_event = {
	id = soh.651
	desc = EVTDESC_SOH_651
	picture = GFX_evt_religious_exultation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_651 # I'll become Buddhist!
		
		religion = buddhist
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				NOT = {
					secret_religion = buddhist
				}
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				liege = {
					religion = buddhist
				}
			}
		}
		name = EVTOPTB_SOH_651 # I'll become a secret Buddhist!
		
		set_secret_religion = buddhist
		
		ai_chance = {
			factor = 100
		}
	}
	
	option = {
		name = EVTOPTC_SOH_651 # I think not!
		
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else = {
			random = {
				chance = 25
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = cynical
			}
		}
	}
}

# Confucian
character_event = {
	id = soh.652
	desc = EVTDESC_SOH_652
	picture = GFX_evt_religious_exultation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_652 # I'll become Confucian!
		
		religion = confucian
		
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0.1
				NOT = {
					secret_religion = confucian
				}
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				liege = {
					religion = confucian
				}
			}
		}
		name = EVTOPTB_SOH_652 # I'll become a secret Confucian!
		
		set_secret_religion = confucian
		
		ai_chance = {
			factor = 10
		}
	}
	
	option = {
		name = EVTOPTC_SOH_652 # I think not!
		
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else = {
			random = {
				chance = 10 # Intentionally lower
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = cynical
			}
		}
	}
}

# Taoist
character_event = {
	id = soh.653
	desc = EVTDESC_SOH_653
	picture = GFX_evt_religious_exultation
	border = GFX_event_normal_frame_religion
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_653 # I'll become Taoist!
		
		religion = taoist
		
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0.1
				NOT = {
					secret_religion = taoist
				}
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				liege = {
					religion = taoist
				}
			}
		}
		name = EVTOPTB_SOH_653 # I'll become a secret Taoist!
		
		set_secret_religion = taoist
		
		ai_chance = {
			factor = 10
		}
	}
	
	option = {
		name = EVTOPTC_SOH_653 # I think not!
		
		if = {
			limit = {
				trait = cynical
			}
			remove_trait = cynical
		}
		else = {
			random = {
				chance = 10 # Intentionally lower
				add_trait_zealous_effect = yes
			}
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = cynical
			}
		}
	}
}

##### Event selection + event groups 2

# Event selection 2
character_event = {
	id = soh.654
	hide_window = yes
	
	is_triggered_only = yes

	only_rulers = yes
	capable_only = yes
	prisoner = no
	war = no

	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	immediate = {
		# Songpyeon
		random = {
			chance = 50
			if = {
				limit = {
					has_character_flag = chuseok_extra_songpyeon
				}
				character_event = { id = soh.655 days = 1 } # Extra Songpyeon
			}
			else_if = {
				limit = {
					has_character_flag = chuseok_enough_songpyeon
				}
				character_event = { id = soh.657 days = 1 } # Enough Songpyeon
			}
			else_if = {
				limit = {
					has_character_flag = chuseok_no_songpyeon
				}
				character_event = { id = soh.658 days = 1 } # No Songpyeon
			}
		}
		
		# Possible romance
		random_list = {
			25 = {
				modifier = {
					factor = 0
					NOT = {
						any_child = {
							age = 11
							NOT = {
								age = 16
							}
							host = {
								character = ROOT
							}
							is_inaccessible_or_incapable_trigger = no
							is_ascetic_trigger = no
						}
					}
				}
				modifier = {
					factor = 0.1
					NOT = {
						any_child = {
							age = 11
							NOT = {
								age = 16
							}
							host = {
								character = ROOT
							}
							is_inaccessible_or_incapable_trigger = no
							is_ascetic_trigger = no
							NOT = {
								has_character_flag = chuseok_child_romance
							}
						}
					}
				}
				random_child = {
					limit = {
						age = 11
						NOT = {
							age = 16
						}
						host = {
							character = ROOT
						}
						is_inaccessible_or_incapable_trigger = no
						is_ascetic_trigger = no
					}
					preferred_limit = {
						NOT = {
							has_character_flag = chuseok_child_romance
						}
					}
					set_character_flag = chuseok_child_romance # Do not clear this!
					character_event = { id = soh.660 days = 2 random = 1 } # Child kissing commoner
				}
			}
			50 = {
				random_list = {
					50 = {
						modifier = {
							factor = 0
							NOT = {
								any_vassal = {
									is_adult = yes
									has_character_flag = coming_to_chuseok
									war = no
								}
							}
						}
						any_vassal = {
							limit = {
								is_adult = yes
								has_character_flag = coming_to_chuseok
								war = no
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.672 days = 2 random = 2 } # Vassal kisses commoner
						}
					}
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0
							NOT = {
								any_courtier = {
									is_adult = yes
									is_inaccessible_or_incapable_trigger = no
								}
							}
						}
						any_courtier = {
							limit = {
								is_adult = yes
								is_inaccessible_or_incapable_trigger = no
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.671 days = 2 random = 1 } # Courtier kisses commoner
						}
					}
				}
			}
			25 = {
				any_courtier_or_vassal = {
					limit = {
						is_adult = yes
						has_character_flag = coming_to_chuseok
						is_inaccessible_or_incapable_trigger = no
						OR = {
							is_landed = no
							AND = {
								has_character_flag = coming_to_chuseok
								war = no
							}
						}
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_tumble_1
					ROOT = {
						any_courtier_or_vassal = {
							limit = {
								is_adult = yes
								is_inaccessible_or_incapable_trigger = no
								OR = {
									is_landed = no
									AND = {
										has_character_flag = coming_to_chuseok
										war = no
									}
								}
								OR = {
									AND = {
										is_female = no
										NOT = {
											trait = homosexual
										}
										event_target:chuseok_tumble_1 = {
											is_female = yes
											NOT = {
												trait = homosexual
											}
										}
									}
									AND = {
										is_female = yes
										NOT = {
											trait = homosexual
										}
										event_target:chuseok_tumble_1 = {
											is_female = no
											NOT = {
												trait = homosexual
											}
										}
									}
									AND = {
										is_female = yes
										trait = homosexual
										event_target:chuseok_tumble_1 = {
											is_female = yes
											trait = homosexual
										}
									}
									AND = {
										is_female = no
										trait = homosexual
										event_target:chuseok_tumble_1 = {
											is_female = no
											trait = homosexual
										}
									}
								}
								NOR = {
									any_friend = {
										character = event_target:chuseok_tumble_1
									}
									any_lover = {
										character = event_target:chuseok_tumble_1
									}
									any_rival = {
										character = event_target:chuseok_tumble_1
									}
									any_spouse = {
										character = event_target:chuseok_tumble_1
									}
									any_consort = {
										character = event_target:chuseok_tumble_1
									}
									any_close_relative = {
										character = event_target:chuseok_tumble_1
									}
								}
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							save_event_target_as = chuseok_tumble_2
						}
					}
				}
				event_target:chuseok_tumble_1 = {
					character_event = { id = soh.676 days = 2 random = 1 } # Possible tumbling between courtiers/vassals
				}
			}
			50 = {
				# Nothing
			}
		}
		
		# Ssireum
		random_list = {
			25 = {
				modifier = {
					factor = 0
					NOT = {
						any_vassal = {
							war = no
							has_character_flag = coming_to_chuseok
							is_adult = yes
						}
					}
				}
				any_vassal = {
					limit = {
						war = no
						has_character_flag = coming_to_chuseok
						is_adult = yes
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_challenger
					character_event = { id = soh.682 days = 4 random = 1 } # Vassal might issue a ssireum challenge
				}
			}
			70 = {
				character_event = { id = soh.713 days = 6 random = 6 } # Regular ssireum
			}
			5 = {
				character_event = { id = soh.715 days = 6 random = 6 } # Commoner distinguishes himself in ssireum - recruit?
			}
		}
		
		# On to the next event group
		character_event = { id = soh.716 days = 15 }
	}
}

### Songpyeon

# Extra Songpyeon - liege
character_event = {
	id = soh.655
	desc = EVTDESC_SOH_655
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_655 # That's good!
		
		prestige = 10
		
		gain_weight_small_effect = yes
		
		if = {
			limit = {
				trait = temperate
			}
			random = {
				chance = 5
				remove_trait_temperate_effect = yes
			}
		}
		else_if = {
			limit = {
				NOT = {
					trait = gluttonous
				}
			}
			random = {
				chance = 5
				add_trait_gluttonous_effect = yes
			}
		}
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
			}
			opinion = {
				who = ROOT
				modifier = opinion_good_chuseok
			}
			character_event = { id = soh.656 } # Inform vassals
		}
	}
}

# Extra Songpyeon - vassals
character_event = {
	id = soh.656
	desc = EVTDESC_SOH_656
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_656 # That's good!
		
		gain_weight_small_effect = yes
		
		if = {
			limit = {
				trait = temperate
			}
			random = {
				chance = 5
				remove_trait_temperate_effect = yes
			}
		}
		else_if = {
			limit = {
				NOT = {
					trait = gluttonous
				}
			}
			random = {
				chance = 5
				add_trait_gluttonous_effect = yes
			}
		}
	}
}

# Enough Songpyeon
character_event = {
	id = soh.657
	desc = EVTDESC_SOH_657
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_657 # Nobody has complained, at least...
	}
}

# No Songpyeon - liege
character_event = {
	id = soh.658
	desc = EVTDESC_SOH_658
	picture = GFX_evt_scandal

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_658 # That's bad...
		
		prestige = -10
		
		lose_weight_small_effect = yes
		
		if = {
			limit = {
				trait = gluttonous
			}
			random = {
				chance = 5
				remove_trait_gluttonous_effect = yes
			}
		}
		else_if = {
			limit = {
				NOT = {
					trait = temperate
				}
			}
			random = {
				chance = 5
				add_trait_temperate_effect = yes
			}
		}
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
			}
			opinion = {
				who = ROOT
				modifier = opinion_bad_chuseok
			}
			character_event = { id = soh.659 } # Inform vassals
		}
	}
}

# No Songpyeon - vassals
character_event = {
	id = soh.659
	desc = EVTDESC_SOH_659
	picture = GFX_evt_scandal

	only_rulers = yes
	capable_only = yes
	prisoner = no

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_659 # That's bad!
		
		lose_weight_small_effect = yes
		
		if = {
			limit = {
				trait = gluttonous
			}
			random = {
				chance = 5
				remove_trait_gluttonous_effect = yes
			}
		}
		else_if = {
			limit = {
				NOT = {
					trait = temperate
				}
			}
			random = {
				chance = 5
				add_trait_temperate_effect = yes
			}
		}
	}
}

### Child kissing commoner

# Child spots interesting commoner
character_event = {
	id = soh.660
	desc = EVTDESC_SOH_660
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_660 # Give them a kiss!
		
		character_event = { id = soh.661 days = 1 } # Follow-up
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = proud
			}
			modifier = {
				factor = 0.01
				trait = chaste
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_660 # Do nothing!
		
		character_event = { id = soh.671 days = 1 } # Follow-up
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.01
				trait = lustful
			}
		}
	}
}

# Child kissed commoner - possibly more Lustful and possibly follow-up
character_event = {
	id = soh.661
	desc = EVTDESC_SOH_661
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_661 # That was nice!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		else = {
			random = {
				chance = 25
				add_trait_lustful_effect = yes
			}
		}
		
		random = {
			chance = 50
			FROMFROM = {
				character_event = { id = soh.662 days = 1 } # Liege informed
			}
		}
	}
}

# Your child kissed a commoner - what do?
character_event = {
	id = soh.662
	desc = EVTDESC_SOH_662
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_662 # Make sure it doesn't happen again!
		
		wealth = -5
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = humble
			}
			modifier = {
				factor = 0.1
				trait = lustful
				FROM = {
					is_female = yes
				}
				NOR = {
					has_religion_feature = religion_matriarchal
					has_religion_feature = religion_equal
				}
			}
			modifier = {
				factor = 0.01
				trait = lustful
				FROM = {
					OR = {
						is_female = no
						trait = homosexual
					}
				}
			}
			modifier = {
				factor = 0
				trait = cruel
			}
		}
	}
	
	option = {
		trigger = {
			trait = cruel
		}
		name = EVTOPTB_SOH_662 # Make sure it can't happen again!
		
		piety = -25
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = humble
			}
			modifier = {
				factor = 0.1
				trait = lustful
				FROM = {
					is_female = yes
				}
				NOR = {
					has_religion_feature = religion_matriarchal
					has_religion_feature = religion_equal
				}
			}
			modifier = {
				factor = 0.01
				trait = lustful
				FROM = {
					OR = {
						is_female = no
						trait = homosexual
					}
				}
			}
			modifier = {
				factor = 0.01
				NOR = {
					trait = wroth
					trait = arbitrary
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_662 # It was probably harmless, and they could use a friend...
		
		prestige = -10
		
		FROM = {
			character_event = { id = soh.663 } # Inform child the commoner now lives at court
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = proud
			}
			modifier = {
				factor = 0.01
				trait = chaste
			}
		}
	}
}

# Your parent allowed the commoner to stay at court - you are now friends (and might become more)
character_event = {
	id = soh.663
	desc = EVTDESC_SOH_663
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				is_female = no
				NOT = {
					trait = homosexual
				}
			}
			create_character = {
				age = 13
				female = yes
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = no
				trait = fair
				trait = lustful
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
		else_if = {
			limit = {
				is_female = yes
				NOT = {
					trait = homosexual
				}
			}
			create_character = {
				age = 13
				female = no
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = no
				trait = fair
				trait = lustful
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
		else_if = {
			limit = {
				is_female = yes
				trait = homosexual
			}
			create_character = {
				age = 13
				female = yes
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = no
				trait = fair
				trait = lustful
				trait = homosexual
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
		else_if = {
			limit = {
				is_female = no
				trait = homosexual
			}
			create_character = {
				age = 13
				female = no
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = no
				trait = fair
				trait = lustful
				trait = homosexual
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_663 # That's nice!
		
		add_friend = event_target:chuseok_kisser
		
		character_event = { id = soh.664 days = 7105 } # Follow-up
	}
}

# Check to see if both children have become adults (and still are compatible), loop if not
character_event = {
	id = soh.664
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				event_target:chuseok_kisser = {
					is_alive = yes
					OR = { # Still compatible
						AND = {
							is_female = no
							NOT = {
								trait = homosexual
							}
							ROOT = {
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
						}
						AND = {
							is_female = yes
							NOT = {
								trait = homosexual
							}
							ROOT = {
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
						}
						AND = {
							is_female = yes
							trait = homosexual
							ROOT = {
								is_female = yes
								trait = homosexual
							}
						}
						AND = {
							is_female = no
							trait = homosexual
							ROOT = {
								is_female = no
								trait = homosexual
							}
						}
					}
				}
			}
			if = {
				limit = {
					is_adult = yes
					is_inaccessible_or_incapable_trigger = no
					event_target:chuseok_kisser = {
						is_inaccessible_or_incapable_trigger = no
					}
				}
				character_event = { id = soh.665 } # Try to become lovers?
			}
			else = {
				repeat_event = { id = soh.664 days = 365 } # Try again
			}
		}
	}
}

# You're both adults now and they're still attractive - see if you can become more?
character_event = {
	id = soh.665
	desc = EVTDESC_SOH_665
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_665 # Yes!
		
		FROMFROM = {
			character_event = { id = soh.666 days = 1 } # Other party approached
		}
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				FROMFROM = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				FROMFROM = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_665 # I don't think so!
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Approached - tumble?
character_event = {
	id = soh.666
	desc = EVTDESC_SOH_666
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_666 # Yes!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		FROM = {
			character_event = { id = soh.667 } # FROM informed
		}
		unprotected_sex_effect = yes
		
		piety = -10
		
		add_lover = FROM
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				FROM = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				FROM = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_666 # I don't think so!
		
		FROM = {
			character_event = { id = soh.668 } # FROM informed
		}
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Tumbling happened, and you're now lovers
character_event = {
	id = soh.667
	desc = EVTDESC_SOH_667
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_667 # That's great!
		
		add_lover = FROM
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
	}
}

# No tumbling - still friends?
character_event = {
	id = soh.668
	desc = EVTDESC_SOH_668
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_668 # Yes!
		
		FROM = {
			character_event = { id = soh.669 days = 1 } # Inform FROM
		}
	}
	
	option = {
		name = EVTOPTB_SOH_668 # No!
		
		remove_friend = FROM
		
		FROM = {
			leave_court_effect = yes
			character_event = { id = soh.670 days = 1 } # Inform FROM
		}
	}
}

# Still friends
character_event = {
	id = soh.669
	desc = EVTDESC_SOH_669
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_669 # That's great!
	}
}

# No longer friends
character_event = {
	id = soh.670
	desc = EVTDESC_SOH_670
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_670 # Perhaps that's for the best...
		
		remove_friend = FROM
	}
}

# No kissing - possibly more Chaste
character_event = {
	id = soh.671
	desc = EVTDESC_SOH_671
	picture = GFX_evt_feast

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_671 # I can wait until marriage!
		
		if = {
			limit = {
				trait = lustful
			}
			remove_trait = lustful
		}
		else = {
			random = {
				chance = 25
				add_trait_chaste_effect = yes
			}
		}
	}
}

### Vassal or courtier kissing commoner

# Vassal/courtier spots interesting commoner
character_event = {
	id = soh.672
	desc = EVTDESC_SOH_672
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_672 # Give them a kiss!
		
		if = {
			limit = {
				NOT = {
					trait = lustful
				}
			}
			character_event = { id = soh.673 days = 1 } # Follow-up
		}
		else = {
			character_event = { id = soh.674 days = 1 } # Follow-up
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = proud
			}
			modifier = {
				factor = 0.01
				trait = chaste
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_672 # Do nothing!
		
		character_event = { id = soh.675 days = 1 } # Follow-up
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.01
				trait = lustful
			}
		}
	}
}

# Vassal/courtier kissed commoner - possibly more Lustful
character_event = {
	id = soh.673
	desc = EVTDESC_SOH_673
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_673 # That was nice!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		else = {
			random = {
				chance = 25
				add_trait_lustful_effect = yes
			}
		}
	}
}

# Already Lustful - tumble?
character_event = {
	id = soh.674
	desc = EVTDESC_SOH_674
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				is_female = no
				NOT = {
					trait = homosexual
				}
			}
			create_character = {
				age = 16
				female = yes
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = yes
				trait = fair
				trait = lustful
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
		else_if = {
			limit = {
				is_female = yes
				NOT = {
					trait = homosexual
				}
			}
			create_character = {
				age = 16
				female = no
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = yes
				trait = fair
				trait = lustful
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
		else_if = {
			limit = {
				is_female = yes
				trait = homosexual
			}
			create_character = {
				age = 16
				female = yes
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = yes
				trait = fair
				trait = lustful
				trait = homosexual
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
		else_if = {
			limit = {
				is_female = no
				trait = homosexual
			}
			create_character = {
				age = 16
				female = no
				dynasty = none
				culture = ROOT
				religion = ROOT
				random_traits = yes
				trait = fair
				trait = lustful
				trait = homosexual
			}
			new_character = {
				save_event_target_as = chuseok_kisser
			}
		}
	}
	
	option = {
		name = EVTOPTA_SOH_674 # Yes, and become lovers!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		event_target:chuseok_kisser = {
			save_event_target_as = sex_partner
			add_lover = ROOT
		}
		unprotected_sex_effect_event_target = yes
		
		ai_chance = {
			factor = 100
			# Riskier for women
			modifier = {
				factor = 0.1
				is_female = yes
				NOT = {
					trait = homosexual
				}
				NOT = {
					age = 45
				}
			}
			modifier = {
				factor = 0.1
				is_female = yes
				NOT = {
					trait = homosexual
				}
				NOT = {
					age = 45
				}
				OR = {
					is_married = yes
					is_consort = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_674 # Yes, but only this once!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		event_target:chuseok_kisser = {
			save_event_target_as = sex_partner
			leave_court_effect = yes
		}
		unprotected_sex_effect_event_target = yes
		
		ai_chance = {
			factor = 100
			# Riskier for women
			modifier = {
				factor = 0.1
				is_female = yes
				NOT = {
					trait = homosexual
				}
				NOT = {
					age = 45
				}
			}
			modifier = {
				factor = 0.1
				is_female = yes
				NOT = {
					trait = homosexual
				}
				NOT = {
					age = 45
				}
				OR = {
					is_married = yes
					is_consort = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTC_SOH_674 # No!
		
		event_target:chuseok_kisser = {
			leave_court_and_die_effect = yes
		}
	}
}

# No kissing - possibly more Chaste
character_event = {
	id = soh.675
	desc = EVTDESC_SOH_675
	picture = GFX_evt_feast

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_675 # It would have been foolish!
		
		if = {
			limit = {
				trait = lustful
			}
			remove_trait = lustful
		}
		else = {
			random = {
				chance = 25
				add_trait_chaste_effect = yes
			}
		}
	}
}

### Vassal-vassal/vassal-courtier/courtier-courtier romance opportunity

# Someone is interesting - attempt to tumble?
character_event = {
	id = soh.676
	desc = EVTDESC_SOH_676
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_676 # Yes!
		
		event_target:chuseok_tumble_2 = {
			character_event = { id = soh.677 days = 1 } # Other party approached
		}
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				event_target:chuseok_tumble_2 = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				event_target:chuseok_tumble_2 = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_676 # I don't think so!
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Target approached
character_event = {
	id = soh.677
	desc = EVTDESC_SOH_677
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_677 # Yes!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		FROM = {
			character_event = { id = soh.679 } # FROM informed
		}
		unprotected_sex_effect = yes
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				FROM = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				FROM = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_677 # I don't think so!
		
		FROM = {
			character_event = { id = soh.678 } # FROM informed
		}
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Seduction failed
character_event = {
	id = soh.678
	desc = EVTDESC_SOH_678
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_678 # I see...
		
		prestige = -25
	}
}

# Seduction succeeded - lovers?
character_event = {
	id = soh.679
	desc = EVTDESC_SOH_679
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_679 # We should do this again!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		add_lover = FROM
		
		FROM = {
			character_event = { id = soh.680 days = 1 } # Inform FROM
		}
	}
	
	option = {
		name = EVTOPTB_SOH_679 # This shouldn't become a long-term thing...
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		FROM = {
			character_event = { id = soh.681 days = 1 } # Inform FROM
		}
	}
}

# Lovers
character_event = {
	id = soh.680
	desc = EVTDESC_SOH_680
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_680 # That's great!
		
		add_lover = FROM
	}
}

# Not lovers
character_event = {
	id = soh.681
	desc = EVTDESC_SOH_681
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_681 # Perhaps that's for the best...
	}
}

### Ssireum - vassal

# Challenger - pick a challengee or abstain
character_event = {
	id = soh.682
	desc = EVTDESC_SOH_682
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		# Select possible opponents
		
		# Opponent 1: Preferably strong and not maimed
		FROM = {
			if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_strong_trigger = yes
						is_maimed_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_strong_trigger = yes
						is_maimed_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_1
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_maimed_trigger = no
						is_weak_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_maimed_trigger = no
						is_weak_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_1
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_maimed_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_maimed_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_1
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_strong_trigger = yes
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_strong_trigger = yes
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_1
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_weak_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_weak_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_1
				}
			}
			else = {
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_1
				}
			}
		}
		
		# Opponent 2: Preferably neither thin nor fat
		FROM = {
			if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							trait = is_fat
							trait = is_malnourished
						}
						is_maimed_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							trait = is_fat
							trait = is_malnourished
						}
						is_maimed_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_2
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_weak_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_weak_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_2
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						NOR = {
							trait = is_fat
							trait = is_malnourished
						}
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						is_strong_trigger = yes
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_2
				}
			}
			else = {
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_2
				}
			}
		}
		
		# Opponent 3: Someone you're attracted to, preferably also with compatible orientation, preferably attractive, preferably not married/etc.
		FROM = {
			if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
							}
						}
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
							}
						}
						is_ascetic_trigger = no
						is_married = no
						is_consort = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
							}
						}
						is_attractive_trigger = yes
						is_unattractive_trigger = no
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
			else_if = {
				limit = {
					any_courtier = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
					}
				}
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
								NOT = {
									trait = homosexual
								}
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
								trait = homosexual
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
								trait = homosexual
							}
						}
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
			else = {
				any_courtier = {
					limit = {
						is_adult = yes
						is_inaccessible_or_incapable_trigger = no
						OR = {
							AND = {
								ROOT = {
									is_female = no
									NOT = {
										trait = homosexual
									}
								}
								is_female = yes
							}
							AND = {
								ROOT = {
									is_female = yes
									NOT = {
										trait = homosexual
									}
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = no
									trait = homosexual
								}
								is_female = no
							}
							AND = {
								ROOT = {
									is_female = yes
									trait = homosexual
								}
								is_female = yes
							}
						}
					}
					score_value = { #Prioritizes selecting an interesting courtier...
						value = 10
						interesting_courtier_selection_score = yes
					}
					save_event_target_as = chuseok_ssireum_opponent_3
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:chuseok_ssireum_opponent_1 = {
				always = yes
			}
		}
		name = EVTOPTA_SOH_682 # I will pick the first opponent!
		
		event_target:chuseok_ssireum_opponent_1 = {
			character_event = { id = soh.683 days = 1 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				event_target:chuseok_ssireum_opponent_1 = {
					is_strong_trigger = yes
					ROOT = {
						is_weak_trigger = yes
						is_smart_trigger = yes
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:chuseok_ssireum_opponent_1 = {
					is_strong_trigger = yes
					ROOT = {
						is_weak_trigger = yes
						is_dumb_trigger = no
					}
				}
			}
			modifier = {
				factor = 0.1
				trait = lustful
				event_target:chuseok_ssireum_opponent_3 = {
					always = yes
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:chuseok_ssireum_opponent_2 = {
				always = yes
			}
		}
		name = EVTOPTB_SOH_682 # I will pick the second opponent!
		
		event_target:chuseok_ssireum_opponent_2 = {
			character_event = { id = soh.683 days = 1 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				event_target:chuseok_ssireum_opponent_2 = {
					is_strong_trigger = yes
					ROOT = {
						is_weak_trigger = yes
						is_smart_trigger = yes
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:chuseok_ssireum_opponent_2 = {
					is_strong_trigger = yes
					ROOT = {
						is_weak_trigger = yes
						is_dumb_trigger = no
					}
				}
			}
			modifier = {
				factor = 0.1
				trait = lustful
				event_target:chuseok_ssireum_opponent_3 = {
					always = yes
				}
			}
		}
	}
	
	option = {
		trigger = {
			event_target:chuseok_ssireum_opponent_3 = {
				always = yes
			}
		}
		name = EVTOPTC_SOH_682 # I will pick the third opponent!
		
		event_target:chuseok_ssireum_opponent_3 = {
			character_event = { id = soh.683 days = 1 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				event_target:chuseok_ssireum_opponent_3 = {
					is_strong_trigger = yes
					ROOT = {
						is_weak_trigger = yes
						is_smart_trigger = yes
					}
				}
			}
			modifier = {
				factor = 0.1
				event_target:chuseok_ssireum_opponent_3 = {
					is_strong_trigger = yes
					ROOT = {
						is_weak_trigger = yes
						is_dumb_trigger = no
					}
				}
			}
			modifier = {
				factor = 0.1
				trait = chaste
			}
		}
	}
	
	option = {
		name = EVTOPTD_SOH_682 # Let's not challenge anyone...
		
		prestige = -10
	}
}

# Challengee gets challenge
character_event = {
	id = soh.683
	desc = EVTDESC_SOH_683
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_683 # I accept!
		
		save_event_target_as = chuseok_ssireum_opponent
		FROM = {
			character_event = { id = soh.685 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = craven
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_683 # I refuse!
		
		prestige = -10
		FROM = {
			character_event = { id = soh.684 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = brave
			}
		}
	}
}

# Challenge refused
character_event = {
	id = soh.684
	desc = EVTDESC_SOH_684
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_684 # How cowardly...
	}
}

# Challenge accepted
character_event = {
	id = soh.685
	desc = EVTDESC_SOH_685
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_685 # Time to begin, then!
		
		FROMFROMFROM = {
			character_event = { id = soh.686 days = 1 } # Inform liege
		}
	}
}

# Liege informed
character_event = {
	id = soh.686
	desc = EVTDESC_SOH_686
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_686 # I'm sure it'll be fun!
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				ai = no
				NOR = {
					character = event_target:chuseok_ssireum_challenger
					character = event_target:chuseok_ssireum_opponent
				}
			}
			character_event = { id = soh.687 } # Inform vassals
		}
		
		event_target:chuseok_ssireum_challenger = {
			character_event = { id = soh.688 days = 1 } # Time to begin
		}
	}
}

# Vassals informed
character_event = {
	id = soh.687
	desc = EVTDESC_SOH_688
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_687 # I'm sure it'll be fun!
	}
}

# Challenger - how do you plan to fight?
character_event = {
	id = soh.688
	desc = EVTDESC_SOH_688
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		event_target:chuseok_ssireum_opponent = {
			character_event = { id = soh.689 } # Opponent also picks
		}
	}
	
	option = {
		name = EVTOPTA_SOH_687 # I trust my stength!
		
		set_character_flag = chuseok_ssireum_strength
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				is_strong_trigger = yes
			}
			modifier = {
				factor = 0.1
				is_weak_trigger = yes
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_688 # I trust my endurance!
		
		set_character_flag = chuseok_ssireum_endurance
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				trait = is_fat
			}
			modifier = {
				factor = 0.1
				trait = is_malnourished
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				trait = deceitful
				trait = arbitrary
				AND = {
					intrigue = 15
					NOT = {
						trait = honest
					}
				}
			}
			intrigue = 8
		}
		name = EVTOPTC_SOH_688 # I will trick my opponent!
		
		set_character_flag = chuseok_ssireum_deception
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				trait = deceitful
			}
			modifier = {
				factor = 10
				trait = arbitrary
			}
			modifier = {
				factor = 0.1
				trait = honest
			}
			modifier = {
				factor = 0.1
				trait = just
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				trait = celibate
			}
			OR = {
				AND = {
					prefers_men_trigger = yes
					event_target:chuseok_ssireum_opponent = {
						is_female = no
					}
				}
				AND = {
					prefers_men_trigger = no
					event_target:chuseok_ssireum_opponent = {
						is_female = yes
					}
				}
			}
			OR = {
				NOT = {
					trait = chaste
				}
				trait = seducer
				trait = seductress
			}
		}
		name = EVTOPTD_SOH_688 # I will seduce my opponent!
		
		set_character_flag = chuseok_ssireum_seduction
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				trait = deceitful
			}
			modifier = {
				factor = 10
				trait = arbitrary
			}
			modifier = {
				factor = 0.1
				trait = honest
			}
			modifier = {
				factor = 0.1
				trait = just
			}
		}
	}
}

# Challengee - how do you plan to fight?
character_event = {
	id = soh.689
	desc = EVTDESC_SOH_689
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	immediate = {
		FROMFROM = {
			character_event = { id = soh.690 days = 1 } # Ping liege and determine outcome
		}
	}
	
	option = {
		name = EVTOPTA_SOH_689 # I trust my stength!
		
		set_character_flag = chuseok_ssireum_strength
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				is_strong_trigger = yes
			}
			modifier = {
				factor = 0.1
				is_weak_trigger = yes
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_689 # I trust my endurance!
		
		set_character_flag = chuseok_ssireum_endurance
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				trait = is_fat
			}
			modifier = {
				factor = 0.1
				trait = is_malnourished
			}
		}
	}
	
	option = {
		trigger = {
			OR = {
				trait = deceitful
				trait = arbitrary
				AND = {
					intrigue = 15
					NOT = {
						trait = honest
					}
				}
			}
			intrigue = 8
		}
		name = EVTOPTC_SOH_689 # I will trick my opponent!
		
		set_character_flag = chuseok_ssireum_deception
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				trait = deceitful
			}
			modifier = {
				factor = 10
				trait = arbitrary
			}
			modifier = {
				factor = 0.1
				trait = honest
			}
			modifier = {
				factor = 0.1
				trait = just
			}
		}
	}
	
	option = {
		trigger = {
			NOT = {
				trait = celibate
			}
			OR = {
				AND = {
					prefers_men_trigger = yes
					event_target:chuseok_ssireum_challenger = {
						is_female = no
					}
				}
				AND = {
					prefers_men_trigger = no
					event_target:chuseok_ssireum_challenger = {
						is_female = yes
					}
				}
			}
			OR = {
				NOT = {
					trait = chaste
				}
				trait = seducer
				trait = seductress
			}
		}
		name = EVTOPTD_SOH_689 # I will seduce my opponent!
		
		set_character_flag = chuseok_ssireum_seduction
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 10
				trait = deceitful
			}
			modifier = {
				factor = 10
				trait = arbitrary
			}
			modifier = {
				factor = 0.1
				trait = honest
			}
			modifier = {
				factor = 0.1
				trait = just
			}
		}
	}
}

# Ping liege and determine outcome
character_event = {
	id = soh.690
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	immediate = {
		# Determine winner
		# Strength > endurance
		# Endurance > deception
		# Deception > strength
		# Seduction > everything if compatible and not Celibate/Chaste and not ugly, < everything otherwise
		# Tiebreakers for strength: Strength, fat/malnourished, PCS
		# Tiebreakers for endurance: Strength, fat/malnourished, PCS
		# Tiebreakers for deception: Intrigue, intelligence, PCS
		# Tiebreakers for seduction: Seducer/Seductress, Attractiveness or lack thereof, Diplomacy, NOT Lustful
		if = {
			limit = {
				event_target:chuseok_ssireum_challenger = {
					has_character_flag = chuseok_ssireum_strength
				}
			}
			if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_strength
					}
				}
				# Tiebreaker 1: Strength
				if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_strong_trigger = yes
						}
						event_target:chuseok_ssireum_opponent = {
							is_strong_trigger = no
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
				else_if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_strong_trigger = no
						}
						event_target:chuseok_ssireum_opponent = {
							is_strong_trigger = yes
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else_if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_weak_trigger = no
						}
						event_target:chuseok_ssireum_opponent = {
							is_weak_trigger = yes
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
				else_if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_weak_trigger = yes
						}
						event_target:chuseok_ssireum_opponent = {
							is_weak_trigger = no
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else = {
					# Both are strong, both are weak, or both are neither
					# Tiebreaker 2: Fat/malnourished
					if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								trait = is_fat
							}
							event_target:chuseok_ssireum_opponent = {
								NOT = {
									trait = is_fat
								}
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_winner
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_loser
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								NOT = {
									trait = is_fat
								}
							}
							event_target:chuseok_ssireum_opponent = {
								trait = is_fat
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_loser
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_winner
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								NOT = {
									trait = is_malnourished
								}
							}
							event_target:chuseok_ssireum_opponent = {
								trait = is_malnourished
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_winner
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_loser
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								trait = is_malnourished
							}
							event_target:chuseok_ssireum_opponent = {
								NOT = {
									trait = is_malnourished
								}
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_loser
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_winner
						}
					}
					else = {
						# Tiebreaker 3: PCS
						if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									combat_rating_diff = {
										character = event_target:chuseok_ssireum_opponent
										value >= 1
									}
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_winner
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_loser
							}
						}
						else_if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									combat_rating_diff = {
										character = event_target:chuseok_ssireum_opponent
										value <= -1
									}
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_loser
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_winner
							}
						}
						else = {
							# Just randomize it
							random_list = {
								50 = {
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_winner
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_loser
									}
								}
								50 = {
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_loser
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_winner
									}
								}
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_endurance
					}
				}
				event_target:chuseok_ssireum_challenger = {
					save_event_target_as = chuseok_ssireum_winner
				}
				event_target:chuseok_ssireum_opponent = {
					save_event_target_as = chuseok_ssireum_loser
				}
			}
			else_if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_deception
					}
				}
				event_target:chuseok_ssireum_challenger = {
					save_event_target_as = chuseok_ssireum_loser
				}
				event_target:chuseok_ssireum_opponent = {
					save_event_target_as = chuseok_ssireum_winner
				}
			}
			else = {
				if = {
					limit = {
						NOR = {
							trait = celibate
							trait = chaste
							event_target:chuseok_ssireum_opponent = {
								is_unattractive_trigger = yes
							}
						}
						OR = {
							AND = {
								prefers_men_trigger = yes
								event_target:chuseok_ssireum_opponent = {
									is_female = no
								}
							}
							AND = {
								prefers_men_trigger = no
								event_target:chuseok_ssireum_opponent = {
									is_female = yes
								}
							}
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else = {
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
			}
		}
		else_if = {
			limit = {
				event_target:chuseok_ssireum_challenger = {
					has_character_flag = chuseok_ssireum_endurance
				}
			}
			if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_strength
					}
				}
				event_target:chuseok_ssireum_challenger = {
					save_event_target_as = chuseok_ssireum_loser
				}
				event_target:chuseok_ssireum_opponent = {
					save_event_target_as = chuseok_ssireum_winner
				}
			}
			else_if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_endurance
					}
				}
				# Tiebreaker 1: Strength
				if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_strong_trigger = yes
						}
						event_target:chuseok_ssireum_opponent = {
							is_strong_trigger = no
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
				else_if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_strong_trigger = no
						}
						event_target:chuseok_ssireum_opponent = {
							is_strong_trigger = yes
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else_if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_weak_trigger = no
						}
						event_target:chuseok_ssireum_opponent = {
							is_weak_trigger = yes
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
				else_if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							is_weak_trigger = yes
						}
						event_target:chuseok_ssireum_opponent = {
							is_weak_trigger = no
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else = {
					# Both are strong, both are weak, or both are neither
					# Tiebreaker 2: Fat/malnourished
					if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								trait = is_fat
							}
							event_target:chuseok_ssireum_opponent = {
								NOT = {
									trait = is_fat
								}
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_winner
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_loser
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								NOT = {
									trait = is_fat
								}
							}
							event_target:chuseok_ssireum_opponent = {
								trait = is_fat
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_loser
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_winner
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								NOT = {
									trait = is_malnourished
								}
							}
							event_target:chuseok_ssireum_opponent = {
								trait = is_malnourished
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_winner
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_loser
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								trait = is_malnourished
							}
							event_target:chuseok_ssireum_opponent = {
								NOT = {
									trait = is_malnourished
								}
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_loser
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_winner
						}
					}
					else = {
						# Tiebreaker 3: PCS
						if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									combat_rating_diff = {
										character = event_target:chuseok_ssireum_opponent
										value >= 1
									}
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_winner
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_loser
							}
						}
						else_if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									combat_rating_diff = {
										character = event_target:chuseok_ssireum_opponent
										value <= -1
									}
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_loser
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_winner
							}
						}
						else = {
							# Just randomize it
							random_list = {
								50 = {
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_winner
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_loser
									}
								}
								50 = {
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_loser
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_winner
									}
								}
							}
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_deception
					}
				}
				event_target:chuseok_ssireum_challenger = {
					save_event_target_as = chuseok_ssireum_winner
				}
				event_target:chuseok_ssireum_opponent = {
					save_event_target_as = chuseok_ssireum_loser
				}
			}
			else = {
				if = {
					limit = {
						NOR = {
							trait = celibate
							trait = chaste
							event_target:chuseok_ssireum_opponent = {
								is_unattractive_trigger = yes
							}
						}
						OR = {
							AND = {
								prefers_men_trigger = yes
								event_target:chuseok_ssireum_opponent = {
									is_female = no
								}
							}
							AND = {
								prefers_men_trigger = no
								event_target:chuseok_ssireum_opponent = {
									is_female = yes
								}
							}
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else = {
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
			}
		}
		else_if = {
			limit = {
				event_target:chuseok_ssireum_challenger = {
					has_character_flag = chuseok_ssireum_deception
				}
			}
			if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_strength
					}
				}
				event_target:chuseok_ssireum_challenger = {
					save_event_target_as = chuseok_ssireum_winner
				}
				event_target:chuseok_ssireum_opponent = {
					save_event_target_as = chuseok_ssireum_loser
				}
			}
			else_if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_endurance
					}
				}
				event_target:chuseok_ssireum_challenger = {
					save_event_target_as = chuseok_ssireum_loser
				}
				event_target:chuseok_ssireum_opponent = {
					save_event_target_as = chuseok_ssireum_winner
				}
			}
			else_if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						has_character_flag = chuseok_ssireum_deception
					}
				}
				# Tiebreaker 1: Intrigue
				if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							attribute_diff = {
								character = event_target:chuseok_ssireum_opponent
								attribute = intrigue
								value >= 1
							}
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
				else_if = {
					limit = {
						event_target:chuseok_ssireum_challenger = {
							attribute_diff = {
								character = event_target:chuseok_ssireum_opponent
								attribute = intrigue
								value <= -1
							}
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else = {
					# Tiebreaker 2: Intelligence
					if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								is_smart_trigger = yes
							}
							event_target:chuseok_ssireum_opponent = {
								is_smart_trigger = no
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_winner
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_loser
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								is_smart_trigger = no
							}
							event_target:chuseok_ssireum_opponent = {
								is_smart_trigger = yes
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_loser
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_winner
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								is_dumb_trigger = no
							}
							event_target:chuseok_ssireum_opponent = {
								is_dumb_trigger = yes
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_winner
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_loser
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								is_dumb_trigger = yes
							}
							event_target:chuseok_ssireum_opponent = {
								is_dumb_trigger = no
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_loser
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_winner
						}
					}
					else = {
						# Tiebreaker 3: PCS
						if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									combat_rating_diff = {
										character = event_target:chuseok_ssireum_opponent
										value >= 1
									}
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_winner
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_loser
							}
						}
						else_if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									combat_rating_diff = {
										character = event_target:chuseok_ssireum_opponent
										value <= -1
									}
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_loser
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_winner
							}
						}
						else = {
							# Just randomize it
							random_list = {
								50 = {
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_winner
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_loser
									}
								}
								50 = {
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_loser
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_winner
									}
								}
							}
						}
					}
				}
			}
			else = {
				if = {
					limit = {
						NOR = {
							trait = celibate
							trait = chaste
							event_target:chuseok_ssireum_opponent = {
								is_unattractive_trigger = yes
							}
						}
						OR = {
							AND = {
								prefers_men_trigger = yes
								event_target:chuseok_ssireum_opponent = {
									is_female = no
								}
							}
							AND = {
								prefers_men_trigger = no
								event_target:chuseok_ssireum_opponent = {
									is_female = yes
								}
							}
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_loser
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_winner
					}
				}
				else = {
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
			}
		}
		else_if = {
			limit = {
				event_target:chuseok_ssireum_challenger = {
					has_character_flag = chuseok_ssireum_seduction
				}
			}
			if = {
				limit = {
					event_target:chuseok_ssireum_opponent = {
						NOR = {
							trait = celibate
							trait = chaste
							event_target:chuseok_ssireum_challenger = {
								is_unattractive_trigger = yes
							}
						}
						OR = {
							AND = {
								prefers_men_trigger = yes
								event_target:chuseok_ssireum_challenger = {
									is_female = no
								}
							}
							AND = {
								prefers_men_trigger = no
								event_target:chuseok_ssireum_challenger = {
									is_female = yes
								}
							}
						}
					}
				}
				if = {
					limit = {
						event_target:chuseok_ssireum_opponent = {
							OR = {
								has_character_flag = chuseok_ssireum_strength
								has_character_flag = chuseok_ssireum_endurance
								has_character_flag = chuseok_ssireum_deception
							}
						}
					}
					event_target:chuseok_ssireum_challenger = {
						save_event_target_as = chuseok_ssireum_winner
					}
					event_target:chuseok_ssireum_opponent = {
						save_event_target_as = chuseok_ssireum_loser
					}
				}
				else = {
					# Tiebreaker 1: Seducer/Seductress
					if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								OR = {
									trait = seducer
									trait = seductress
								}
							}
							event_target:chuseok_ssireum_opponent = {
								NOR = {
									trait = seducer
									trait = seductress
								}
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_winner
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_loser
						}
					}
					else_if = {
						limit = {
							event_target:chuseok_ssireum_challenger = {
								NOR = {
									trait = seducer
									trait = seductress
								}
							}
							event_target:chuseok_ssireum_opponent = {
								OR = {
									trait = seducer
									trait = seductress
								}
							}
						}
						event_target:chuseok_ssireum_challenger = {
							save_event_target_as = chuseok_ssireum_loser
						}
						event_target:chuseok_ssireum_opponent = {
							save_event_target_as = chuseok_ssireum_winner
						}
					}
					else = {
						# Tiebreaker 2: Attractiveness
						if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									is_attractive_trigger = yes
									is_unattractive_trigger = no
								}
								event_target:chuseok_ssireum_opponent = {
									is_attractive_trigger = no
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_winner
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_loser
							}
						}
						else_if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									is_attractive_trigger = no
								}
								event_target:chuseok_ssireum_opponent = {
									is_attractive_trigger = yes
									is_unattractive_trigger = no
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_loser
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_winner
							}
						}
						else_if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									is_unattractive_trigger = no
								}
								event_target:chuseok_ssireum_opponent = {
									is_unattractive_trigger = yes
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_winner
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_loser
							}
						}
						else_if = {
							limit = {
								event_target:chuseok_ssireum_challenger = {
									is_unattractive_trigger = yes
								}
								event_target:chuseok_ssireum_opponent = {
									is_unattractive_trigger = no
								}
							}
							event_target:chuseok_ssireum_challenger = {
								save_event_target_as = chuseok_ssireum_loser
							}
							event_target:chuseok_ssireum_opponent = {
								save_event_target_as = chuseok_ssireum_winner
							}
						}
						else = {
							# Tiebreaker 3: Diplomacy
							if = {
								limit = {
									event_target:chuseok_ssireum_challenger = {
										attribute_diff = {
											character = event_target:chuseok_ssireum_opponent
											attribute = diplomacy
											value >= 1
										}
									}
								}
								event_target:chuseok_ssireum_challenger = {
									save_event_target_as = chuseok_ssireum_winner
								}
								event_target:chuseok_ssireum_opponent = {
									save_event_target_as = chuseok_ssireum_loser
								}
							}
							else_if = {
								limit = {
									event_target:chuseok_ssireum_challenger = {
										attribute_diff = {
											character = event_target:chuseok_ssireum_opponent
											attribute = diplomacy
											value <= -1
										}
									}
								}
								event_target:chuseok_ssireum_challenger = {
									save_event_target_as = chuseok_ssireum_loser
								}
								event_target:chuseok_ssireum_opponent = {
									save_event_target_as = chuseok_ssireum_winner
								}
							}
							else = {
								# Tiebreaker 4: NOT Lustful
								if = {
									limit = {
										event_target:chuseok_ssireum_challenger = {
											NOT = {
												trait = lustful
											}
										}
										event_target:chuseok_ssireum_opponent = {
											trait = lustful
										}
									}
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_winner
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_loser
									}
								}
								else_if = {
									limit = {
										event_target:chuseok_ssireum_challenger = {
											trait = lustful
										}
										event_target:chuseok_ssireum_opponent = {
											NOT = {
												trait = lustful
											}
										}
									}
									event_target:chuseok_ssireum_challenger = {
										save_event_target_as = chuseok_ssireum_winner
									}
									event_target:chuseok_ssireum_opponent = {
										save_event_target_as = chuseok_ssireum_loser
									}
								}
								else = {
									# Just randomize it
									random_list = {
										50 = {
											event_target:chuseok_ssireum_challenger = {
												save_event_target_as = chuseok_ssireum_winner
											}
											event_target:chuseok_ssireum_opponent = {
												save_event_target_as = chuseok_ssireum_loser
											}
										}
										50 = {
											event_target:chuseok_ssireum_challenger = {
												save_event_target_as = chuseok_ssireum_loser
											}
											event_target:chuseok_ssireum_opponent = {
												save_event_target_as = chuseok_ssireum_winner
											}
										}
									}
								}
							}
						}
					}
				}
			}
			else = {
				event_target:chuseok_ssireum_challenger = {
					save_event_target_as = chuseok_ssireum_loser
				}
				event_target:chuseok_ssireum_opponent = {
					save_event_target_as = chuseok_ssireum_winner
				}
			}
		}
		
		# Then fire the appropriate event for the winner
		event_target:chuseok_ssireum_winner = {
			if = {
				limit = {
					has_character_flag = chuseok_ssireum_strength
				}
				character_event = { id = soh.691 }
			}
			else_if = {
				limit = {
					has_character_flag = chuseok_ssireum_endurance
				}
				character_event = { id = soh.695 }
			}
			else_if = {
				limit = {
					has_character_flag = chuseok_ssireum_deception
				}
				character_event = { id = soh.699 }
			}
			else_if = {
				limit = {
					has_character_flag = chuseok_ssireum_seduction
				}
				character_event = { id = soh.704 }
			}
		}
	}
}

# Victory through strength - winner
character_event = {
	id = soh.691
	desc = EVTDESC_SOH_691
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_691 # Good game!
		
		prestige = 50
		
		event_target:chuseok_ssireum_loser = {
			character_event = { id = soh.692 } # Inform the loser
		}
		FROM = {
			character_event = { id = soh.693 } # Inform the liege
		}
	}
}

# Victory through strength - loser
character_event = {
	id = soh.692
	desc = EVTDESC_SOH_692
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_692 # Good game!
		
		prestige = -25
	}
}

# Liege gets notified of winner
character_event = {
	id = soh.693
	desc = EVTDESC_SOH_693
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_693 # That's that...
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				ai = no
				NOR = {
					character = event_target:chuseok_ssireum_challenger
					character = event_target:chuseok_ssireum_opponent
				}
			}
			character_event = { id = soh.694 } # Inform vassals
		}
	}
}

# Vassals get notified of winner
character_event = {
	id = soh.694
	desc = EVTDESC_SOH_694
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_694 # That's that...
	}
}

# Victory through endurance - winner
character_event = {
	id = soh.695
	desc = EVTDESC_SOH_695
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_695 # Good game!
		
		prestige = 50
		
		event_target:chuseok_ssireum_loser = {
			character_event = { id = soh.696 } # Inform the loser
		}
		FROM = {
			character_event = { id = soh.697 } # Inform the liege
		}
	}
}

# Victory through endurance - loser
character_event = {
	id = soh.696
	desc = EVTDESC_SOH_696
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_696 # Good game!
		
		prestige = -25
	}
}

# Liege gets notified of winner
character_event = {
	id = soh.697
	desc = EVTDESC_SOH_697
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_697 # That's that...
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				ai = no
				NOR = {
					character = event_target:chuseok_ssireum_challenger
					character = event_target:chuseok_ssireum_opponent
				}
			}
			character_event = { id = soh.698 } # Inform vassals
		}
	}
}

# Vassals get notified of winner
character_event = {
	id = soh.698
	desc = EVTDESC_SOH_698
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_698 # That's that...
	}
}

# Victory through dirty trick - winner
character_event = {
	id = soh.699
	desc = EVTDESC_SOH_699
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_699 # That was easy!
		
		prestige = 25
		
		event_target:chuseok_ssireum_loser = {
			character_event = { id = soh.700 } # Inform the loser
		}
		FROM = {
			character_event = { id = soh.702 } # Inform the liege
		}
	}
}

# Victory through dirty trick - loser might rival
character_event = {
	id = soh.700
	desc = EVTDESC_SOH_700
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_700 # That was some trick...
		
		prestige = -50
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = proud
			}
			modifier = {
				factor = 0
				trait = wroth
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_700 # I hate dirty cheaters like you!
		
		add_rival = FROM
		
		FROM = {
			character_event = { id = soh.701 days = 1 }
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.1
				trait = humble
			}
			modifier = {
				factor = 0
				trait = patient
			}
		}
	}
}

# Winner informed of rivalry
character_event = {
	id = soh.701
	desc = EVTDESC_SOH_701
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_701 # I see...
		
		add_rival = FROM
	}
}

# Liege gets notified of winner
character_event = {
	id = soh.702
	desc = EVTDESC_SOH_702
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_702 # That's that...
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				ai = no
				NOR = {
					character = event_target:chuseok_ssireum_challenger
					character = event_target:chuseok_ssireum_opponent
				}
			}
			character_event = { id = soh.703 } # Inform vassals
		}
	}
}

# Vassals get notified of winner
character_event = {
	id = soh.703
	desc = EVTDESC_SOH_703
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_703 # That's that...
	}
}

# Victory through seduction - winner
character_event = {
	id = soh.704
	desc = EVTDESC_SOH_704
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_704 # Well, that worked...
		
		prestige = 25
		
		event_target:chuseok_ssireum_loser = {
			character_event = { id = soh.705 } # Inform the loser
		}
		FROM = {
			character_event = { id = soh.711 } # Inform the liege
		}
	}
}

# Victory through seduction - loser might try to tumble
character_event = {
	id = soh.705
	desc = EVTDESC_SOH_705
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_705 # Yes!
		
		FROMFROM = {
			character_event = { id = soh.706 days = 1 } # Other party approached
		}
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				FROMFROM = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				FROMFROM = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_705 # I don't think so!
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Target approached
character_event = {
	id = soh.706
	desc = EVTDESC_SOH_706
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_706 # Yes!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		FROM = {
			character_event = { id = soh.708 } # FROM informed
		}
		unprotected_sex_effect = yes
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				FROM = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				FROM = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_706 # I don't think so!
		
		FROM = {
			character_event = { id = soh.707 } # FROM informed
		}
		
		piety = 10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# No tumbling
character_event = {
	id = soh.707
	desc = EVTDESC_SOH_707
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_707 # I see...
		
		prestige = -25
	}
}

# Tumbling - become lovers?
character_event = {
	id = soh.708
	desc = EVTDESC_SOH_708
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_708 # We should do this again!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		add_lover = FROM
		
		FROM = {
			character_event = { id = soh.709 days = 1 } # Inform FROM
		}
	}
	
	option = {
		name = EVTOPTB_SOH_708 # This shouldn't become a long-term thing...
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		FROM = {
			character_event = { id = soh.710 days = 1 } # Inform FROM
		}
	}
}

# Lovers
character_event = {
	id = soh.709
	desc = EVTDESC_SOH_709
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_709 # That's great!
		
		add_lover = FROM
	}
}

# Not lovers
character_event = {
	id = soh.710
	desc = EVTDESC_SOH_710
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_710 # Perhaps that's for the best...
	}
}

# Liege gets notified of winner
character_event = {
	id = soh.711
	desc = EVTDESC_SOH_711
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_711 # That's that...
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				ai = no
				NOR = {
					character = event_target:chuseok_ssireum_challenger
					character = event_target:chuseok_ssireum_opponent
				}
			}
			character_event = { id = soh.712 } # Inform vassals
		}
	}
}

# Vassals get notified of winner
character_event = {
	id = soh.712
	desc = EVTDESC_SOH_712
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_712 # That's that...
	}
}

### Ssireum - others

# Normal Ssireum - liege
character_event = {
	id = soh.713
	desc = EVTDESC_SOH_713
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	option = {
		name = EVTOPTA_SOH_713 # That's that...
		
		prestige = 10
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				ai = no
			}
			character_event = { id = soh.714 } # Inform vassals
		}
	}
}

# Normal Ssireum - vassals
character_event = {
	id = soh.714
	desc = EVTDESC_SOH_714
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_714 # That's that...
	}
}

# Commoner distinguishes themselves - recruit them?
character_event = {
	id = soh.715
	desc = EVTDESC_SOH_715
	picture = GFX_evt_china_stable
	border = GFX_event_normal_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	immediate = {
		if = {
			limit = {
				has_religion_feature = religion_matriarchal
			}
			create_random_soldier = {
				age = 25
				female = yes
				trait = strong
				dynasty = none
				religion = ROOT
				culture = ROOT
				random_traits = yes
			}
			new_character = {
				save_event_target_as = ssireum_champion
			}
		}
		else = {
			create_random_soldier = {
				age = 25
				female = no
				trait = strong
				dynasty = none
				religion = ROOT
				culture = ROOT
				random_traits = yes
			}
			new_character = {
				save_event_target_as = ssireum_champion
			}
		}
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				ai = no
			}
			character_event = { id = soh.714 } # Inform vassals
		}
	}
	
	option = {
		name = EVTOPTA_SOH_715 # You should join my court!
		
		wealth = -25
		event_target:ssireum_champion = {
			wealth = 25
		}
	}
	
	option = {
		name = EVTOPTB_SOH_715 # I don't need them!
		
		event_target:ssireum_champion = {
			leave_court_and_die_effect = yes
		}
	}
}

##### Event selection + event groups 3

# Event selection 3
character_event = {
	id = soh.716
	hide_window = yes
	
	is_triggered_only = yes

	only_rulers = yes
	capable_only = yes
	prisoner = no
	war = no

	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	immediate = {
		# Ganggangsullae
		character_event = { id = soh.717 days = 1 random = 1 }
		
		# Hangwa - based on vanilla
		random = {
			chance = 50
			if = {
				limit = {
					OR = {
						has_character_flag = chuseok_extra_hangwa
						has_character_flag = chuseok_enough_hangwa
						has_character_flag = chuseok_no_hangwa
					}
				}
				random_list = {
					10 = {
						modifier = {
							factor = 0
							NOR = {
								has_character_flag = chuseok_extra_hangwa
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.725 days = 5 random = 2 } # Extra Hangwa
						}
					}
					10 = {
						modifier = {
							factor = 0
							NOR = {
								has_character_flag = chuseok_enough_hangwa
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.726 days = 5 random = 2 } # Normal Hangwa
						}
					}
					10 = {
						modifier = {
							factor = 0
							NOR = {
								has_character_flag = chuseok_no_hangwa
								any_vassal = {
									has_character_flag = coming_to_chuseok
									war = no
								}
							}
						}
						any_vassal = {
							limit = { 
								has_character_flag = coming_to_chuseok
								war = no
							}
							score_value = { #Prioritizes selecting an interesting courtier...
								value = 10
								interesting_courtier_selection_score = yes
							}
							character_event = { id = soh.727 days = 5 random = 2 } # No Hangwa
						}
					}
				}
			}
		}
		
		# Drinks
		random = {
			chance = 50
			if = {
				limit = {
					has_character_flag = chuseok_extra_drinks
				}
				character_event = { id = soh.730 days = 5 random = 2 } # Extra drinks - might lose Temperate/become a Drunkard
			}
			else_if = {
				limit = {
					has_character_flag = chuseok_enough_drinks
				}
				character_event = { id = soh.734 days = 5 random = 2 } # Enough drinks - nothing of note
			}
			else_if = {
				limit = {
					has_character_flag = chuseok_no_drinks
				}
				character_event = { id = soh.735 days = 5 random = 2 } # No drinks - complaints
			}
		}
		
		# End of Chuseok
		character_event = { id = soh.737 days = 10 } # End of Chuseok - liege
	}
}

### Ganggangsullae

# Ganggangsullae - liege
character_event = {
	id = soh.717
	desc = EVTDESC_SOH_717
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}
	
	immediate = {
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
				war = no
			}
			character_event = { id = soh.720 } # Vassals get their event
		}
	}
	
	option = {
		name = EVTOPTA_SOH_717 # That's nice...
		
		if = {
			limit = {
				is_adult = yes
				prefers_men_trigger = no
			}
			random = {
				chance = 5
				character_event = { id = soh.723 days = 2 random = 1 } # Possible tumbling
			}
		}
	}
	
	option = {
		trigger = {
			is_female = yes
		}
		name = EVTOPTB_SOH_717 # I think I'll join...
		
		random_list = {
			10 = {
				character_event = { id = soh.718 days = 1 } # It goes very well
				if = {
					limit = {
						is_adult = yes
						prefers_men_trigger = no
					}
					random = {
						chance = 10
						character_event = { id = soh.723 days = 2 random = 1 } # Possible tumbling
					}
				}
			}
			80 = {
				# It goes okay
				if = {
					limit = {
						is_adult = yes
						prefers_men_trigger = no
					}
					random = {
						chance = 5
						character_event = { id = soh.723 days = 2 random = 1 } # Possible tumbling
					}
				}
			}
			10 = {
				character_event = { id = soh.719 days = 1 } # It goes very poorly
			}
		}
		
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				trait = shy
			}
			modifier = {
				factor = 0
				trait = proud
			}
		}
	}
}

# You joined in - it went well
character_event = {
	id = soh.718
	desc = EVTDESC_SOH_718
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_718 # Yay!
		
		prestige = 10
	}
}

# You joined in - it went poorly
character_event = {
	id = soh.719
	desc = EVTDESC_SOH_719
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_719 # Ow!
		
		prestige = -10
		
		random = {
			chance = 5
			add_trait_wounded_effect = yes
		}
	}
}

# Ganggangsullae - vassal
character_event = {
	id = soh.720
	desc = EVTDESC_SOH_720
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_720 # That's nice...
		
		if = {
			limit = {
				is_adult = yes
				prefers_men_trigger = no
			}
			random = {
				chance = 5
				character_event = { id = soh.723 days = 2 random = 1 } # Possible tumbling
			}
		}
	}
	
	option = {
		trigger = {
			is_female = yes
		}
		name = EVTOPTB_SOH_720 # I think I'll join...
		
		random_list = {
			10 = {
				character_event = { id = soh.721 days = 1 } # It goes very well
				if = {
					limit = {
						is_adult = yes
						prefers_men_trigger = no
					}
					random = {
						chance = 10
						character_event = { id = soh.723 days = 2 random = 1 } # Possible tumbling
					}
				}
			}
			80 = {
				# It goes okay
				if = {
					limit = {
						is_adult = yes
						prefers_men_trigger = no
					}
					random = {
						chance = 5
						character_event = { id = soh.723 days = 2 random = 1 } # Possible tumbling
					}
				}
			}
			10 = {
				character_event = { id = soh.722 days = 1 } # It goes very poorly
			}
		}
		
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				trait = shy
			}
			modifier = {
				factor = 0
				trait = proud
			}
		}
	}
}

# You joined in - it went well
character_event = {
	id = soh.721
	desc = EVTDESC_SOH_721
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_721 # Yay!
		
		prestige = 10
	}
}

# You joined in - it went poorly
character_event = {
	id = soh.722
	desc = EVTDESC_SOH_722
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_722 # Ow!
		
		prestige = -10
		
		random = {
			chance = 5
			add_trait_wounded_effect = yes
		}
	}
}

# Pretty Ganggangsullae dancer - tumble?
character_event = {
	id = soh.723
	desc = EVTDESC_SOH_723
	picture = GFX_evt_feast
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	immediate = {
		create_character = {
			age = 17
			dynasty = none
			culture = FROMFROM
			religion = FROMFROM
			female = yes
			trait = fair
			trait = lustful
			random_traits = yes
		}
		new_character = {
			if = {
				limit = {
					ROOT = {
						is_female = yes
						trait = homosexual
					}
				}
				add_trait = homosexual
			}
			save_event_target_as = chuseok_pretty_dancer
		}
	}
	
	option = {
		name = EVTOPTA_SOH_723 # Yes!
		
		if = {
			limit = {
				trait = chaste
			}
			remove_trait = chaste
		}
		if = {
			limit = {
				trait = celibate
			}
			remove_trait = celibate
		}
		
		event_target:chuseok_pretty_dancer = {
			save_event_target_as = sex_partner
		}
		unprotected_sex_effect_event_target = yes
		
		character_event = { id = soh.724 days = 1 } # Become lovers?
		
		piety = -10
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				trait = celibate
			}
			modifier = {
				factor = 0
				is_ascetic_trigger = yes
				NOT = {
					trait = lustful
				}
			}
			modifier = {
				factor = 0.1
				event_target:chuseok_pretty_dancer = {
					is_unattractive_trigger = yes
				}
			}
			modifier = {
				factor = 5
				event_target:chuseok_pretty_dancer = {
					is_attractive_trigger = yes
				}
			}
		}
	}
	
	option = {
		name = EVTOPTB_SOH_723 # I don't think so!
		
		piety = 10
		
		event_target:chuseok_pretty_dancer = {
			leave_court_and_die_effect = yes
		}
		
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				trait = lustful
			}
			modifier = {
				factor = 0
				OR = {
					trait = seducer
					trait = seductress
				}
			}
		}
	}
}

# Tumbling happened - become lovers?
character_event = {
	id = soh.724
	desc = EVTDESC_SOH_724
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_724 # This must be love!
		
		add_lover = event_target:chuseok_pretty_dancer
	}
	
	option = {
		name = EVTOPTB_SOH_724 # Goodbye!
		
		event_target:chuseok_pretty_dancer = {
			leave_court_effect = yes
			random = {
				chance = 25
				add_rival = ROOT
			}
		}
	}
}

### Hangwa - copied from vanilla food

# Extra Hangwa
character_event = {
	id = soh.725
	desc = EVTDESC_SOH_725
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		FROM = {
			has_character_modifier = chuseok_in_progress
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_725 # Approve publicly
		trigger = {
			NOT = { trait = temperate }
		}
		gain_weight_small_effect = yes
		weight_trait_check_effect = yes
		ai_chance = {
			factor = 40

			modifier = {
				factor = 5
				trait = gluttonous
			}
		}
		FROM = {
			character_event = { id = soh.728 }
		}
	}
	option = {
		name = EVTOPTB_SOH_725 # Disapprove
		trigger = {
			NOT = { trait = gluttonous }
		}
		ai_chance = {
			factor = 20

			modifier = {
				factor = 5
				trait = temperate
			}
		}
		FROM = {
			character_event = { id = soh.729 }
		}
	}
	option = {
		name = EVTOPTC_SOH_725 # Say nothing
		prestige = -10
	}
}

# Enough Hangwa
character_event = {
	id = soh.726
	desc = EVTDESC_SOH_726
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		FROM = {
			has_character_modifier = chuseok_in_progress
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_726 # Approve publicly
		FROM = {
			character_event = { id = soh.728 }
		}
	}
	option = {
		name = EVTOPTB_SOH_726 # Disapprove publicly
		FROM = {
			character_event = { id = soh.729 }
		}
	}
	option = {
		name = EVTOPTC_SOH_726 # Say nothing
		prestige = -10
	}
}

# No Hangwa
character_event = {
	id = soh.727
	desc = EVTDESC_SOH_727
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		FROM = {
			has_character_modifier = chuseok_in_progress
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_727 # Approve publicly
		trigger = {
			NOT = { trait = gluttonous }
		}
		ai_chance = {
			factor = 20

			modifier = {
				factor = 5
				trait = temperate
			}
		}
		FROM = {
			character_event = { id = soh.728 }
		}
	}
	option = {
		name = EVTOPTB_SOH_727 # Disapprove publicly
		trigger = {
			NOT = { trait = temperate }
		}
		ai_chance = {
			factor = 40

			modifier = {
				factor = 5
				trait = gluttonous
			}
		}
		FROM = {
			character_event = { id = soh.729 }
		}
	}
	option = {
		name = EVTOPTC_SOH_727 # Say nothing
		prestige = -10
	}
}

# Liege is glad you liked the food at the feast
character_event = {
	id = soh.728
	desc = EVTDESC_SOH_728
	picture = GFX_evt_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_728 # Good!
		opinion = {
			modifier = opinion_happy
			who = FROM
			years = 10
		}
		reverse_opinion = {
			modifier = opinion_approves
			who = FROM
			years = 10
		}
	}
}

# Liege dislikes you complaining about the food at the feast
character_event = {
	id = soh.729
	desc = EVTDESC_SOH_729
	picture = GFX_evt_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_729 # Shut up!
		opinion = {
			modifier = opinion_irritated
			who = FROM
			years = 10
		}
		reverse_opinion = {
			modifier = opinion_disapprove
			who = FROM
			years = 10
		}
	}
}

### Drinks

# Extra drinks - liege
character_event = {
	id = soh.730
	desc = EVTDESC_SOH_730
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_730 # That's good!
		
		prestige = 10
		
		if = {
			limit = {
				trait = temperate
			}
			random = {
				chance = 5
				remove_trait_temperate_effect = yes
			}
		}
		else_if = {
			limit = {
				NOT = {
					trait = drunkard
				}
			}
			random = {
				chance = 5
				add_trait_drunkard_effect = yes
			}
		}
		if = {
			limit = {
				trait = drunkard
			}
			random = {
				chance = 25
				character_event = { id = soh.731 days = 1 random = 1 } # You had way too much to drink
			}
		}
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
			}
			opinion = {
				who = ROOT
				modifier = opinion_good_chuseok
			}
			character_event = { id = soh.732 } # Inform vassals
		}
	}
}

# You drank far too much
character_event = {
	id = soh.731
	desc = EVTDESC_SOH_731
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_731 # That went poorly...
		
		prestige = -10
	}
}

# Extra drinks - vassals
character_event = {
	id = soh.732
	desc = EVTDESC_SOH_732
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_732 # That's good!
		
		if = {
			limit = {
				trait = temperate
			}
			random = {
				chance = 5
				remove_trait_temperate_effect = yes
			}
		}
		else_if = {
			limit = {
				NOT = {
					trait = drunkard
				}
			}
			random = {
				chance = 5
				add_trait_drunkard_effect = yes
			}
		}
		if = {
			limit = {
				trait = drunkard
			}
			random = {
				chance = 25
				character_event = { id = soh.733 days = 1 random = 1 } # You had way too much to drink
			}
		}
	}
}

# You drank far too much
character_event = {
	id = soh.733
	desc = EVTDESC_SOH_733
	picture = GFX_evt_drunk

	only_rulers = yes
	capable_only = yes
	prisoner = no

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_733 # That went poorly...
		
		prestige = -10
	}
}

# Enough drinks
character_event = {
	id = soh.734
	desc = EVTDESC_SOH_734
	picture = GFX_evt_feast

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_734 # Nobody has complained, at least...
	}
}

# No drinks - liege
character_event = {
	id = soh.735
	desc = EVTDESC_SOH_735
	picture = GFX_evt_scandal

	only_rulers = yes
	capable_only = yes
	prisoner = no
	
	trigger = {
		has_character_modifier = chuseok_in_progress
	}

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_735 # That's bad...
		
		prestige = -10
		
		any_vassal = {
			limit = {
				has_character_flag = coming_to_chuseok
			}
			opinion = {
				who = ROOT
				modifier = opinion_bad_chuseok
			}
			character_event = { id = soh.736 } # Inform vassals
		}
	}
}

# No drinks - vassals
character_event = {
	id = soh.736
	desc = EVTDESC_SOH_736
	picture = GFX_evt_scandal

	only_rulers = yes
	capable_only = yes
	prisoner = no

	is_triggered_only = yes
	
	option = {
		name = EVTOPTA_SOH_736 # That's bad!
	}
}

##### End of Chuseok + cleanup events

# Normal end
character_event = {
	id = soh.737
	desc = EVTDESC_SOH_737
	picture = GFX_evt_feast

	capable_only = yes
	prisoner = no

	is_triggered_only = yes

	trigger = {
		has_character_modifier = lny_in_progress
	}

	option = {
		name = EVTOPTA_SOH_737 # Time to get back to work...
		prestige = 10
		piety = 10
		set_character_flag = recent_chuseok
		
		hidden_tooltip = {
			remove_character_modifier = chuseok_in_progress
			# Flag cleanup
			clr_character_flag = chuseok_enough_drinks
			clr_character_flag = chuseok_enough_hangwa
			clr_character_flag = chuseok_enough_songpyeon
			clr_character_flag = chuseok_extra_drinks
			clr_character_flag = chuseok_extra_hangwa
			clr_character_flag = chuseok_extra_songpyeon
			clr_character_flag = chuseok_no_drinks
			clr_character_flag = chuseok_no_hangwa
			clr_character_flag = chuseok_no_songpyeon
			clr_character_flag = chuseok_not_rigged_juldarigiri
			clr_character_flag = chuseok_rigged_juldarigiri
			clr_character_flag = chuseok_ssireum_deception
			clr_character_flag = chuseok_ssireum_endurance
			clr_character_flag = chuseok_ssireum_seduction
			clr_character_flag = chuseok_ssireum_strength
			clr_character_flag = coming_to_chuseok
			clr_character_flag = do_not_disturb
			clr_character_flag = guest_chuseok_started
			clr_character_flag = host_chuseok_started
			clr_character_flag = lavishly_food
			clr_character_flag = low_food
			clr_character_flag = medium_food
			clr_character_flag = sent_invitations
			any_vassal = {
				limit = {
					has_character_flag = guest_chuseok_started
				}
				character_event = { id = soh.738 }
				remove_opinion = {
					modifier = opinion_enjoyed_chuseok
					who = ROOT
				}
				opinion = {
					modifier = opinion_enjoyed_chuseok
					who = ROOT
					years = 2
				}
				# Flag cleanup
				clr_character_flag = chuseok_enough_drinks
				clr_character_flag = chuseok_enough_hangwa
				clr_character_flag = chuseok_enough_songpyeon
				clr_character_flag = chuseok_extra_drinks
				clr_character_flag = chuseok_extra_hangwa
				clr_character_flag = chuseok_extra_songpyeon
				clr_character_flag = chuseok_no_drinks
				clr_character_flag = chuseok_no_hangwa
				clr_character_flag = chuseok_no_songpyeon
				clr_character_flag = chuseok_not_rigged_juldarigiri
				clr_character_flag = chuseok_rigged_juldarigiri
				clr_character_flag = chuseok_ssireum_deception
				clr_character_flag = chuseok_ssireum_endurance
				clr_character_flag = chuseok_ssireum_seduction
				clr_character_flag = chuseok_ssireum_strength
				clr_character_flag = coming_to_chuseok
				clr_character_flag = do_not_disturb
				clr_character_flag = guest_chuseok_started
				clr_character_flag = host_chuseok_started
				clr_character_flag = lavishly_food
				clr_character_flag = low_food
				clr_character_flag = medium_food
				clr_character_flag = sent_invitations
			}
			any_courtier = {
				# Flag cleanup
				clr_character_flag = chuseok_enough_drinks
				clr_character_flag = chuseok_enough_hangwa
				clr_character_flag = chuseok_enough_songpyeon
				clr_character_flag = chuseok_extra_drinks
				clr_character_flag = chuseok_extra_hangwa
				clr_character_flag = chuseok_extra_songpyeon
				clr_character_flag = chuseok_no_drinks
				clr_character_flag = chuseok_no_hangwa
				clr_character_flag = chuseok_no_songpyeon
				clr_character_flag = chuseok_not_rigged_juldarigiri
				clr_character_flag = chuseok_rigged_juldarigiri
				clr_character_flag = chuseok_ssireum_deception
				clr_character_flag = chuseok_ssireum_endurance
				clr_character_flag = chuseok_ssireum_seduction
				clr_character_flag = chuseok_ssireum_strength
				clr_character_flag = coming_to_chuseok
				clr_character_flag = do_not_disturb
				clr_character_flag = guest_chuseok_started
				clr_character_flag = host_chuseok_started
				clr_character_flag = lavishly_food
				clr_character_flag = low_food
				clr_character_flag = medium_food
				clr_character_flag = sent_invitations
			}
		}
	}
}

# Normal end - vassals
character_event = {
	id = soh.738
	desc = EVTDESC_SOH_738
	picture = GFX_evt_feast

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_738 # Time to get back to work...
		prestige = 5
		piety = 5
	}
}

# Chuseok cancelled
character_event = {
	id = soh.739
	desc = EVTDESC_SOH_739
	picture = GFX_evt_china_isolationist

	only_rulers = yes
	war = yes

	mean_time_to_happen = {
		days = 1
	}

	trigger = {
		has_character_modifier = chuseok_in_progress
	}

	option = {
		name = EVTOPTA_SOH_739 # I see...
		hidden_tooltip = {
			remove_character_modifier = chuseok_in_progress
			# Flag cleanup
			clr_character_flag = chuseok_enough_drinks
			clr_character_flag = chuseok_enough_hangwa
			clr_character_flag = chuseok_enough_songpyeon
			clr_character_flag = chuseok_extra_drinks
			clr_character_flag = chuseok_extra_hangwa
			clr_character_flag = chuseok_extra_songpyeon
			clr_character_flag = chuseok_no_drinks
			clr_character_flag = chuseok_no_hangwa
			clr_character_flag = chuseok_no_songpyeon
			clr_character_flag = chuseok_not_rigged_juldarigiri
			clr_character_flag = chuseok_rigged_juldarigiri
			clr_character_flag = chuseok_ssireum_deception
			clr_character_flag = chuseok_ssireum_endurance
			clr_character_flag = chuseok_ssireum_seduction
			clr_character_flag = chuseok_ssireum_strength
			clr_character_flag = coming_to_chuseok
			clr_character_flag = do_not_disturb
			clr_character_flag = guest_chuseok_started
			clr_character_flag = host_chuseok_started
			clr_character_flag = lavishly_food
			clr_character_flag = low_food
			clr_character_flag = medium_food
			clr_character_flag = sent_invitations
			any_vassal = {
				limit = {
					has_character_flag = guest_chuseok_started
				}
				letter_event = { id = soh.740 }
				# Flag cleanup
				clr_character_flag = chuseok_enough_drinks
				clr_character_flag = chuseok_enough_hangwa
				clr_character_flag = chuseok_enough_songpyeon
				clr_character_flag = chuseok_extra_drinks
				clr_character_flag = chuseok_extra_hangwa
				clr_character_flag = chuseok_extra_songpyeon
				clr_character_flag = chuseok_no_drinks
				clr_character_flag = chuseok_no_hangwa
				clr_character_flag = chuseok_no_songpyeon
				clr_character_flag = chuseok_not_rigged_juldarigiri
				clr_character_flag = chuseok_rigged_juldarigiri
				clr_character_flag = chuseok_ssireum_deception
				clr_character_flag = chuseok_ssireum_endurance
				clr_character_flag = chuseok_ssireum_seduction
				clr_character_flag = chuseok_ssireum_strength
				clr_character_flag = coming_to_chuseok
				clr_character_flag = do_not_disturb
				clr_character_flag = guest_chuseok_started
				clr_character_flag = host_chuseok_started
				clr_character_flag = lavishly_food
				clr_character_flag = low_food
				clr_character_flag = medium_food
				clr_character_flag = sent_invitations
			}
			any_courtier = {
				# Flag cleanup
				clr_character_flag = chuseok_enough_drinks
				clr_character_flag = chuseok_enough_hangwa
				clr_character_flag = chuseok_enough_songpyeon
				clr_character_flag = chuseok_extra_drinks
				clr_character_flag = chuseok_extra_hangwa
				clr_character_flag = chuseok_extra_songpyeon
				clr_character_flag = chuseok_no_drinks
				clr_character_flag = chuseok_no_hangwa
				clr_character_flag = chuseok_no_songpyeon
				clr_character_flag = chuseok_not_rigged_juldarigiri
				clr_character_flag = chuseok_rigged_juldarigiri
				clr_character_flag = chuseok_ssireum_deception
				clr_character_flag = chuseok_ssireum_endurance
				clr_character_flag = chuseok_ssireum_seduction
				clr_character_flag = chuseok_ssireum_strength
				clr_character_flag = coming_to_chuseok
				clr_character_flag = do_not_disturb
				clr_character_flag = guest_chuseok_started
				clr_character_flag = host_chuseok_started
				clr_character_flag = lavishly_food
				clr_character_flag = low_food
				clr_character_flag = medium_food
				clr_character_flag = sent_invitations
			}
		}
	}
}

# Chuseok cancelled - vassals
letter_event = {
	id = soh.740
	desc = EVTDESC_SOH_740

	is_triggered_only = yes

	option = {
		name = EVTOPTA_SOH_740 # I see...
	}
}

# Flag cleanup
character_event = {
	id = soh.741
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		# Flag cleanup
		clr_character_flag = chuseok_enough_drinks
		clr_character_flag = chuseok_enough_hangwa
		clr_character_flag = chuseok_enough_songpyeon
		clr_character_flag = chuseok_extra_drinks
		clr_character_flag = chuseok_extra_hangwa
		clr_character_flag = chuseok_extra_songpyeon
		clr_character_flag = chuseok_no_drinks
		clr_character_flag = chuseok_no_hangwa
		clr_character_flag = chuseok_no_songpyeon
		clr_character_flag = chuseok_not_rigged_juldarigiri
		clr_character_flag = chuseok_rigged_juldarigiri
		clr_character_flag = chuseok_ssireum_deception
		clr_character_flag = chuseok_ssireum_endurance
		clr_character_flag = chuseok_ssireum_seduction
		clr_character_flag = chuseok_ssireum_strength
		clr_character_flag = coming_to_chuseok
		clr_character_flag = do_not_disturb
		clr_character_flag = guest_chuseok_started
		clr_character_flag = host_chuseok_started
		clr_character_flag = lavishly_food
		clr_character_flag = low_food
		clr_character_flag = medium_food
		clr_character_flag = sent_invitations
		any_courtier = {
			limit = {
				has_character_flag = guest_chuseok_started
			}
			# Flag cleanup
			clr_character_flag = chuseok_enough_drinks
			clr_character_flag = chuseok_enough_hangwa
			clr_character_flag = chuseok_enough_songpyeon
			clr_character_flag = chuseok_extra_drinks
			clr_character_flag = chuseok_extra_hangwa
			clr_character_flag = chuseok_extra_songpyeon
			clr_character_flag = chuseok_no_drinks
			clr_character_flag = chuseok_no_hangwa
			clr_character_flag = chuseok_no_songpyeon
			clr_character_flag = chuseok_not_rigged_juldarigiri
			clr_character_flag = chuseok_rigged_juldarigiri
			clr_character_flag = chuseok_ssireum_deception
			clr_character_flag = chuseok_ssireum_endurance
			clr_character_flag = chuseok_ssireum_seduction
			clr_character_flag = chuseok_ssireum_strength
			clr_character_flag = coming_to_chuseok
			clr_character_flag = do_not_disturb
			clr_character_flag = guest_chuseok_started
			clr_character_flag = host_chuseok_started
			clr_character_flag = lavishly_food
			clr_character_flag = low_food
			clr_character_flag = medium_food
			clr_character_flag = sent_invitations
		}
		any_vassal = {
			limit = {
				has_character_flag = guest_chuseok_started
			}
			# Flag cleanup
			clr_character_flag = chuseok_enough_drinks
			clr_character_flag = chuseok_enough_hangwa
			clr_character_flag = chuseok_enough_songpyeon
			clr_character_flag = chuseok_extra_drinks
			clr_character_flag = chuseok_extra_hangwa
			clr_character_flag = chuseok_extra_songpyeon
			clr_character_flag = chuseok_no_drinks
			clr_character_flag = chuseok_no_hangwa
			clr_character_flag = chuseok_no_songpyeon
			clr_character_flag = chuseok_not_rigged_juldarigiri
			clr_character_flag = chuseok_rigged_juldarigiri
			clr_character_flag = chuseok_ssireum_deception
			clr_character_flag = chuseok_ssireum_endurance
			clr_character_flag = chuseok_ssireum_seduction
			clr_character_flag = chuseok_ssireum_strength
			clr_character_flag = coming_to_chuseok
			clr_character_flag = do_not_disturb
			clr_character_flag = guest_chuseok_started
			clr_character_flag = host_chuseok_started
			clr_character_flag = lavishly_food
			clr_character_flag = low_food
			clr_character_flag = medium_food
			clr_character_flag = sent_invitations
		}
	}
}